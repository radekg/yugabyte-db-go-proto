// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: yb/master/master_client.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Info about a single tablet server, returned to the client as part
// of the GetTabletLocations response. This can be used on the client
// to update the local cache of where each TS UUID is located. In
// the future we may also want to transmit software version info,
// load info, topology, etc.
type TSInfoPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermanentUuid       []byte        `protobuf:"bytes,1,req,name=permanent_uuid,json=permanentUuid" json:"permanent_uuid,omitempty"`
	PrivateRpcAddresses []*HostPortPB `protobuf:"bytes,2,rep,name=private_rpc_addresses,json=privateRpcAddresses" json:"private_rpc_addresses,omitempty"`
	BroadcastAddresses  []*HostPortPB `protobuf:"bytes,5,rep,name=broadcast_addresses,json=broadcastAddresses" json:"broadcast_addresses,omitempty"`
	CloudInfo           *CloudInfoPB  `protobuf:"bytes,3,opt,name=cloud_info,json=cloudInfo" json:"cloud_info,omitempty"`
	PlacementUuid       []byte        `protobuf:"bytes,4,opt,name=placement_uuid,json=placementUuid" json:"placement_uuid,omitempty"`
	// Capabilities of tablet server.
	Capabilities []uint32 `protobuf:"fixed32,6,rep,name=capabilities" json:"capabilities,omitempty"`
}

func (x *TSInfoPB) Reset() {
	*x = TSInfoPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSInfoPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSInfoPB) ProtoMessage() {}

func (x *TSInfoPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSInfoPB.ProtoReflect.Descriptor instead.
func (*TSInfoPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{0}
}

func (x *TSInfoPB) GetPermanentUuid() []byte {
	if x != nil {
		return x.PermanentUuid
	}
	return nil
}

func (x *TSInfoPB) GetPrivateRpcAddresses() []*HostPortPB {
	if x != nil {
		return x.PrivateRpcAddresses
	}
	return nil
}

func (x *TSInfoPB) GetBroadcastAddresses() []*HostPortPB {
	if x != nil {
		return x.BroadcastAddresses
	}
	return nil
}

func (x *TSInfoPB) GetCloudInfo() *CloudInfoPB {
	if x != nil {
		return x.CloudInfo
	}
	return nil
}

func (x *TSInfoPB) GetPlacementUuid() []byte {
	if x != nil {
		return x.PlacementUuid
	}
	return nil
}

func (x *TSInfoPB) GetCapabilities() []uint32 {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type TabletLocationsPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletId []byte `protobuf:"bytes,1,req,name=tablet_id,json=tabletId" json:"tablet_id,omitempty"`
	// DEPRECATED.
	StartKey  []byte                         `protobuf:"bytes,2,opt,name=start_key,json=startKey" json:"start_key,omitempty"`
	EndKey    []byte                         `protobuf:"bytes,3,opt,name=end_key,json=endKey" json:"end_key,omitempty"`
	Partition *PartitionPB                   `protobuf:"bytes,6,opt,name=partition" json:"partition,omitempty"`
	Replicas  []*TabletLocationsPB_ReplicaPB `protobuf:"bytes,4,rep,name=replicas" json:"replicas,omitempty"`
	// true if the tablet was running but no tablet server has reported it yet.
	// The set of replicas will be the last one that was hosting the tablet.
	// This should happen on Master restart when the request is issued before
	// the TS has the time to notify the Master about the tablets that is hosting.
	Stale   *bool  `protobuf:"varint,5,req,name=stale" json:"stale,omitempty"`
	TableId []byte `protobuf:"bytes,7,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	// Table ids for all the tables on this tablet.
	TableIds [][]byte `protobuf:"bytes,8,rep,name=table_ids,json=tableIds" json:"table_ids,omitempty"`
	// See SysTabletsEntryPB for fields with the same name.
	SplitDepth          *uint64  `protobuf:"varint,9,opt,name=split_depth,json=splitDepth" json:"split_depth,omitempty"`
	SplitParentTabletId []byte   `protobuf:"bytes,12,opt,name=split_parent_tablet_id,json=splitParentTabletId" json:"split_parent_tablet_id,omitempty"`
	SplitTabletIds      [][]byte `protobuf:"bytes,13,rep,name=split_tablet_ids,json=splitTabletIds" json:"split_tablet_ids,omitempty"`
	// Number of expected live replicas.
	ExpectedLiveReplicas *int32 `protobuf:"varint,10,opt,name=expected_live_replicas,json=expectedLiveReplicas" json:"expected_live_replicas,omitempty"`
	// Number of expected read replicas.
	ExpectedReadReplicas *int32 `protobuf:"varint,11,opt,name=expected_read_replicas,json=expectedReadReplicas" json:"expected_read_replicas,omitempty"`
}

func (x *TabletLocationsPB) Reset() {
	*x = TabletLocationsPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TabletLocationsPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabletLocationsPB) ProtoMessage() {}

func (x *TabletLocationsPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabletLocationsPB.ProtoReflect.Descriptor instead.
func (*TabletLocationsPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{1}
}

func (x *TabletLocationsPB) GetTabletId() []byte {
	if x != nil {
		return x.TabletId
	}
	return nil
}

func (x *TabletLocationsPB) GetStartKey() []byte {
	if x != nil {
		return x.StartKey
	}
	return nil
}

func (x *TabletLocationsPB) GetEndKey() []byte {
	if x != nil {
		return x.EndKey
	}
	return nil
}

func (x *TabletLocationsPB) GetPartition() *PartitionPB {
	if x != nil {
		return x.Partition
	}
	return nil
}

func (x *TabletLocationsPB) GetReplicas() []*TabletLocationsPB_ReplicaPB {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *TabletLocationsPB) GetStale() bool {
	if x != nil && x.Stale != nil {
		return *x.Stale
	}
	return false
}

func (x *TabletLocationsPB) GetTableId() []byte {
	if x != nil {
		return x.TableId
	}
	return nil
}

func (x *TabletLocationsPB) GetTableIds() [][]byte {
	if x != nil {
		return x.TableIds
	}
	return nil
}

func (x *TabletLocationsPB) GetSplitDepth() uint64 {
	if x != nil && x.SplitDepth != nil {
		return *x.SplitDepth
	}
	return 0
}

func (x *TabletLocationsPB) GetSplitParentTabletId() []byte {
	if x != nil {
		return x.SplitParentTabletId
	}
	return nil
}

func (x *TabletLocationsPB) GetSplitTabletIds() [][]byte {
	if x != nil {
		return x.SplitTabletIds
	}
	return nil
}

func (x *TabletLocationsPB) GetExpectedLiveReplicas() int32 {
	if x != nil && x.ExpectedLiveReplicas != nil {
		return *x.ExpectedLiveReplicas
	}
	return 0
}

func (x *TabletLocationsPB) GetExpectedReadReplicas() int32 {
	if x != nil && x.ExpectedReadReplicas != nil {
		return *x.ExpectedReadReplicas
	}
	return 0
}

type GetTabletLocationsRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The tablet IDs about which to fetch info.
	TabletIds [][]byte `protobuf:"bytes,1,rep,name=tablet_ids,json=tabletIds" json:"tablet_ids,omitempty"`
	// If table ID is specified, table's partition_list_version will be included into response.
	TableId []byte `protobuf:"bytes,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	// If true, then return any hidden tablets as well. Does not work with partition key ranges.
	IncludeInactive *bool `protobuf:"varint,3,opt,name=include_inactive,json=includeInactive" json:"include_inactive,omitempty"`
}

func (x *GetTabletLocationsRequestPB) Reset() {
	*x = GetTabletLocationsRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTabletLocationsRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTabletLocationsRequestPB) ProtoMessage() {}

func (x *GetTabletLocationsRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTabletLocationsRequestPB.ProtoReflect.Descriptor instead.
func (*GetTabletLocationsRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{2}
}

func (x *GetTabletLocationsRequestPB) GetTabletIds() [][]byte {
	if x != nil {
		return x.TabletIds
	}
	return nil
}

func (x *GetTabletLocationsRequestPB) GetTableId() []byte {
	if x != nil {
		return x.TableId
	}
	return nil
}

func (x *GetTabletLocationsRequestPB) GetIncludeInactive() bool {
	if x != nil && x.IncludeInactive != nil {
		return *x.IncludeInactive
	}
	return false
}

type GetTabletLocationsResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error           *MasterErrorPB       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	TabletLocations []*TabletLocationsPB `protobuf:"bytes,2,rep,name=tablet_locations,json=tabletLocations" json:"tablet_locations,omitempty"`
	// If GetTabletLocationsRequestPB::table_id is set we return table's partition_list_version for
	// this table (see SysTablesEntryPB::partition_list_version).
	PartitionListVersion *uint32                               `protobuf:"varint,4,opt,name=partition_list_version,json=partitionListVersion" json:"partition_list_version,omitempty"`
	Errors               []*GetTabletLocationsResponsePB_Error `protobuf:"bytes,3,rep,name=errors" json:"errors,omitempty"`
}

func (x *GetTabletLocationsResponsePB) Reset() {
	*x = GetTabletLocationsResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTabletLocationsResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTabletLocationsResponsePB) ProtoMessage() {}

func (x *GetTabletLocationsResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTabletLocationsResponsePB.ProtoReflect.Descriptor instead.
func (*GetTabletLocationsResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{3}
}

func (x *GetTabletLocationsResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetTabletLocationsResponsePB) GetTabletLocations() []*TabletLocationsPB {
	if x != nil {
		return x.TabletLocations
	}
	return nil
}

func (x *GetTabletLocationsResponsePB) GetPartitionListVersion() uint32 {
	if x != nil && x.PartitionListVersion != nil {
		return *x.PartitionListVersion
	}
	return 0
}

func (x *GetTabletLocationsResponsePB) GetErrors() []*GetTabletLocationsResponsePB_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetTableLocationsRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table *TableIdentifierPB `protobuf:"bytes,1,req,name=table" json:"table,omitempty"`
	// Partition-key range.
	PartitionKeyStart     []byte  `protobuf:"bytes,3,opt,name=partition_key_start,json=partitionKeyStart" json:"partition_key_start,omitempty"`
	PartitionKeyEnd       []byte  `protobuf:"bytes,4,opt,name=partition_key_end,json=partitionKeyEnd" json:"partition_key_end,omitempty"`
	MaxReturnedLocations  *uint32 `protobuf:"varint,5,opt,name=max_returned_locations,json=maxReturnedLocations,def=10" json:"max_returned_locations,omitempty"`
	RequireTabletsRunning *bool   `protobuf:"varint,6,opt,name=require_tablets_running,json=requireTabletsRunning" json:"require_tablets_running,omitempty"`
	// If true, then return any hidden tablets as well. Does not work with partition key ranges.
	IncludeInactive *bool `protobuf:"varint,7,opt,name=include_inactive,json=includeInactive" json:"include_inactive,omitempty"`
}

// Default values for GetTableLocationsRequestPB fields.
const (
	Default_GetTableLocationsRequestPB_MaxReturnedLocations = uint32(10)
)

func (x *GetTableLocationsRequestPB) Reset() {
	*x = GetTableLocationsRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableLocationsRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableLocationsRequestPB) ProtoMessage() {}

func (x *GetTableLocationsRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableLocationsRequestPB.ProtoReflect.Descriptor instead.
func (*GetTableLocationsRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{4}
}

func (x *GetTableLocationsRequestPB) GetTable() *TableIdentifierPB {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *GetTableLocationsRequestPB) GetPartitionKeyStart() []byte {
	if x != nil {
		return x.PartitionKeyStart
	}
	return nil
}

func (x *GetTableLocationsRequestPB) GetPartitionKeyEnd() []byte {
	if x != nil {
		return x.PartitionKeyEnd
	}
	return nil
}

func (x *GetTableLocationsRequestPB) GetMaxReturnedLocations() uint32 {
	if x != nil && x.MaxReturnedLocations != nil {
		return *x.MaxReturnedLocations
	}
	return Default_GetTableLocationsRequestPB_MaxReturnedLocations
}

func (x *GetTableLocationsRequestPB) GetRequireTabletsRunning() bool {
	if x != nil && x.RequireTabletsRunning != nil {
		return *x.RequireTabletsRunning
	}
	return false
}

func (x *GetTableLocationsRequestPB) GetIncludeInactive() bool {
	if x != nil && x.IncludeInactive != nil {
		return *x.IncludeInactive
	}
	return false
}

type GetTableLocationsResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The error, if an error occurred with this request.
	Error           *MasterErrorPB       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	TabletLocations []*TabletLocationsPB `protobuf:"bytes,2,rep,name=tablet_locations,json=tabletLocations" json:"tablet_locations,omitempty"`
	TableType       *TableType           `protobuf:"varint,3,opt,name=table_type,json=tableType,enum=yb.TableType" json:"table_type,omitempty"`
	// See SysTablesEntryPB for field with the same name.
	PartitionListVersion *uint32 `protobuf:"varint,4,opt,name=partition_list_version,json=partitionListVersion" json:"partition_list_version,omitempty"`
	Creating             *bool   `protobuf:"varint,5,opt,name=creating" json:"creating,omitempty"`
}

func (x *GetTableLocationsResponsePB) Reset() {
	*x = GetTableLocationsResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableLocationsResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableLocationsResponsePB) ProtoMessage() {}

func (x *GetTableLocationsResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableLocationsResponsePB.ProtoReflect.Descriptor instead.
func (*GetTableLocationsResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{5}
}

func (x *GetTableLocationsResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetTableLocationsResponsePB) GetTabletLocations() []*TabletLocationsPB {
	if x != nil {
		return x.TabletLocations
	}
	return nil
}

func (x *GetTableLocationsResponsePB) GetTableType() TableType {
	if x != nil && x.TableType != nil {
		return *x.TableType
	}
	return TableType_YQL_TABLE_TYPE
}

func (x *GetTableLocationsResponsePB) GetPartitionListVersion() uint32 {
	if x != nil && x.PartitionListVersion != nil {
		return *x.PartitionListVersion
	}
	return 0
}

func (x *GetTableLocationsResponsePB) GetCreating() bool {
	if x != nil && x.Creating != nil {
		return *x.Creating
	}
	return false
}

// Reserve Postgres oid
type ReservePgsqlOidsRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceId []byte  `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId" json:"namespace_id,omitempty"` // The namespace id of the Postgres database.
	NextOid     *uint32 `protobuf:"varint,2,opt,name=next_oid,json=nextOid" json:"next_oid,omitempty"`            // The next oid to reserve.
	Count       *uint32 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`                               // The number of oids to reserve.
}

func (x *ReservePgsqlOidsRequestPB) Reset() {
	*x = ReservePgsqlOidsRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservePgsqlOidsRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservePgsqlOidsRequestPB) ProtoMessage() {}

func (x *ReservePgsqlOidsRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservePgsqlOidsRequestPB.ProtoReflect.Descriptor instead.
func (*ReservePgsqlOidsRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{6}
}

func (x *ReservePgsqlOidsRequestPB) GetNamespaceId() []byte {
	if x != nil {
		return x.NamespaceId
	}
	return nil
}

func (x *ReservePgsqlOidsRequestPB) GetNextOid() uint32 {
	if x != nil && x.NextOid != nil {
		return *x.NextOid
	}
	return 0
}

func (x *ReservePgsqlOidsRequestPB) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type ReservePgsqlOidsResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The error, if an error occurred with this request.
	Error    *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	BeginOid *uint32        `protobuf:"varint,2,opt,name=begin_oid,json=beginOid" json:"begin_oid,omitempty"` // The beginning oid reserved. Can be higher than requested.
	EndOid   *uint32        `protobuf:"varint,3,opt,name=end_oid,json=endOid" json:"end_oid,omitempty"`       // The end (exclusive) oid reserved.
}

func (x *ReservePgsqlOidsResponsePB) Reset() {
	*x = ReservePgsqlOidsResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservePgsqlOidsResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservePgsqlOidsResponsePB) ProtoMessage() {}

func (x *ReservePgsqlOidsResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservePgsqlOidsResponsePB.ProtoReflect.Descriptor instead.
func (*ReservePgsqlOidsResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{7}
}

func (x *ReservePgsqlOidsResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ReservePgsqlOidsResponsePB) GetBeginOid() uint32 {
	if x != nil && x.BeginOid != nil {
		return *x.BeginOid
	}
	return 0
}

func (x *ReservePgsqlOidsResponsePB) GetEndOid() uint32 {
	if x != nil && x.EndOid != nil {
		return *x.EndOid
	}
	return 0
}

type GetYsqlCatalogConfigRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetYsqlCatalogConfigRequestPB) Reset() {
	*x = GetYsqlCatalogConfigRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYsqlCatalogConfigRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYsqlCatalogConfigRequestPB) ProtoMessage() {}

func (x *GetYsqlCatalogConfigRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYsqlCatalogConfigRequestPB.ProtoReflect.Descriptor instead.
func (*GetYsqlCatalogConfigRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{8}
}

type GetYsqlCatalogConfigResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Version *uint64        `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
}

func (x *GetYsqlCatalogConfigResponsePB) Reset() {
	*x = GetYsqlCatalogConfigResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYsqlCatalogConfigResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYsqlCatalogConfigResponsePB) ProtoMessage() {}

func (x *GetYsqlCatalogConfigResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYsqlCatalogConfigResponsePB.ProtoReflect.Descriptor instead.
func (*GetYsqlCatalogConfigResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{9}
}

func (x *GetYsqlCatalogConfigResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetYsqlCatalogConfigResponsePB) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type RedisConfigSetRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword *string  `protobuf:"bytes,1,opt,name=keyword" json:"keyword,omitempty"`
	Args    [][]byte `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
}

func (x *RedisConfigSetRequestPB) Reset() {
	*x = RedisConfigSetRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisConfigSetRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisConfigSetRequestPB) ProtoMessage() {}

func (x *RedisConfigSetRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisConfigSetRequestPB.ProtoReflect.Descriptor instead.
func (*RedisConfigSetRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{10}
}

func (x *RedisConfigSetRequestPB) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *RedisConfigSetRequestPB) GetArgs() [][]byte {
	if x != nil {
		return x.Args
	}
	return nil
}

type RedisConfigSetResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (x *RedisConfigSetResponsePB) Reset() {
	*x = RedisConfigSetResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisConfigSetResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisConfigSetResponsePB) ProtoMessage() {}

func (x *RedisConfigSetResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisConfigSetResponsePB.ProtoReflect.Descriptor instead.
func (*RedisConfigSetResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{11}
}

func (x *RedisConfigSetResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type RedisConfigGetRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword *string `protobuf:"bytes,1,opt,name=keyword" json:"keyword,omitempty"`
}

func (x *RedisConfigGetRequestPB) Reset() {
	*x = RedisConfigGetRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisConfigGetRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisConfigGetRequestPB) ProtoMessage() {}

func (x *RedisConfigGetRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisConfigGetRequestPB.ProtoReflect.Descriptor instead.
func (*RedisConfigGetRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{12}
}

func (x *RedisConfigGetRequestPB) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

type RedisConfigGetResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword *string        `protobuf:"bytes,1,opt,name=keyword" json:"keyword,omitempty"`
	Args    [][]byte       `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	Error   *MasterErrorPB `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (x *RedisConfigGetResponsePB) Reset() {
	*x = RedisConfigGetResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisConfigGetResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisConfigGetResponsePB) ProtoMessage() {}

func (x *RedisConfigGetResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisConfigGetResponsePB.ProtoReflect.Descriptor instead.
func (*RedisConfigGetResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{13}
}

func (x *RedisConfigGetResponsePB) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *RedisConfigGetResponsePB) GetArgs() [][]byte {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *RedisConfigGetResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type TabletLocationsPB_ReplicaPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TsInfo     *TSInfoPB       `protobuf:"bytes,1,req,name=ts_info,json=tsInfo" json:"ts_info,omitempty"`
	Role       *PeerRole       `protobuf:"varint,2,req,name=role,enum=yb.PeerRole" json:"role,omitempty"`
	MemberType *PeerMemberType `protobuf:"varint,3,opt,name=member_type,json=memberType,enum=yb.consensus.PeerMemberType" json:"member_type,omitempty"`
}

func (x *TabletLocationsPB_ReplicaPB) Reset() {
	*x = TabletLocationsPB_ReplicaPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TabletLocationsPB_ReplicaPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabletLocationsPB_ReplicaPB) ProtoMessage() {}

func (x *TabletLocationsPB_ReplicaPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabletLocationsPB_ReplicaPB.ProtoReflect.Descriptor instead.
func (*TabletLocationsPB_ReplicaPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TabletLocationsPB_ReplicaPB) GetTsInfo() *TSInfoPB {
	if x != nil {
		return x.TsInfo
	}
	return nil
}

func (x *TabletLocationsPB_ReplicaPB) GetRole() PeerRole {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return PeerRole_FOLLOWER
}

func (x *TabletLocationsPB_ReplicaPB) GetMemberType() PeerMemberType {
	if x != nil && x.MemberType != nil {
		return *x.MemberType
	}
	return PeerMemberType_UNKNOWN_MEMBER_TYPE
}

type GetTabletLocationsResponsePB_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletId []byte       `protobuf:"bytes,1,req,name=tablet_id,json=tabletId" json:"tablet_id,omitempty"`
	Status   *AppStatusPB `protobuf:"bytes,2,req,name=status" json:"status,omitempty"`
}

func (x *GetTabletLocationsResponsePB_Error) Reset() {
	*x = GetTabletLocationsResponsePB_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_client_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTabletLocationsResponsePB_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTabletLocationsResponsePB_Error) ProtoMessage() {}

func (x *GetTabletLocationsResponsePB_Error) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_client_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTabletLocationsResponsePB_Error.ProtoReflect.Descriptor instead.
func (*GetTabletLocationsResponsePB_Error) Descriptor() ([]byte, []int) {
	return file_yb_master_master_client_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetTabletLocationsResponsePB_Error) GetTabletId() []byte {
	if x != nil {
		return x.TabletId
	}
	return nil
}

func (x *GetTabletLocationsResponsePB_Error) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_yb_master_master_client_proto protoreflect.FileDescriptor

var file_yb_master_master_client_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x79, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x16, 0x79, 0x62, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x79, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x79, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x79, 0x62,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x79, 0x62, 0x2f,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x79, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x14, 0x79, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x02, 0x0a, 0x08, 0x54, 0x53, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x42, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0d, 0x70, 0x65, 0x72,
	0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x15, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x79, 0x62, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x42, 0x52, 0x13, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x52, 0x70, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x3f,
	0x0a, 0x13, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x79, 0x62,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x42, 0x52, 0x12, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x2e, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x42, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x07, 0x52, 0x0c, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xb0, 0x05, 0x0a, 0x11, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x42,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x6e, 0x64,
	0x4b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x42, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x50, 0x42, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x50, 0x42, 0x52, 0x08, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x64, 0x65,
	0x70, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x70, 0x6c, 0x69, 0x74,
	0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x70,
	0x6c, 0x69, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73,
	0x1a, 0x9a, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x50, 0x42, 0x12, 0x2c,
	0x0a, 0x07, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x53, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x42, 0x52, 0x06, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x79, 0x62, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x3d,
	0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x79, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x82, 0x01,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x22, 0xe3, 0x02, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x10, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x42, 0x52, 0x0f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x16,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x4d, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc9, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x50, 0x42, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x64, 0x12, 0x38, 0x0a, 0x16, 0x6d, 0x61, 0x78, 0x5f, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x02, 0x31, 0x30, 0x52, 0x14, 0x6d, 0x61, 0x78,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x22, 0x96, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x10, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x42, 0x52, 0x0f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a,
	0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x79, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x6f, 0x0a,
	0x19, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x67, 0x73, 0x71, 0x6c, 0x4f, 0x69, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6e, 0x65, 0x78, 0x74, 0x4f, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x82,
	0x01, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x67, 0x73, 0x71, 0x6c, 0x4f,
	0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79,
	0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x4f, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x6e, 0x64,
	0x4f, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x59, 0x73, 0x71, 0x6c, 0x43, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x42, 0x22, 0x6a, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x59, 0x73, 0x71, 0x6c, 0x43,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x47, 0x0a, 0x17, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x18, 0x0a, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x4a, 0x0a, 0x18, 0x52, 0x65, 0x64,
	0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x33, 0x0a, 0x17, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x78, 0x0a, 0x18, 0x52, 0x65,
	0x64, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04,
	0x61, 0x72, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x32, 0xfa, 0x04, 0x0a, 0x0c, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x65, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x2e, 0x79, 0x62,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x42, 0x1a, 0x27, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x62, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x25, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x26, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42,
	0x12, 0x5f, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x67, 0x73, 0x71, 0x6c,
	0x4f, 0x69, 0x64, 0x73, 0x12, 0x24, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x67, 0x73, 0x71, 0x6c, 0x4f, 0x69, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x25, 0x2e, 0x79, 0x62, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x67,
	0x73, 0x71, 0x6c, 0x4f, 0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x42, 0x12, 0x6b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x59, 0x73, 0x71, 0x6c, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x2e, 0x79, 0x62, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x59, 0x73, 0x71, 0x6c, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x42, 0x1a, 0x29, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x59, 0x73, 0x71, 0x6c, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x59,
	0x0a, 0x0e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74,
	0x12, 0x22, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x64,
	0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x42, 0x1a, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x59, 0x0a, 0x0e, 0x52, 0x65, 0x64,
	0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x79, 0x62,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a,
	0x23, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x64, 0x69,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x42, 0x1a, 0x1b, 0xda, 0xb5, 0x18, 0x17, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72,
}

var (
	file_yb_master_master_client_proto_rawDescOnce sync.Once
	file_yb_master_master_client_proto_rawDescData = file_yb_master_master_client_proto_rawDesc
)

func file_yb_master_master_client_proto_rawDescGZIP() []byte {
	file_yb_master_master_client_proto_rawDescOnce.Do(func() {
		file_yb_master_master_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_yb_master_master_client_proto_rawDescData)
	})
	return file_yb_master_master_client_proto_rawDescData
}

var file_yb_master_master_client_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_yb_master_master_client_proto_goTypes = []interface{}{
	(*TSInfoPB)(nil),                           // 0: yb.master.TSInfoPB
	(*TabletLocationsPB)(nil),                  // 1: yb.master.TabletLocationsPB
	(*GetTabletLocationsRequestPB)(nil),        // 2: yb.master.GetTabletLocationsRequestPB
	(*GetTabletLocationsResponsePB)(nil),       // 3: yb.master.GetTabletLocationsResponsePB
	(*GetTableLocationsRequestPB)(nil),         // 4: yb.master.GetTableLocationsRequestPB
	(*GetTableLocationsResponsePB)(nil),        // 5: yb.master.GetTableLocationsResponsePB
	(*ReservePgsqlOidsRequestPB)(nil),          // 6: yb.master.ReservePgsqlOidsRequestPB
	(*ReservePgsqlOidsResponsePB)(nil),         // 7: yb.master.ReservePgsqlOidsResponsePB
	(*GetYsqlCatalogConfigRequestPB)(nil),      // 8: yb.master.GetYsqlCatalogConfigRequestPB
	(*GetYsqlCatalogConfigResponsePB)(nil),     // 9: yb.master.GetYsqlCatalogConfigResponsePB
	(*RedisConfigSetRequestPB)(nil),            // 10: yb.master.RedisConfigSetRequestPB
	(*RedisConfigSetResponsePB)(nil),           // 11: yb.master.RedisConfigSetResponsePB
	(*RedisConfigGetRequestPB)(nil),            // 12: yb.master.RedisConfigGetRequestPB
	(*RedisConfigGetResponsePB)(nil),           // 13: yb.master.RedisConfigGetResponsePB
	(*TabletLocationsPB_ReplicaPB)(nil),        // 14: yb.master.TabletLocationsPB.ReplicaPB
	(*GetTabletLocationsResponsePB_Error)(nil), // 15: yb.master.GetTabletLocationsResponsePB.Error
	(*HostPortPB)(nil),                         // 16: yb.HostPortPB
	(*CloudInfoPB)(nil),                        // 17: yb.CloudInfoPB
	(*PartitionPB)(nil),                        // 18: yb.PartitionPB
	(*MasterErrorPB)(nil),                      // 19: yb.master.MasterErrorPB
	(*TableIdentifierPB)(nil),                  // 20: yb.master.TableIdentifierPB
	(TableType)(0),                             // 21: yb.TableType
	(PeerRole)(0),                              // 22: yb.PeerRole
	(PeerMemberType)(0),                        // 23: yb.consensus.PeerMemberType
	(*AppStatusPB)(nil),                        // 24: yb.AppStatusPB
}
var file_yb_master_master_client_proto_depIdxs = []int32{
	16, // 0: yb.master.TSInfoPB.private_rpc_addresses:type_name -> yb.HostPortPB
	16, // 1: yb.master.TSInfoPB.broadcast_addresses:type_name -> yb.HostPortPB
	17, // 2: yb.master.TSInfoPB.cloud_info:type_name -> yb.CloudInfoPB
	18, // 3: yb.master.TabletLocationsPB.partition:type_name -> yb.PartitionPB
	14, // 4: yb.master.TabletLocationsPB.replicas:type_name -> yb.master.TabletLocationsPB.ReplicaPB
	19, // 5: yb.master.GetTabletLocationsResponsePB.error:type_name -> yb.master.MasterErrorPB
	1,  // 6: yb.master.GetTabletLocationsResponsePB.tablet_locations:type_name -> yb.master.TabletLocationsPB
	15, // 7: yb.master.GetTabletLocationsResponsePB.errors:type_name -> yb.master.GetTabletLocationsResponsePB.Error
	20, // 8: yb.master.GetTableLocationsRequestPB.table:type_name -> yb.master.TableIdentifierPB
	19, // 9: yb.master.GetTableLocationsResponsePB.error:type_name -> yb.master.MasterErrorPB
	1,  // 10: yb.master.GetTableLocationsResponsePB.tablet_locations:type_name -> yb.master.TabletLocationsPB
	21, // 11: yb.master.GetTableLocationsResponsePB.table_type:type_name -> yb.TableType
	19, // 12: yb.master.ReservePgsqlOidsResponsePB.error:type_name -> yb.master.MasterErrorPB
	19, // 13: yb.master.GetYsqlCatalogConfigResponsePB.error:type_name -> yb.master.MasterErrorPB
	19, // 14: yb.master.RedisConfigSetResponsePB.error:type_name -> yb.master.MasterErrorPB
	19, // 15: yb.master.RedisConfigGetResponsePB.error:type_name -> yb.master.MasterErrorPB
	0,  // 16: yb.master.TabletLocationsPB.ReplicaPB.ts_info:type_name -> yb.master.TSInfoPB
	22, // 17: yb.master.TabletLocationsPB.ReplicaPB.role:type_name -> yb.PeerRole
	23, // 18: yb.master.TabletLocationsPB.ReplicaPB.member_type:type_name -> yb.consensus.PeerMemberType
	24, // 19: yb.master.GetTabletLocationsResponsePB.Error.status:type_name -> yb.AppStatusPB
	2,  // 20: yb.master.MasterClient.GetTabletLocations:input_type -> yb.master.GetTabletLocationsRequestPB
	4,  // 21: yb.master.MasterClient.GetTableLocations:input_type -> yb.master.GetTableLocationsRequestPB
	6,  // 22: yb.master.MasterClient.ReservePgsqlOids:input_type -> yb.master.ReservePgsqlOidsRequestPB
	8,  // 23: yb.master.MasterClient.GetYsqlCatalogConfig:input_type -> yb.master.GetYsqlCatalogConfigRequestPB
	10, // 24: yb.master.MasterClient.RedisConfigSet:input_type -> yb.master.RedisConfigSetRequestPB
	12, // 25: yb.master.MasterClient.RedisConfigGet:input_type -> yb.master.RedisConfigGetRequestPB
	3,  // 26: yb.master.MasterClient.GetTabletLocations:output_type -> yb.master.GetTabletLocationsResponsePB
	5,  // 27: yb.master.MasterClient.GetTableLocations:output_type -> yb.master.GetTableLocationsResponsePB
	7,  // 28: yb.master.MasterClient.ReservePgsqlOids:output_type -> yb.master.ReservePgsqlOidsResponsePB
	9,  // 29: yb.master.MasterClient.GetYsqlCatalogConfig:output_type -> yb.master.GetYsqlCatalogConfigResponsePB
	11, // 30: yb.master.MasterClient.RedisConfigSet:output_type -> yb.master.RedisConfigSetResponsePB
	13, // 31: yb.master.MasterClient.RedisConfigGet:output_type -> yb.master.RedisConfigGetResponsePB
	26, // [26:32] is the sub-list for method output_type
	20, // [20:26] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_yb_master_master_client_proto_init() }
func file_yb_master_master_client_proto_init() {
	if File_yb_master_master_client_proto != nil {
		return
	}
	file_yb_common_common_proto_init()
	file_yb_common_common_net_proto_init()
	file_yb_common_common_types_proto_init()
	file_yb_common_wire_protocol_proto_init()
	file_yb_consensus_consensus_metadata_proto_init()
	file_yb_master_master_types_proto_init()
	file_yb_rpc_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yb_master_master_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSInfoPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TabletLocationsPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTabletLocationsRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTabletLocationsResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableLocationsRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableLocationsResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservePgsqlOidsRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservePgsqlOidsResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYsqlCatalogConfigRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYsqlCatalogConfigResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisConfigSetRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisConfigSetResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisConfigGetRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisConfigGetResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TabletLocationsPB_ReplicaPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_client_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTabletLocationsResponsePB_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yb_master_master_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yb_master_master_client_proto_goTypes,
		DependencyIndexes: file_yb_master_master_client_proto_depIdxs,
		MessageInfos:      file_yb_master_master_client_proto_msgTypes,
	}.Build()
	File_yb_master_master_client_proto = out.File
	file_yb_master_master_client_proto_rawDesc = nil
	file_yb_master_master_client_proto_goTypes = nil
	file_yb_master_master_client_proto_depIdxs = nil
}
