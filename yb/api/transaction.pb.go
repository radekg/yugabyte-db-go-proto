// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: yb/common/transaction.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IsolationLevel int32

const (
	IsolationLevel_NON_TRANSACTIONAL      IsolationLevel = 0
	IsolationLevel_SNAPSHOT_ISOLATION     IsolationLevel = 1
	IsolationLevel_SERIALIZABLE_ISOLATION IsolationLevel = 2
)

// Enum value maps for IsolationLevel.
var (
	IsolationLevel_name = map[int32]string{
		0: "NON_TRANSACTIONAL",
		1: "SNAPSHOT_ISOLATION",
		2: "SERIALIZABLE_ISOLATION",
	}
	IsolationLevel_value = map[string]int32{
		"NON_TRANSACTIONAL":      0,
		"SNAPSHOT_ISOLATION":     1,
		"SERIALIZABLE_ISOLATION": 2,
	}
)

func (x IsolationLevel) Enum() *IsolationLevel {
	p := new(IsolationLevel)
	*p = x
	return p
}

func (x IsolationLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IsolationLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_yb_common_transaction_proto_enumTypes[0].Descriptor()
}

func (IsolationLevel) Type() protoreflect.EnumType {
	return &file_yb_common_transaction_proto_enumTypes[0]
}

func (x IsolationLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *IsolationLevel) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = IsolationLevel(num)
	return nil
}

// Deprecated: Use IsolationLevel.Descriptor instead.
func (IsolationLevel) EnumDescriptor() ([]byte, []int) {
	return file_yb_common_transaction_proto_rawDescGZIP(), []int{0}
}

type TransactionStatus int32

const (
	TransactionStatus_CREATED                         TransactionStatus = 1
	TransactionStatus_PENDING                         TransactionStatus = 2
	TransactionStatus_COMMITTED                       TransactionStatus = 4
	TransactionStatus_SEALED                          TransactionStatus = 5
	TransactionStatus_APPLIED_IN_ALL_INVOLVED_TABLETS TransactionStatus = 7
	TransactionStatus_ABORTED                         TransactionStatus = 8
	// All following entries are not used in RAFT, but as events between status tablet and involved
	// tablets:
	TransactionStatus_APPLYING                           TransactionStatus = 20
	TransactionStatus_APPLIED_IN_ONE_OF_INVOLVED_TABLETS TransactionStatus = 21
	TransactionStatus_IMMEDIATE_CLEANUP                  TransactionStatus = 22
	TransactionStatus_GRACEFUL_CLEANUP                   TransactionStatus = 23
)

// Enum value maps for TransactionStatus.
var (
	TransactionStatus_name = map[int32]string{
		1:  "CREATED",
		2:  "PENDING",
		4:  "COMMITTED",
		5:  "SEALED",
		7:  "APPLIED_IN_ALL_INVOLVED_TABLETS",
		8:  "ABORTED",
		20: "APPLYING",
		21: "APPLIED_IN_ONE_OF_INVOLVED_TABLETS",
		22: "IMMEDIATE_CLEANUP",
		23: "GRACEFUL_CLEANUP",
	}
	TransactionStatus_value = map[string]int32{
		"CREATED":                            1,
		"PENDING":                            2,
		"COMMITTED":                          4,
		"SEALED":                             5,
		"APPLIED_IN_ALL_INVOLVED_TABLETS":    7,
		"ABORTED":                            8,
		"APPLYING":                           20,
		"APPLIED_IN_ONE_OF_INVOLVED_TABLETS": 21,
		"IMMEDIATE_CLEANUP":                  22,
		"GRACEFUL_CLEANUP":                   23,
	}
)

func (x TransactionStatus) Enum() *TransactionStatus {
	p := new(TransactionStatus)
	*p = x
	return p
}

func (x TransactionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_yb_common_transaction_proto_enumTypes[1].Descriptor()
}

func (TransactionStatus) Type() protoreflect.EnumType {
	return &file_yb_common_transaction_proto_enumTypes[1]
}

func (x TransactionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TransactionStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TransactionStatus(num)
	return nil
}

// Deprecated: Use TransactionStatus.Descriptor instead.
func (TransactionStatus) EnumDescriptor() ([]byte, []int) {
	return file_yb_common_transaction_proto_rawDescGZIP(), []int{1}
}

type TransactionLocality int32

const (
	TransactionLocality_GLOBAL TransactionLocality = 1
	TransactionLocality_LOCAL  TransactionLocality = 2
)

// Enum value maps for TransactionLocality.
var (
	TransactionLocality_name = map[int32]string{
		1: "GLOBAL",
		2: "LOCAL",
	}
	TransactionLocality_value = map[string]int32{
		"GLOBAL": 1,
		"LOCAL":  2,
	}
)

func (x TransactionLocality) Enum() *TransactionLocality {
	p := new(TransactionLocality)
	*p = x
	return p
}

func (x TransactionLocality) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionLocality) Descriptor() protoreflect.EnumDescriptor {
	return file_yb_common_transaction_proto_enumTypes[2].Descriptor()
}

func (TransactionLocality) Type() protoreflect.EnumType {
	return &file_yb_common_transaction_proto_enumTypes[2]
}

func (x TransactionLocality) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TransactionLocality) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TransactionLocality(num)
	return nil
}

// Deprecated: Use TransactionLocality.Descriptor instead.
func (TransactionLocality) EnumDescriptor() ([]byte, []int) {
	return file_yb_common_transaction_proto_rawDescGZIP(), []int{2}
}

// This enum matches enum RowMarkType defined in src/include/nodes/plannodes.h.
// The exception is ROW_MARK_ABSENT, which signifies the absence of a row mark.
type RowMarkType int32

const (
	// Obtain exclusive tuple lock.
	RowMarkType_ROW_MARK_EXCLUSIVE RowMarkType = 0
	// Obtain no-key exclusive tuple lock.
	RowMarkType_ROW_MARK_NOKEYEXCLUSIVE RowMarkType = 1
	// Obtain shared tuple lock.
	RowMarkType_ROW_MARK_SHARE RowMarkType = 2
	// Obtain keyshare tuple lock.
	RowMarkType_ROW_MARK_KEYSHARE RowMarkType = 3
	// Not supported. Used for postgres compatibility.
	RowMarkType_ROW_MARK_REFERENCE RowMarkType = 4
	// Not supported. Used for postgres compatibility.
	RowMarkType_ROW_MARK_COPY RowMarkType = 5
	// Obtain no tuple lock (this should never sent be on the wire).  The value
	// should be high for convenient comparisons with the other row lock types.
	RowMarkType_ROW_MARK_ABSENT RowMarkType = 15
)

// Enum value maps for RowMarkType.
var (
	RowMarkType_name = map[int32]string{
		0:  "ROW_MARK_EXCLUSIVE",
		1:  "ROW_MARK_NOKEYEXCLUSIVE",
		2:  "ROW_MARK_SHARE",
		3:  "ROW_MARK_KEYSHARE",
		4:  "ROW_MARK_REFERENCE",
		5:  "ROW_MARK_COPY",
		15: "ROW_MARK_ABSENT",
	}
	RowMarkType_value = map[string]int32{
		"ROW_MARK_EXCLUSIVE":      0,
		"ROW_MARK_NOKEYEXCLUSIVE": 1,
		"ROW_MARK_SHARE":          2,
		"ROW_MARK_KEYSHARE":       3,
		"ROW_MARK_REFERENCE":      4,
		"ROW_MARK_COPY":           5,
		"ROW_MARK_ABSENT":         15,
	}
)

func (x RowMarkType) Enum() *RowMarkType {
	p := new(RowMarkType)
	*p = x
	return p
}

func (x RowMarkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RowMarkType) Descriptor() protoreflect.EnumDescriptor {
	return file_yb_common_transaction_proto_enumTypes[3].Descriptor()
}

func (RowMarkType) Type() protoreflect.EnumType {
	return &file_yb_common_transaction_proto_enumTypes[3]
}

func (x RowMarkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RowMarkType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RowMarkType(num)
	return nil
}

// Deprecated: Use RowMarkType.Descriptor instead.
func (RowMarkType) EnumDescriptor() ([]byte, []int) {
	return file_yb_common_transaction_proto_rawDescGZIP(), []int{3}
}

type AbortedSubTransactionSetPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Set []uint32 `protobuf:"varint,1,rep,name=set" json:"set,omitempty"`
}

func (x *AbortedSubTransactionSetPB) Reset() {
	*x = AbortedSubTransactionSetPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_common_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortedSubTransactionSetPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortedSubTransactionSetPB) ProtoMessage() {}

func (x *AbortedSubTransactionSetPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_common_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortedSubTransactionSetPB.ProtoReflect.Descriptor instead.
func (*AbortedSubTransactionSetPB) Descriptor() ([]byte, []int) {
	return file_yb_common_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *AbortedSubTransactionSetPB) GetSet() []uint32 {
	if x != nil {
		return x.Set
	}
	return nil
}

type SubTransactionMetadataPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubtransactionId *uint32                     `protobuf:"varint,1,opt,name=subtransaction_id,json=subtransactionId" json:"subtransaction_id,omitempty"`
	Aborted          *AbortedSubTransactionSetPB `protobuf:"bytes,2,opt,name=aborted" json:"aborted,omitempty"`
}

func (x *SubTransactionMetadataPB) Reset() {
	*x = SubTransactionMetadataPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_common_transaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubTransactionMetadataPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTransactionMetadataPB) ProtoMessage() {}

func (x *SubTransactionMetadataPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_common_transaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTransactionMetadataPB.ProtoReflect.Descriptor instead.
func (*SubTransactionMetadataPB) Descriptor() ([]byte, []int) {
	return file_yb_common_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *SubTransactionMetadataPB) GetSubtransactionId() uint32 {
	if x != nil && x.SubtransactionId != nil {
		return *x.SubtransactionId
	}
	return 0
}

func (x *SubTransactionMetadataPB) GetAborted() *AbortedSubTransactionSetPB {
	if x != nil {
		return x.Aborted
	}
	return nil
}

var File_yb_common_transaction_proto protoreflect.FileDescriptor

var file_yb_common_transaction_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x79, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x79,
	0x62, 0x22, 0x2e, 0x0a, 0x1a, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x75, 0x62, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x50, 0x42, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65,
	0x74, 0x22, 0x81, 0x01, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x42, 0x12, 0x2b,
	0x0a, 0x11, 0x73, 0x75, 0x62, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x75, 0x62, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x61,
	0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79,
	0x62, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x75, 0x62, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x50, 0x42, 0x52, 0x07, 0x61, 0x62,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x2a, 0x5b, 0x0a, 0x0e, 0x49, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x4f, 0x4e, 0x5f, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x16,
	0x0a, 0x12, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x5f, 0x49, 0x53, 0x4f, 0x4c, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x45, 0x52, 0x49, 0x41, 0x4c,
	0x49, 0x5a, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x49, 0x53, 0x4f, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x2a, 0xdd, 0x01, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x41, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x23, 0x0a,
	0x1f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x5f, 0x41, 0x4c, 0x4c, 0x5f,
	0x49, 0x4e, 0x56, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x54, 0x53,
	0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x08, 0x12,
	0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x14, 0x12, 0x26, 0x0a,
	0x22, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x5f, 0x4f, 0x4e, 0x45, 0x5f,
	0x4f, 0x46, 0x5f, 0x49, 0x4e, 0x56, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x5f, 0x54, 0x41, 0x42, 0x4c,
	0x45, 0x54, 0x53, 0x10, 0x15, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4d, 0x4d, 0x45, 0x44, 0x49, 0x41,
	0x54, 0x45, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x55, 0x50, 0x10, 0x16, 0x12, 0x14, 0x0a, 0x10,
	0x47, 0x52, 0x41, 0x43, 0x45, 0x46, 0x55, 0x4c, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x55, 0x50,
	0x10, 0x17, 0x2a, 0x2c, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4c, 0x4f,
	0x42, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x02,
	0x2a, 0xad, 0x01, 0x0a, 0x0b, 0x52, 0x6f, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x12, 0x52, 0x4f, 0x57, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x5f, 0x45, 0x58, 0x43,
	0x4c, 0x55, 0x53, 0x49, 0x56, 0x45, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x4f, 0x57, 0x5f,
	0x4d, 0x41, 0x52, 0x4b, 0x5f, 0x4e, 0x4f, 0x4b, 0x45, 0x59, 0x45, 0x58, 0x43, 0x4c, 0x55, 0x53,
	0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x4f, 0x57, 0x5f, 0x4d, 0x41, 0x52,
	0x4b, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x4f, 0x57,
	0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x5f, 0x4b, 0x45, 0x59, 0x53, 0x48, 0x41, 0x52, 0x45, 0x10, 0x03,
	0x12, 0x16, 0x0a, 0x12, 0x52, 0x4f, 0x57, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x5f, 0x52, 0x45, 0x46,
	0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x4f, 0x57, 0x5f,
	0x4d, 0x41, 0x52, 0x4b, 0x5f, 0x43, 0x4f, 0x50, 0x59, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x52,
	0x4f, 0x57, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x5f, 0x41, 0x42, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x0f,
	0x42, 0x08, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x2e, 0x79, 0x62,
}

var (
	file_yb_common_transaction_proto_rawDescOnce sync.Once
	file_yb_common_transaction_proto_rawDescData = file_yb_common_transaction_proto_rawDesc
)

func file_yb_common_transaction_proto_rawDescGZIP() []byte {
	file_yb_common_transaction_proto_rawDescOnce.Do(func() {
		file_yb_common_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_yb_common_transaction_proto_rawDescData)
	})
	return file_yb_common_transaction_proto_rawDescData
}

var file_yb_common_transaction_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_yb_common_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_yb_common_transaction_proto_goTypes = []interface{}{
	(IsolationLevel)(0),                // 0: yb.IsolationLevel
	(TransactionStatus)(0),             // 1: yb.TransactionStatus
	(TransactionLocality)(0),           // 2: yb.TransactionLocality
	(RowMarkType)(0),                   // 3: yb.RowMarkType
	(*AbortedSubTransactionSetPB)(nil), // 4: yb.AbortedSubTransactionSetPB
	(*SubTransactionMetadataPB)(nil),   // 5: yb.SubTransactionMetadataPB
}
var file_yb_common_transaction_proto_depIdxs = []int32{
	4, // 0: yb.SubTransactionMetadataPB.aborted:type_name -> yb.AbortedSubTransactionSetPB
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_yb_common_transaction_proto_init() }
func file_yb_common_transaction_proto_init() {
	if File_yb_common_transaction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yb_common_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortedSubTransactionSetPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_common_transaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubTransactionMetadataPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yb_common_transaction_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yb_common_transaction_proto_goTypes,
		DependencyIndexes: file_yb_common_transaction_proto_depIdxs,
		EnumInfos:         file_yb_common_transaction_proto_enumTypes,
		MessageInfos:      file_yb_common_transaction_proto_msgTypes,
	}.Build()
	File_yb_common_transaction_proto = out.File
	file_yb_common_transaction_proto_rawDesc = nil
	file_yb_common_transaction_proto_goTypes = nil
	file_yb_common_transaction_proto_depIdxs = nil
}
