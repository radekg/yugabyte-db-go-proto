// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: yb/master/master_backup.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImportSnapshotMetaResponsePB_TableType int32

const (
	ImportSnapshotMetaResponsePB_TABLE                  ImportSnapshotMetaResponsePB_TableType = 0
	ImportSnapshotMetaResponsePB_COLOCATED_TABLE        ImportSnapshotMetaResponsePB_TableType = 1
	ImportSnapshotMetaResponsePB_PARENT_COLOCATED_TABLE ImportSnapshotMetaResponsePB_TableType = 2
)

// Enum value maps for ImportSnapshotMetaResponsePB_TableType.
var (
	ImportSnapshotMetaResponsePB_TableType_name = map[int32]string{
		0: "TABLE",
		1: "COLOCATED_TABLE",
		2: "PARENT_COLOCATED_TABLE",
	}
	ImportSnapshotMetaResponsePB_TableType_value = map[string]int32{
		"TABLE":                  0,
		"COLOCATED_TABLE":        1,
		"PARENT_COLOCATED_TABLE": 2,
	}
)

func (x ImportSnapshotMetaResponsePB_TableType) Enum() *ImportSnapshotMetaResponsePB_TableType {
	p := new(ImportSnapshotMetaResponsePB_TableType)
	*p = x
	return p
}

func (x ImportSnapshotMetaResponsePB_TableType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImportSnapshotMetaResponsePB_TableType) Descriptor() protoreflect.EnumDescriptor {
	return file_yb_master_master_backup_proto_enumTypes[0].Descriptor()
}

func (ImportSnapshotMetaResponsePB_TableType) Type() protoreflect.EnumType {
	return &file_yb_master_master_backup_proto_enumTypes[0]
}

func (x ImportSnapshotMetaResponsePB_TableType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ImportSnapshotMetaResponsePB_TableType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ImportSnapshotMetaResponsePB_TableType(num)
	return nil
}

// Deprecated: Use ImportSnapshotMetaResponsePB_TableType.Descriptor instead.
func (ImportSnapshotMetaResponsePB_TableType) EnumDescriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{17, 0}
}

type BackupRowEntryPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry *SysRowEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	// Used to disambiguate in case YSQL tables in different schema have same name.
	PgSchemaName []byte `protobuf:"bytes,2,opt,name=pg_schema_name,json=pgSchemaName" json:"pg_schema_name,omitempty"` // For 'entry.type' == TABLE only.
}

func (x *BackupRowEntryPB) Reset() {
	*x = BackupRowEntryPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupRowEntryPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupRowEntryPB) ProtoMessage() {}

func (x *BackupRowEntryPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupRowEntryPB.ProtoReflect.Descriptor instead.
func (*BackupRowEntryPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{0}
}

func (x *BackupRowEntryPB) GetEntry() *SysRowEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *BackupRowEntryPB) GetPgSchemaName() []byte {
	if x != nil {
		return x.PgSchemaName
	}
	return nil
}

type CreateSnapshotRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables           []*TableIdentifierPB `protobuf:"bytes,1,rep,name=tables" json:"tables,omitempty"`
	TransactionAware *bool                `protobuf:"varint,2,opt,name=transaction_aware,json=transactionAware" json:"transaction_aware,omitempty"`
	// Automatically add table indexes into the snapshot.
	AddIndexes *bool `protobuf:"varint,3,opt,name=add_indexes,json=addIndexes,def=0" json:"add_indexes,omitempty"`
	// Interpet this snapshot as imported:
	// Snapshot will be created as COMPLETE and no tablet operations will be performed.
	Imported   *bool  `protobuf:"varint,4,opt,name=imported" json:"imported,omitempty"`
	ScheduleId []byte `protobuf:"bytes,5,opt,name=schedule_id,json=scheduleId" json:"schedule_id,omitempty"` // Create snapshot to this schedule. Other fields are ignored.
}

// Default values for CreateSnapshotRequestPB fields.
const (
	Default_CreateSnapshotRequestPB_AddIndexes = bool(false)
)

func (x *CreateSnapshotRequestPB) Reset() {
	*x = CreateSnapshotRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotRequestPB) ProtoMessage() {}

func (x *CreateSnapshotRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotRequestPB.ProtoReflect.Descriptor instead.
func (*CreateSnapshotRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSnapshotRequestPB) GetTables() []*TableIdentifierPB {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *CreateSnapshotRequestPB) GetTransactionAware() bool {
	if x != nil && x.TransactionAware != nil {
		return *x.TransactionAware
	}
	return false
}

func (x *CreateSnapshotRequestPB) GetAddIndexes() bool {
	if x != nil && x.AddIndexes != nil {
		return *x.AddIndexes
	}
	return Default_CreateSnapshotRequestPB_AddIndexes
}

func (x *CreateSnapshotRequestPB) GetImported() bool {
	if x != nil && x.Imported != nil {
		return *x.Imported
	}
	return false
}

func (x *CreateSnapshotRequestPB) GetScheduleId() []byte {
	if x != nil {
		return x.ScheduleId
	}
	return nil
}

type CreateSnapshotResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	SnapshotId []byte         `protobuf:"bytes,2,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
}

func (x *CreateSnapshotResponsePB) Reset() {
	*x = CreateSnapshotResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotResponsePB) ProtoMessage() {}

func (x *CreateSnapshotResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotResponsePB.ProtoReflect.Descriptor instead.
func (*CreateSnapshotResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSnapshotResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CreateSnapshotResponsePB) GetSnapshotId() []byte {
	if x != nil {
		return x.SnapshotId
	}
	return nil
}

type SnapshotInfoPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Detailed snapshot entries.
	Entry         *SysSnapshotEntryPB `protobuf:"bytes,2,opt,name=entry" json:"entry,omitempty"`
	FormatVersion *int64              `protobuf:"varint,3,opt,name=format_version,json=formatVersion,def=1" json:"format_version,omitempty"`
	// Stored extended info about snapshot (1) namespaces (2) tables (3) tablets
	// instead of 'SysRowEntry entry.entries'.
	BackupEntries []*BackupRowEntryPB `protobuf:"bytes,4,rep,name=backup_entries,json=backupEntries" json:"backup_entries,omitempty"`
}

// Default values for SnapshotInfoPB fields.
const (
	Default_SnapshotInfoPB_FormatVersion = int64(1)
)

func (x *SnapshotInfoPB) Reset() {
	*x = SnapshotInfoPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotInfoPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotInfoPB) ProtoMessage() {}

func (x *SnapshotInfoPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotInfoPB.ProtoReflect.Descriptor instead.
func (*SnapshotInfoPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{3}
}

func (x *SnapshotInfoPB) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SnapshotInfoPB) GetEntry() *SysSnapshotEntryPB {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *SnapshotInfoPB) GetFormatVersion() int64 {
	if x != nil && x.FormatVersion != nil {
		return *x.FormatVersion
	}
	return Default_SnapshotInfoPB_FormatVersion
}

func (x *SnapshotInfoPB) GetBackupEntries() []*BackupRowEntryPB {
	if x != nil {
		return x.BackupEntries
	}
	return nil
}

type TabletRestorationPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    []byte                    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	State *SysSnapshotEntryPB_State `protobuf:"varint,2,opt,name=state,enum=yb.master.SysSnapshotEntryPB_State" json:"state,omitempty"`
}

func (x *TabletRestorationPB) Reset() {
	*x = TabletRestorationPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TabletRestorationPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabletRestorationPB) ProtoMessage() {}

func (x *TabletRestorationPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabletRestorationPB.ProtoReflect.Descriptor instead.
func (*TabletRestorationPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{4}
}

func (x *TabletRestorationPB) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TabletRestorationPB) GetState() SysSnapshotEntryPB_State {
	if x != nil && x.State != nil {
		return *x.State
	}
	return SysSnapshotEntryPB_UNKNOWN
}

type SysRestorationEntryPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State              *SysSnapshotEntryPB_State `protobuf:"varint,1,opt,name=state,enum=yb.master.SysSnapshotEntryPB_State,def=0" json:"state,omitempty"`
	TabletRestorations []*TabletRestorationPB    `protobuf:"bytes,2,rep,name=tablet_restorations,json=tabletRestorations" json:"tablet_restorations,omitempty"`
	SnapshotId         []byte                    `protobuf:"bytes,8,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
	// Time when restoration finished. Computed on master after received response from the last
	// tablet.
	CompleteTimeHt *uint64 `protobuf:"fixed64,3,opt,name=complete_time_ht,json=completeTimeHt" json:"complete_time_ht,omitempty"`
}

// Default values for SysRestorationEntryPB fields.
const (
	Default_SysRestorationEntryPB_State = SysSnapshotEntryPB_UNKNOWN
)

func (x *SysRestorationEntryPB) Reset() {
	*x = SysRestorationEntryPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRestorationEntryPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRestorationEntryPB) ProtoMessage() {}

func (x *SysRestorationEntryPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRestorationEntryPB.ProtoReflect.Descriptor instead.
func (*SysRestorationEntryPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{5}
}

func (x *SysRestorationEntryPB) GetState() SysSnapshotEntryPB_State {
	if x != nil && x.State != nil {
		return *x.State
	}
	return Default_SysRestorationEntryPB_State
}

func (x *SysRestorationEntryPB) GetTabletRestorations() []*TabletRestorationPB {
	if x != nil {
		return x.TabletRestorations
	}
	return nil
}

func (x *SysRestorationEntryPB) GetSnapshotId() []byte {
	if x != nil {
		return x.SnapshotId
	}
	return nil
}

func (x *SysRestorationEntryPB) GetCompleteTimeHt() uint64 {
	if x != nil && x.CompleteTimeHt != nil {
		return *x.CompleteTimeHt
	}
	return 0
}

type RestorationInfoPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Detailed snapshot entries.
	Entry *SysRestorationEntryPB `protobuf:"bytes,2,opt,name=entry" json:"entry,omitempty"`
}

func (x *RestorationInfoPB) Reset() {
	*x = RestorationInfoPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestorationInfoPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestorationInfoPB) ProtoMessage() {}

func (x *RestorationInfoPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestorationInfoPB.ProtoReflect.Descriptor instead.
func (*RestorationInfoPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{6}
}

func (x *RestorationInfoPB) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RestorationInfoPB) GetEntry() *SysRestorationEntryPB {
	if x != nil {
		return x.Entry
	}
	return nil
}

type ListSnapshotsRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotId           []byte `protobuf:"bytes,2,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
	ListDeletedSnapshots *bool  `protobuf:"varint,3,opt,name=list_deleted_snapshots,json=listDeletedSnapshots" json:"list_deleted_snapshots,omitempty"`
	PrepareForBackup     *bool  `protobuf:"varint,4,opt,name=prepare_for_backup,json=prepareForBackup" json:"prepare_for_backup,omitempty"`
}

func (x *ListSnapshotsRequestPB) Reset() {
	*x = ListSnapshotsRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSnapshotsRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotsRequestPB) ProtoMessage() {}

func (x *ListSnapshotsRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotsRequestPB.ProtoReflect.Descriptor instead.
func (*ListSnapshotsRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{7}
}

func (x *ListSnapshotsRequestPB) GetSnapshotId() []byte {
	if x != nil {
		return x.SnapshotId
	}
	return nil
}

func (x *ListSnapshotsRequestPB) GetListDeletedSnapshots() bool {
	if x != nil && x.ListDeletedSnapshots != nil {
		return *x.ListDeletedSnapshots
	}
	return false
}

func (x *ListSnapshotsRequestPB) GetPrepareForBackup() bool {
	if x != nil && x.PrepareForBackup != nil {
		return *x.PrepareForBackup
	}
	return false
}

type ListSnapshotsResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	// Non-transactional snapshot currently being created/restored.
	CurrentSnapshotId []byte            `protobuf:"bytes,2,opt,name=current_snapshot_id,json=currentSnapshotId" json:"current_snapshot_id,omitempty"`
	Snapshots         []*SnapshotInfoPB `protobuf:"bytes,3,rep,name=snapshots" json:"snapshots,omitempty"`
}

func (x *ListSnapshotsResponsePB) Reset() {
	*x = ListSnapshotsResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSnapshotsResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotsResponsePB) ProtoMessage() {}

func (x *ListSnapshotsResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotsResponsePB.ProtoReflect.Descriptor instead.
func (*ListSnapshotsResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{8}
}

func (x *ListSnapshotsResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ListSnapshotsResponsePB) GetCurrentSnapshotId() []byte {
	if x != nil {
		return x.CurrentSnapshotId
	}
	return nil
}

func (x *ListSnapshotsResponsePB) GetSnapshots() []*SnapshotInfoPB {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

type RestoreSnapshotRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotId []byte  `protobuf:"bytes,2,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
	RestoreHt  *uint64 `protobuf:"fixed64,3,opt,name=restore_ht,json=restoreHt" json:"restore_ht,omitempty"` // Absolute Timing Option: Max HybridTime, in Micros.
}

func (x *RestoreSnapshotRequestPB) Reset() {
	*x = RestoreSnapshotRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreSnapshotRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreSnapshotRequestPB) ProtoMessage() {}

func (x *RestoreSnapshotRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreSnapshotRequestPB.ProtoReflect.Descriptor instead.
func (*RestoreSnapshotRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{9}
}

func (x *RestoreSnapshotRequestPB) GetSnapshotId() []byte {
	if x != nil {
		return x.SnapshotId
	}
	return nil
}

func (x *RestoreSnapshotRequestPB) GetRestoreHt() uint64 {
	if x != nil && x.RestoreHt != nil {
		return *x.RestoreHt
	}
	return 0
}

type RestoreSnapshotResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	RestorationId []byte         `protobuf:"bytes,2,opt,name=restoration_id,json=restorationId" json:"restoration_id,omitempty"` // 16 bytes UUID
}

func (x *RestoreSnapshotResponsePB) Reset() {
	*x = RestoreSnapshotResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreSnapshotResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreSnapshotResponsePB) ProtoMessage() {}

func (x *RestoreSnapshotResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreSnapshotResponsePB.ProtoReflect.Descriptor instead.
func (*RestoreSnapshotResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{10}
}

func (x *RestoreSnapshotResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RestoreSnapshotResponsePB) GetRestorationId() []byte {
	if x != nil {
		return x.RestorationId
	}
	return nil
}

type DeleteSnapshotRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotId []byte `protobuf:"bytes,2,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
}

func (x *DeleteSnapshotRequestPB) Reset() {
	*x = DeleteSnapshotRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSnapshotRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSnapshotRequestPB) ProtoMessage() {}

func (x *DeleteSnapshotRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSnapshotRequestPB.ProtoReflect.Descriptor instead.
func (*DeleteSnapshotRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteSnapshotRequestPB) GetSnapshotId() []byte {
	if x != nil {
		return x.SnapshotId
	}
	return nil
}

type DeleteSnapshotResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (x *DeleteSnapshotResponsePB) Reset() {
	*x = DeleteSnapshotResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSnapshotResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSnapshotResponsePB) ProtoMessage() {}

func (x *DeleteSnapshotResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSnapshotResponsePB.ProtoReflect.Descriptor instead.
func (*DeleteSnapshotResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteSnapshotResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type ImportSnapshotMetaRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot *SnapshotInfoPB `protobuf:"bytes,1,opt,name=snapshot" json:"snapshot,omitempty"`
}

func (x *ImportSnapshotMetaRequestPB) Reset() {
	*x = ImportSnapshotMetaRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportSnapshotMetaRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportSnapshotMetaRequestPB) ProtoMessage() {}

func (x *ImportSnapshotMetaRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportSnapshotMetaRequestPB.ProtoReflect.Descriptor instead.
func (*ImportSnapshotMetaRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{13}
}

func (x *ImportSnapshotMetaRequestPB) GetSnapshot() *SnapshotInfoPB {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type ListSnapshotRestorationsRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotId    []byte `protobuf:"bytes,1,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`          // 16 bytes UUID
	RestorationId []byte `protobuf:"bytes,2,opt,name=restoration_id,json=restorationId" json:"restoration_id,omitempty"` // 16 bytes UUID
}

func (x *ListSnapshotRestorationsRequestPB) Reset() {
	*x = ListSnapshotRestorationsRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSnapshotRestorationsRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotRestorationsRequestPB) ProtoMessage() {}

func (x *ListSnapshotRestorationsRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotRestorationsRequestPB.ProtoReflect.Descriptor instead.
func (*ListSnapshotRestorationsRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{14}
}

func (x *ListSnapshotRestorationsRequestPB) GetSnapshotId() []byte {
	if x != nil {
		return x.SnapshotId
	}
	return nil
}

func (x *ListSnapshotRestorationsRequestPB) GetRestorationId() []byte {
	if x != nil {
		return x.RestorationId
	}
	return nil
}

type ListSnapshotRestorationsResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       *AppStatusPB         `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Restorations []*RestorationInfoPB `protobuf:"bytes,2,rep,name=restorations" json:"restorations,omitempty"`
}

func (x *ListSnapshotRestorationsResponsePB) Reset() {
	*x = ListSnapshotRestorationsResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSnapshotRestorationsResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotRestorationsResponsePB) ProtoMessage() {}

func (x *ListSnapshotRestorationsResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotRestorationsResponsePB.ProtoReflect.Descriptor instead.
func (*ListSnapshotRestorationsResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{15}
}

func (x *ListSnapshotRestorationsResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListSnapshotRestorationsResponsePB) GetRestorations() []*RestorationInfoPB {
	if x != nil {
		return x.Restorations
	}
	return nil
}

// ID mapping pair: old ID (object ID on external cluster) TO new ID
// (same object ID on this cluster)
type IdPairPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldId []byte `protobuf:"bytes,1,opt,name=old_id,json=oldId" json:"old_id,omitempty"`
	NewId []byte `protobuf:"bytes,2,opt,name=new_id,json=newId" json:"new_id,omitempty"`
}

func (x *IdPairPB) Reset() {
	*x = IdPairPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdPairPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdPairPB) ProtoMessage() {}

func (x *IdPairPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdPairPB.ProtoReflect.Descriptor instead.
func (*IdPairPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{16}
}

func (x *IdPairPB) GetOldId() []byte {
	if x != nil {
		return x.OldId
	}
	return nil
}

func (x *IdPairPB) GetNewId() []byte {
	if x != nil {
		return x.NewId
	}
	return nil
}

type ImportSnapshotMetaResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      *MasterErrorPB                              `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	TablesMeta []*ImportSnapshotMetaResponsePB_TableMetaPB `protobuf:"bytes,3,rep,name=tables_meta,json=tablesMeta" json:"tables_meta,omitempty"`
}

func (x *ImportSnapshotMetaResponsePB) Reset() {
	*x = ImportSnapshotMetaResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportSnapshotMetaResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportSnapshotMetaResponsePB) ProtoMessage() {}

func (x *ImportSnapshotMetaResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportSnapshotMetaResponsePB.ProtoReflect.Descriptor instead.
func (*ImportSnapshotMetaResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{17}
}

func (x *ImportSnapshotMetaResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ImportSnapshotMetaResponsePB) GetTablesMeta() []*ImportSnapshotMetaResponsePB_TableMetaPB {
	if x != nil {
		return x.TablesMeta
	}
	return nil
}

type TableIdentifiersPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables []*TableIdentifierPB `protobuf:"bytes,1,rep,name=tables" json:"tables,omitempty"`
}

func (x *TableIdentifiersPB) Reset() {
	*x = TableIdentifiersPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableIdentifiersPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableIdentifiersPB) ProtoMessage() {}

func (x *TableIdentifiersPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableIdentifiersPB.ProtoReflect.Descriptor instead.
func (*TableIdentifiersPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{18}
}

func (x *TableIdentifiersPB) GetTables() []*TableIdentifierPB {
	if x != nil {
		return x.Tables
	}
	return nil
}

type SnapshotScheduleFilterPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//	*SnapshotScheduleFilterPB_Tables
	Filter isSnapshotScheduleFilterPB_Filter `protobuf_oneof:"filter"`
}

func (x *SnapshotScheduleFilterPB) Reset() {
	*x = SnapshotScheduleFilterPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotScheduleFilterPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotScheduleFilterPB) ProtoMessage() {}

func (x *SnapshotScheduleFilterPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotScheduleFilterPB.ProtoReflect.Descriptor instead.
func (*SnapshotScheduleFilterPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{19}
}

func (m *SnapshotScheduleFilterPB) GetFilter() isSnapshotScheduleFilterPB_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *SnapshotScheduleFilterPB) GetTables() *TableIdentifiersPB {
	if x, ok := x.GetFilter().(*SnapshotScheduleFilterPB_Tables); ok {
		return x.Tables
	}
	return nil
}

type isSnapshotScheduleFilterPB_Filter interface {
	isSnapshotScheduleFilterPB_Filter()
}

type SnapshotScheduleFilterPB_Tables struct {
	Tables *TableIdentifiersPB `protobuf:"bytes,1,opt,name=tables,oneof"`
}

func (*SnapshotScheduleFilterPB_Tables) isSnapshotScheduleFilterPB_Filter() {}

type SnapshotScheduleOptionsPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter               *SnapshotScheduleFilterPB `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	IntervalSec          *uint64                   `protobuf:"varint,2,opt,name=interval_sec,json=intervalSec" json:"interval_sec,omitempty"`                              // interval for taking snapshot in seconds.
	RetentionDurationSec *uint64                   `protobuf:"varint,3,opt,name=retention_duration_sec,json=retentionDurationSec" json:"retention_duration_sec,omitempty"` // how long store snapshots in seconds.
	DeleteTime           *uint64                   `protobuf:"fixed64,4,opt,name=delete_time,json=deleteTime" json:"delete_time,omitempty"`                                // hybrid time when this schedule was deleted.
}

func (x *SnapshotScheduleOptionsPB) Reset() {
	*x = SnapshotScheduleOptionsPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotScheduleOptionsPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotScheduleOptionsPB) ProtoMessage() {}

func (x *SnapshotScheduleOptionsPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotScheduleOptionsPB.ProtoReflect.Descriptor instead.
func (*SnapshotScheduleOptionsPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{20}
}

func (x *SnapshotScheduleOptionsPB) GetFilter() *SnapshotScheduleFilterPB {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *SnapshotScheduleOptionsPB) GetIntervalSec() uint64 {
	if x != nil && x.IntervalSec != nil {
		return *x.IntervalSec
	}
	return 0
}

func (x *SnapshotScheduleOptionsPB) GetRetentionDurationSec() uint64 {
	if x != nil && x.RetentionDurationSec != nil {
		return *x.RetentionDurationSec
	}
	return 0
}

func (x *SnapshotScheduleOptionsPB) GetDeleteTime() uint64 {
	if x != nil && x.DeleteTime != nil {
		return *x.DeleteTime
	}
	return 0
}

type CreateSnapshotScheduleRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *SnapshotScheduleOptionsPB `protobuf:"bytes,1,opt,name=options" json:"options,omitempty"`
}

func (x *CreateSnapshotScheduleRequestPB) Reset() {
	*x = CreateSnapshotScheduleRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotScheduleRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotScheduleRequestPB) ProtoMessage() {}

func (x *CreateSnapshotScheduleRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotScheduleRequestPB.ProtoReflect.Descriptor instead.
func (*CreateSnapshotScheduleRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{21}
}

func (x *CreateSnapshotScheduleRequestPB) GetOptions() *SnapshotScheduleOptionsPB {
	if x != nil {
		return x.Options
	}
	return nil
}

type CreateSnapshotScheduleResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error              *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	SnapshotScheduleId []byte         `protobuf:"bytes,2,opt,name=snapshot_schedule_id,json=snapshotScheduleId" json:"snapshot_schedule_id,omitempty"`
}

func (x *CreateSnapshotScheduleResponsePB) Reset() {
	*x = CreateSnapshotScheduleResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotScheduleResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotScheduleResponsePB) ProtoMessage() {}

func (x *CreateSnapshotScheduleResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotScheduleResponsePB.ProtoReflect.Descriptor instead.
func (*CreateSnapshotScheduleResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{22}
}

func (x *CreateSnapshotScheduleResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CreateSnapshotScheduleResponsePB) GetSnapshotScheduleId() []byte {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return nil
}

type ListSnapshotSchedulesRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// When snapshot_schedule_id is not specified, all schedules are listed.
	SnapshotScheduleId []byte `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId" json:"snapshot_schedule_id,omitempty"`
}

func (x *ListSnapshotSchedulesRequestPB) Reset() {
	*x = ListSnapshotSchedulesRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSnapshotSchedulesRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotSchedulesRequestPB) ProtoMessage() {}

func (x *ListSnapshotSchedulesRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotSchedulesRequestPB.ProtoReflect.Descriptor instead.
func (*ListSnapshotSchedulesRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{23}
}

func (x *ListSnapshotSchedulesRequestPB) GetSnapshotScheduleId() []byte {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return nil
}

type SnapshotScheduleInfoPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        []byte                     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Options   *SnapshotScheduleOptionsPB `protobuf:"bytes,2,opt,name=options" json:"options,omitempty"`
	Snapshots []*SnapshotInfoPB          `protobuf:"bytes,3,rep,name=snapshots" json:"snapshots,omitempty"`
}

func (x *SnapshotScheduleInfoPB) Reset() {
	*x = SnapshotScheduleInfoPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotScheduleInfoPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotScheduleInfoPB) ProtoMessage() {}

func (x *SnapshotScheduleInfoPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotScheduleInfoPB.ProtoReflect.Descriptor instead.
func (*SnapshotScheduleInfoPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{24}
}

func (x *SnapshotScheduleInfoPB) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SnapshotScheduleInfoPB) GetOptions() *SnapshotScheduleOptionsPB {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *SnapshotScheduleInfoPB) GetSnapshots() []*SnapshotInfoPB {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

type ListSnapshotSchedulesResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     *MasterErrorPB            `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Schedules []*SnapshotScheduleInfoPB `protobuf:"bytes,2,rep,name=schedules" json:"schedules,omitempty"`
}

func (x *ListSnapshotSchedulesResponsePB) Reset() {
	*x = ListSnapshotSchedulesResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSnapshotSchedulesResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotSchedulesResponsePB) ProtoMessage() {}

func (x *ListSnapshotSchedulesResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotSchedulesResponsePB.ProtoReflect.Descriptor instead.
func (*ListSnapshotSchedulesResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{25}
}

func (x *ListSnapshotSchedulesResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ListSnapshotSchedulesResponsePB) GetSchedules() []*SnapshotScheduleInfoPB {
	if x != nil {
		return x.Schedules
	}
	return nil
}

type DeleteSnapshotScheduleRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotScheduleId []byte `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId" json:"snapshot_schedule_id,omitempty"`
}

func (x *DeleteSnapshotScheduleRequestPB) Reset() {
	*x = DeleteSnapshotScheduleRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSnapshotScheduleRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSnapshotScheduleRequestPB) ProtoMessage() {}

func (x *DeleteSnapshotScheduleRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSnapshotScheduleRequestPB.ProtoReflect.Descriptor instead.
func (*DeleteSnapshotScheduleRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteSnapshotScheduleRequestPB) GetSnapshotScheduleId() []byte {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return nil
}

type DeleteSnapshotScheduleResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (x *DeleteSnapshotScheduleResponsePB) Reset() {
	*x = DeleteSnapshotScheduleResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSnapshotScheduleResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSnapshotScheduleResponsePB) ProtoMessage() {}

func (x *DeleteSnapshotScheduleResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSnapshotScheduleResponsePB.ProtoReflect.Descriptor instead.
func (*DeleteSnapshotScheduleResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteSnapshotScheduleResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

// Per table IDs mapping (IDs on external cluster TO IDs on this cluster).
type ImportSnapshotMetaResponsePB_TableMetaPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceIds *IdPairPB                               `protobuf:"bytes,1,opt,name=namespace_ids,json=namespaceIds" json:"namespace_ids,omitempty"`
	TableIds     *IdPairPB                               `protobuf:"bytes,2,opt,name=table_ids,json=tableIds" json:"table_ids,omitempty"`
	TabletsIds   []*IdPairPB                             `protobuf:"bytes,3,rep,name=tablets_ids,json=tabletsIds" json:"tablets_ids,omitempty"`
	TableType    *ImportSnapshotMetaResponsePB_TableType `protobuf:"varint,4,opt,name=table_type,json=tableType,enum=yb.master.ImportSnapshotMetaResponsePB_TableType,def=0" json:"table_type,omitempty"`
}

// Default values for ImportSnapshotMetaResponsePB_TableMetaPB fields.
const (
	Default_ImportSnapshotMetaResponsePB_TableMetaPB_TableType = ImportSnapshotMetaResponsePB_TABLE
)

func (x *ImportSnapshotMetaResponsePB_TableMetaPB) Reset() {
	*x = ImportSnapshotMetaResponsePB_TableMetaPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_backup_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportSnapshotMetaResponsePB_TableMetaPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportSnapshotMetaResponsePB_TableMetaPB) ProtoMessage() {}

func (x *ImportSnapshotMetaResponsePB_TableMetaPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_backup_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportSnapshotMetaResponsePB_TableMetaPB.ProtoReflect.Descriptor instead.
func (*ImportSnapshotMetaResponsePB_TableMetaPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_backup_proto_rawDescGZIP(), []int{17, 0}
}

func (x *ImportSnapshotMetaResponsePB_TableMetaPB) GetNamespaceIds() *IdPairPB {
	if x != nil {
		return x.NamespaceIds
	}
	return nil
}

func (x *ImportSnapshotMetaResponsePB_TableMetaPB) GetTableIds() *IdPairPB {
	if x != nil {
		return x.TableIds
	}
	return nil
}

func (x *ImportSnapshotMetaResponsePB_TableMetaPB) GetTabletsIds() []*IdPairPB {
	if x != nil {
		return x.TabletsIds
	}
	return nil
}

func (x *ImportSnapshotMetaResponsePB_TableMetaPB) GetTableType() ImportSnapshotMetaResponsePB_TableType {
	if x != nil && x.TableType != nil {
		return *x.TableType
	}
	return Default_ImportSnapshotMetaResponsePB_TableMetaPB_TableType
}

var File_yb_master_master_backup_proto protoreflect.FileDescriptor

var file_yb_master_master_backup_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x79, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x1d, 0x79, 0x62, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x79, 0x62, 0x2f, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x79, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x10,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x6f, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x42,
	0x12, 0x2c, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x73, 0x52,
	0x6f, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x24,
	0x0a, 0x0e, 0x70, 0x67, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x67, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42,
	0x12, 0x34, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x42, 0x52, 0x06,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x77, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x77,
	0x61, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x0a, 0x61, 0x64, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x49, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x0e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x42, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x50, 0x42, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x28, 0x0a,
	0x0e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x01, 0x31, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x52, 0x6f, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x42, 0x52, 0x0d, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x60, 0x0a, 0x13, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x42, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x79,
	0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x42,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xf7, 0x01,
	0x0a, 0x15, 0x53, 0x79, 0x73, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x42, 0x12, 0x42, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x53, 0x79, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x50, 0x42, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x3a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x13, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x42, 0x52, 0x12, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x74, 0x22, 0x5b, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x42, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x05,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x79, 0x62,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x42, 0x52, 0x05, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x22, 0x9d, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x16, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x22, 0xb2, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42,
	0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x37, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x42, 0x52, 0x09,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x22, 0x5a, 0x0a, 0x18, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x72, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x48, 0x74, 0x22, 0x72, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x42, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x54, 0x0a, 0x1b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42,
	0x12, 0x35, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x42, 0x52, 0x08, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x6b, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62,
	0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x62, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x42, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x38, 0x0a, 0x08, 0x49, 0x64, 0x50, 0x61, 0x69, 0x72,
	0x50, 0x42, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x6f, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x77,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x65, 0x77, 0x49, 0x64,
	0x22, 0xf8, 0x03, 0x0a, 0x1c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x54, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x42, 0x52, 0x0a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x1a, 0x88, 0x02, 0x0a, 0x0b, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x42, 0x12, 0x38, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x50, 0x61, 0x69,
	0x72, 0x50, 0x42, 0x52, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x30, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x49, 0x64, 0x50, 0x61, 0x69, 0x72, 0x50, 0x42, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x50, 0x61, 0x69, 0x72, 0x50, 0x42, 0x52, 0x0a, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x49, 0x64, 0x73, 0x12, 0x57, 0x0a, 0x0a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e,
	0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x3a, 0x05, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x47, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x09, 0x0a, 0x05, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f,
	0x4c, 0x4f, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x1a, 0x0a, 0x16, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x43, 0x41,
	0x54, 0x45, 0x44, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x22, 0x4a, 0x0a, 0x12, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x50,
	0x42, 0x12, 0x34, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x42, 0x52,
	0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x18, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x50, 0x42, 0x12, 0x37, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x50, 0x42, 0x48, 0x00, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x42, 0x08, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xd2, 0x01, 0x0a, 0x19, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x50, 0x42, 0x12, 0x3b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x42, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x65,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x53, 0x65, 0x63, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x61, 0x0a, 0x1f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x3e,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x50, 0x42, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x84,
	0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x12, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x16, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x42, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x42, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x50, 0x42, 0x52, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x22, 0x92, 0x01,
	0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x3f, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x42, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x22, 0x53, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x12, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xb0, 0x07, 0x0a, 0x0c,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x59, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x22,
	0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x42, 0x1a, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x56, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x22, 0x2e, 0x79, 0x62,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12,
	0x77, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x2e, 0x79, 0x62,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x2d, 0x2e, 0x79, 0x62, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x5c, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x23, 0x2e, 0x79, 0x62,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42,
	0x1a, 0x24, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x59, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x22, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x23, 0x2e, 0x79,
	0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x42, 0x12, 0x65, 0x0a, 0x12, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x26, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a,
	0x27, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x71, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x2b,
	0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x6e, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a,
	0x2a, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x71, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x42, 0x1a, 0x2b, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x42, 0x0f,
	0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
}

var (
	file_yb_master_master_backup_proto_rawDescOnce sync.Once
	file_yb_master_master_backup_proto_rawDescData = file_yb_master_master_backup_proto_rawDesc
)

func file_yb_master_master_backup_proto_rawDescGZIP() []byte {
	file_yb_master_master_backup_proto_rawDescOnce.Do(func() {
		file_yb_master_master_backup_proto_rawDescData = protoimpl.X.CompressGZIP(file_yb_master_master_backup_proto_rawDescData)
	})
	return file_yb_master_master_backup_proto_rawDescData
}

var file_yb_master_master_backup_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yb_master_master_backup_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_yb_master_master_backup_proto_goTypes = []interface{}{
	(ImportSnapshotMetaResponsePB_TableType)(0),      // 0: yb.master.ImportSnapshotMetaResponsePB.TableType
	(*BackupRowEntryPB)(nil),                         // 1: yb.master.BackupRowEntryPB
	(*CreateSnapshotRequestPB)(nil),                  // 2: yb.master.CreateSnapshotRequestPB
	(*CreateSnapshotResponsePB)(nil),                 // 3: yb.master.CreateSnapshotResponsePB
	(*SnapshotInfoPB)(nil),                           // 4: yb.master.SnapshotInfoPB
	(*TabletRestorationPB)(nil),                      // 5: yb.master.TabletRestorationPB
	(*SysRestorationEntryPB)(nil),                    // 6: yb.master.SysRestorationEntryPB
	(*RestorationInfoPB)(nil),                        // 7: yb.master.RestorationInfoPB
	(*ListSnapshotsRequestPB)(nil),                   // 8: yb.master.ListSnapshotsRequestPB
	(*ListSnapshotsResponsePB)(nil),                  // 9: yb.master.ListSnapshotsResponsePB
	(*RestoreSnapshotRequestPB)(nil),                 // 10: yb.master.RestoreSnapshotRequestPB
	(*RestoreSnapshotResponsePB)(nil),                // 11: yb.master.RestoreSnapshotResponsePB
	(*DeleteSnapshotRequestPB)(nil),                  // 12: yb.master.DeleteSnapshotRequestPB
	(*DeleteSnapshotResponsePB)(nil),                 // 13: yb.master.DeleteSnapshotResponsePB
	(*ImportSnapshotMetaRequestPB)(nil),              // 14: yb.master.ImportSnapshotMetaRequestPB
	(*ListSnapshotRestorationsRequestPB)(nil),        // 15: yb.master.ListSnapshotRestorationsRequestPB
	(*ListSnapshotRestorationsResponsePB)(nil),       // 16: yb.master.ListSnapshotRestorationsResponsePB
	(*IdPairPB)(nil),                                 // 17: yb.master.IdPairPB
	(*ImportSnapshotMetaResponsePB)(nil),             // 18: yb.master.ImportSnapshotMetaResponsePB
	(*TableIdentifiersPB)(nil),                       // 19: yb.master.TableIdentifiersPB
	(*SnapshotScheduleFilterPB)(nil),                 // 20: yb.master.SnapshotScheduleFilterPB
	(*SnapshotScheduleOptionsPB)(nil),                // 21: yb.master.SnapshotScheduleOptionsPB
	(*CreateSnapshotScheduleRequestPB)(nil),          // 22: yb.master.CreateSnapshotScheduleRequestPB
	(*CreateSnapshotScheduleResponsePB)(nil),         // 23: yb.master.CreateSnapshotScheduleResponsePB
	(*ListSnapshotSchedulesRequestPB)(nil),           // 24: yb.master.ListSnapshotSchedulesRequestPB
	(*SnapshotScheduleInfoPB)(nil),                   // 25: yb.master.SnapshotScheduleInfoPB
	(*ListSnapshotSchedulesResponsePB)(nil),          // 26: yb.master.ListSnapshotSchedulesResponsePB
	(*DeleteSnapshotScheduleRequestPB)(nil),          // 27: yb.master.DeleteSnapshotScheduleRequestPB
	(*DeleteSnapshotScheduleResponsePB)(nil),         // 28: yb.master.DeleteSnapshotScheduleResponsePB
	(*ImportSnapshotMetaResponsePB_TableMetaPB)(nil), // 29: yb.master.ImportSnapshotMetaResponsePB.TableMetaPB
	(*SysRowEntry)(nil),                              // 30: yb.master.SysRowEntry
	(*TableIdentifierPB)(nil),                        // 31: yb.master.TableIdentifierPB
	(*MasterErrorPB)(nil),                            // 32: yb.master.MasterErrorPB
	(*SysSnapshotEntryPB)(nil),                       // 33: yb.master.SysSnapshotEntryPB
	(SysSnapshotEntryPB_State)(0),                    // 34: yb.master.SysSnapshotEntryPB.State
	(*AppStatusPB)(nil),                              // 35: yb.AppStatusPB
}
var file_yb_master_master_backup_proto_depIdxs = []int32{
	30, // 0: yb.master.BackupRowEntryPB.entry:type_name -> yb.master.SysRowEntry
	31, // 1: yb.master.CreateSnapshotRequestPB.tables:type_name -> yb.master.TableIdentifierPB
	32, // 2: yb.master.CreateSnapshotResponsePB.error:type_name -> yb.master.MasterErrorPB
	33, // 3: yb.master.SnapshotInfoPB.entry:type_name -> yb.master.SysSnapshotEntryPB
	1,  // 4: yb.master.SnapshotInfoPB.backup_entries:type_name -> yb.master.BackupRowEntryPB
	34, // 5: yb.master.TabletRestorationPB.state:type_name -> yb.master.SysSnapshotEntryPB.State
	34, // 6: yb.master.SysRestorationEntryPB.state:type_name -> yb.master.SysSnapshotEntryPB.State
	5,  // 7: yb.master.SysRestorationEntryPB.tablet_restorations:type_name -> yb.master.TabletRestorationPB
	6,  // 8: yb.master.RestorationInfoPB.entry:type_name -> yb.master.SysRestorationEntryPB
	32, // 9: yb.master.ListSnapshotsResponsePB.error:type_name -> yb.master.MasterErrorPB
	4,  // 10: yb.master.ListSnapshotsResponsePB.snapshots:type_name -> yb.master.SnapshotInfoPB
	32, // 11: yb.master.RestoreSnapshotResponsePB.error:type_name -> yb.master.MasterErrorPB
	32, // 12: yb.master.DeleteSnapshotResponsePB.error:type_name -> yb.master.MasterErrorPB
	4,  // 13: yb.master.ImportSnapshotMetaRequestPB.snapshot:type_name -> yb.master.SnapshotInfoPB
	35, // 14: yb.master.ListSnapshotRestorationsResponsePB.status:type_name -> yb.AppStatusPB
	7,  // 15: yb.master.ListSnapshotRestorationsResponsePB.restorations:type_name -> yb.master.RestorationInfoPB
	32, // 16: yb.master.ImportSnapshotMetaResponsePB.error:type_name -> yb.master.MasterErrorPB
	29, // 17: yb.master.ImportSnapshotMetaResponsePB.tables_meta:type_name -> yb.master.ImportSnapshotMetaResponsePB.TableMetaPB
	31, // 18: yb.master.TableIdentifiersPB.tables:type_name -> yb.master.TableIdentifierPB
	19, // 19: yb.master.SnapshotScheduleFilterPB.tables:type_name -> yb.master.TableIdentifiersPB
	20, // 20: yb.master.SnapshotScheduleOptionsPB.filter:type_name -> yb.master.SnapshotScheduleFilterPB
	21, // 21: yb.master.CreateSnapshotScheduleRequestPB.options:type_name -> yb.master.SnapshotScheduleOptionsPB
	32, // 22: yb.master.CreateSnapshotScheduleResponsePB.error:type_name -> yb.master.MasterErrorPB
	21, // 23: yb.master.SnapshotScheduleInfoPB.options:type_name -> yb.master.SnapshotScheduleOptionsPB
	4,  // 24: yb.master.SnapshotScheduleInfoPB.snapshots:type_name -> yb.master.SnapshotInfoPB
	32, // 25: yb.master.ListSnapshotSchedulesResponsePB.error:type_name -> yb.master.MasterErrorPB
	25, // 26: yb.master.ListSnapshotSchedulesResponsePB.schedules:type_name -> yb.master.SnapshotScheduleInfoPB
	32, // 27: yb.master.DeleteSnapshotScheduleResponsePB.error:type_name -> yb.master.MasterErrorPB
	17, // 28: yb.master.ImportSnapshotMetaResponsePB.TableMetaPB.namespace_ids:type_name -> yb.master.IdPairPB
	17, // 29: yb.master.ImportSnapshotMetaResponsePB.TableMetaPB.table_ids:type_name -> yb.master.IdPairPB
	17, // 30: yb.master.ImportSnapshotMetaResponsePB.TableMetaPB.tablets_ids:type_name -> yb.master.IdPairPB
	0,  // 31: yb.master.ImportSnapshotMetaResponsePB.TableMetaPB.table_type:type_name -> yb.master.ImportSnapshotMetaResponsePB.TableType
	2,  // 32: yb.master.MasterBackup.CreateSnapshot:input_type -> yb.master.CreateSnapshotRequestPB
	8,  // 33: yb.master.MasterBackup.ListSnapshots:input_type -> yb.master.ListSnapshotsRequestPB
	15, // 34: yb.master.MasterBackup.ListSnapshotRestorations:input_type -> yb.master.ListSnapshotRestorationsRequestPB
	10, // 35: yb.master.MasterBackup.RestoreSnapshot:input_type -> yb.master.RestoreSnapshotRequestPB
	12, // 36: yb.master.MasterBackup.DeleteSnapshot:input_type -> yb.master.DeleteSnapshotRequestPB
	14, // 37: yb.master.MasterBackup.ImportSnapshotMeta:input_type -> yb.master.ImportSnapshotMetaRequestPB
	22, // 38: yb.master.MasterBackup.CreateSnapshotSchedule:input_type -> yb.master.CreateSnapshotScheduleRequestPB
	24, // 39: yb.master.MasterBackup.ListSnapshotSchedules:input_type -> yb.master.ListSnapshotSchedulesRequestPB
	27, // 40: yb.master.MasterBackup.DeleteSnapshotSchedule:input_type -> yb.master.DeleteSnapshotScheduleRequestPB
	3,  // 41: yb.master.MasterBackup.CreateSnapshot:output_type -> yb.master.CreateSnapshotResponsePB
	9,  // 42: yb.master.MasterBackup.ListSnapshots:output_type -> yb.master.ListSnapshotsResponsePB
	16, // 43: yb.master.MasterBackup.ListSnapshotRestorations:output_type -> yb.master.ListSnapshotRestorationsResponsePB
	11, // 44: yb.master.MasterBackup.RestoreSnapshot:output_type -> yb.master.RestoreSnapshotResponsePB
	13, // 45: yb.master.MasterBackup.DeleteSnapshot:output_type -> yb.master.DeleteSnapshotResponsePB
	18, // 46: yb.master.MasterBackup.ImportSnapshotMeta:output_type -> yb.master.ImportSnapshotMetaResponsePB
	23, // 47: yb.master.MasterBackup.CreateSnapshotSchedule:output_type -> yb.master.CreateSnapshotScheduleResponsePB
	26, // 48: yb.master.MasterBackup.ListSnapshotSchedules:output_type -> yb.master.ListSnapshotSchedulesResponsePB
	28, // 49: yb.master.MasterBackup.DeleteSnapshotSchedule:output_type -> yb.master.DeleteSnapshotScheduleResponsePB
	41, // [41:50] is the sub-list for method output_type
	32, // [32:41] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_yb_master_master_backup_proto_init() }
func file_yb_master_master_backup_proto_init() {
	if File_yb_master_master_backup_proto != nil {
		return
	}
	file_yb_common_wire_protocol_proto_init()
	file_yb_master_catalog_entity_info_proto_init()
	file_yb_master_master_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yb_master_master_backup_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupRowEntryPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotInfoPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TabletRestorationPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRestorationEntryPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestorationInfoPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSnapshotsRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSnapshotsResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreSnapshotRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreSnapshotResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSnapshotRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSnapshotResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportSnapshotMetaRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSnapshotRestorationsRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSnapshotRestorationsResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdPairPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportSnapshotMetaResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableIdentifiersPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotScheduleFilterPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotScheduleOptionsPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotScheduleRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotScheduleResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSnapshotSchedulesRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotScheduleInfoPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSnapshotSchedulesResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSnapshotScheduleRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSnapshotScheduleResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_backup_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportSnapshotMetaResponsePB_TableMetaPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yb_master_master_backup_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*SnapshotScheduleFilterPB_Tables)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yb_master_master_backup_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yb_master_master_backup_proto_goTypes,
		DependencyIndexes: file_yb_master_master_backup_proto_depIdxs,
		EnumInfos:         file_yb_master_master_backup_proto_enumTypes,
		MessageInfos:      file_yb_master_master_backup_proto_msgTypes,
	}.Build()
	File_yb_master_master_backup_proto = out.File
	file_yb_master_master_backup_proto_rawDesc = nil
	file_yb_master_master_backup_proto_goTypes = nil
	file_yb_master_master_backup_proto_depIdxs = nil
}
