// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: yb/tserver/pg_client.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PgHeartbeatRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId uint64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *PgHeartbeatRequestPB) Reset() {
	*x = PgHeartbeatRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgHeartbeatRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgHeartbeatRequestPB) ProtoMessage() {}

func (x *PgHeartbeatRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgHeartbeatRequestPB.ProtoReflect.Descriptor instead.
func (*PgHeartbeatRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{0}
}

func (x *PgHeartbeatRequestPB) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

type PgHeartbeatResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	SessionId uint64       `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *PgHeartbeatResponsePB) Reset() {
	*x = PgHeartbeatResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgHeartbeatResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgHeartbeatResponsePB) ProtoMessage() {}

func (x *PgHeartbeatResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgHeartbeatResponsePB.ProtoReflect.Descriptor instead.
func (*PgHeartbeatResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{1}
}

func (x *PgHeartbeatResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *PgHeartbeatResponsePB) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

type PgObjectIdPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatabaseOid uint32 `protobuf:"varint,1,opt,name=database_oid,json=databaseOid,proto3" json:"database_oid,omitempty"`
	ObjectOid   uint32 `protobuf:"varint,2,opt,name=object_oid,json=objectOid,proto3" json:"object_oid,omitempty"`
}

func (x *PgObjectIdPB) Reset() {
	*x = PgObjectIdPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgObjectIdPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgObjectIdPB) ProtoMessage() {}

func (x *PgObjectIdPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgObjectIdPB.ProtoReflect.Descriptor instead.
func (*PgObjectIdPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{2}
}

func (x *PgObjectIdPB) GetDatabaseOid() uint32 {
	if x != nil {
		return x.DatabaseOid
	}
	return 0
}

func (x *PgObjectIdPB) GetObjectOid() uint32 {
	if x != nil {
		return x.ObjectOid
	}
	return 0
}

type PgAlterDatabaseRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    uint64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DatabaseName string `protobuf:"bytes,2,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	DatabaseOid  uint32 `protobuf:"varint,3,opt,name=database_oid,json=databaseOid,proto3" json:"database_oid,omitempty"`
	NewName      string `protobuf:"bytes,4,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
}

func (x *PgAlterDatabaseRequestPB) Reset() {
	*x = PgAlterDatabaseRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgAlterDatabaseRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgAlterDatabaseRequestPB) ProtoMessage() {}

func (x *PgAlterDatabaseRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgAlterDatabaseRequestPB.ProtoReflect.Descriptor instead.
func (*PgAlterDatabaseRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{3}
}

func (x *PgAlterDatabaseRequestPB) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *PgAlterDatabaseRequestPB) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *PgAlterDatabaseRequestPB) GetDatabaseOid() uint32 {
	if x != nil {
		return x.DatabaseOid
	}
	return 0
}

func (x *PgAlterDatabaseRequestPB) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type PgAlterDatabaseResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PgAlterDatabaseResponsePB) Reset() {
	*x = PgAlterDatabaseResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgAlterDatabaseResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgAlterDatabaseResponsePB) ProtoMessage() {}

func (x *PgAlterDatabaseResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgAlterDatabaseResponsePB.ProtoReflect.Descriptor instead.
func (*PgAlterDatabaseResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{4}
}

func (x *PgAlterDatabaseResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

type PgBackfillIndexRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId uint64        `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TableId   *PgObjectIdPB `protobuf:"bytes,2,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
}

func (x *PgBackfillIndexRequestPB) Reset() {
	*x = PgBackfillIndexRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgBackfillIndexRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgBackfillIndexRequestPB) ProtoMessage() {}

func (x *PgBackfillIndexRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgBackfillIndexRequestPB.ProtoReflect.Descriptor instead.
func (*PgBackfillIndexRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{5}
}

func (x *PgBackfillIndexRequestPB) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *PgBackfillIndexRequestPB) GetTableId() *PgObjectIdPB {
	if x != nil {
		return x.TableId
	}
	return nil
}

type PgBackfillIndexResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PgBackfillIndexResponsePB) Reset() {
	*x = PgBackfillIndexResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgBackfillIndexResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgBackfillIndexResponsePB) ProtoMessage() {}

func (x *PgBackfillIndexResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgBackfillIndexResponsePB.ProtoReflect.Descriptor instead.
func (*PgBackfillIndexResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{6}
}

func (x *PgBackfillIndexResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

type PgRenameColumnPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldName string `protobuf:"bytes,1,opt,name=old_name,json=oldName,proto3" json:"old_name,omitempty"`
	NewName string `protobuf:"bytes,2,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
}

func (x *PgRenameColumnPB) Reset() {
	*x = PgRenameColumnPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgRenameColumnPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgRenameColumnPB) ProtoMessage() {}

func (x *PgRenameColumnPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgRenameColumnPB.ProtoReflect.Descriptor instead.
func (*PgRenameColumnPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{7}
}

func (x *PgRenameColumnPB) GetOldName() string {
	if x != nil {
		return x.OldName
	}
	return ""
}

func (x *PgRenameColumnPB) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type PgRenameTablePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatabaseName string `protobuf:"bytes,1,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	TableName    string `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
}

func (x *PgRenameTablePB) Reset() {
	*x = PgRenameTablePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgRenameTablePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgRenameTablePB) ProtoMessage() {}

func (x *PgRenameTablePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgRenameTablePB.ProtoReflect.Descriptor instead.
func (*PgRenameTablePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{8}
}

func (x *PgRenameTablePB) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *PgRenameTablePB) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type PgAlterTableRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId      uint64                 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UseTransaction *TransactionMetadataPB `protobuf:"bytes,2,opt,name=use_transaction,json=useTransaction,proto3" json:"use_transaction,omitempty"` // TODO(PG_CLIENT) Replace with bool.
	TableId        *PgObjectIdPB          `protobuf:"bytes,3,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	AddColumns     []*PgCreateColumnPB    `protobuf:"bytes,4,rep,name=add_columns,json=addColumns,proto3" json:"add_columns,omitempty"`
	RenameColumns  []*PgRenameColumnPB    `protobuf:"bytes,5,rep,name=rename_columns,json=renameColumns,proto3" json:"rename_columns,omitempty"`
	DropColumns    []string               `protobuf:"bytes,6,rep,name=drop_columns,json=dropColumns,proto3" json:"drop_columns,omitempty"`
	RenameTable    *PgRenameTablePB       `protobuf:"bytes,7,opt,name=rename_table,json=renameTable,proto3" json:"rename_table,omitempty"`
}

func (x *PgAlterTableRequestPB) Reset() {
	*x = PgAlterTableRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgAlterTableRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgAlterTableRequestPB) ProtoMessage() {}

func (x *PgAlterTableRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgAlterTableRequestPB.ProtoReflect.Descriptor instead.
func (*PgAlterTableRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{9}
}

func (x *PgAlterTableRequestPB) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *PgAlterTableRequestPB) GetUseTransaction() *TransactionMetadataPB {
	if x != nil {
		return x.UseTransaction
	}
	return nil
}

func (x *PgAlterTableRequestPB) GetTableId() *PgObjectIdPB {
	if x != nil {
		return x.TableId
	}
	return nil
}

func (x *PgAlterTableRequestPB) GetAddColumns() []*PgCreateColumnPB {
	if x != nil {
		return x.AddColumns
	}
	return nil
}

func (x *PgAlterTableRequestPB) GetRenameColumns() []*PgRenameColumnPB {
	if x != nil {
		return x.RenameColumns
	}
	return nil
}

func (x *PgAlterTableRequestPB) GetDropColumns() []string {
	if x != nil {
		return x.DropColumns
	}
	return nil
}

func (x *PgAlterTableRequestPB) GetRenameTable() *PgRenameTablePB {
	if x != nil {
		return x.RenameTable
	}
	return nil
}

type PgAlterTableResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PgAlterTableResponsePB) Reset() {
	*x = PgAlterTableResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgAlterTableResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgAlterTableResponsePB) ProtoMessage() {}

func (x *PgAlterTableResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgAlterTableResponsePB.ProtoReflect.Descriptor instead.
func (*PgAlterTableResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{10}
}

func (x *PgAlterTableResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

type PgCreateDatabaseRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId         uint64                 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UseTransaction    *TransactionMetadataPB `protobuf:"bytes,2,opt,name=use_transaction,json=useTransaction,proto3" json:"use_transaction,omitempty"` // TODO(PG_CLIENT) Replace with bool.
	DatabaseName      string                 `protobuf:"bytes,3,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	DatabaseOid       uint32                 `protobuf:"varint,4,opt,name=database_oid,json=databaseOid,proto3" json:"database_oid,omitempty"`
	SourceDatabaseOid uint32                 `protobuf:"varint,5,opt,name=source_database_oid,json=sourceDatabaseOid,proto3" json:"source_database_oid,omitempty"`
	NextOid           uint32                 `protobuf:"varint,6,opt,name=next_oid,json=nextOid,proto3" json:"next_oid,omitempty"`
	Colocated         bool                   `protobuf:"varint,7,opt,name=colocated,proto3" json:"colocated,omitempty"`
}

func (x *PgCreateDatabaseRequestPB) Reset() {
	*x = PgCreateDatabaseRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgCreateDatabaseRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgCreateDatabaseRequestPB) ProtoMessage() {}

func (x *PgCreateDatabaseRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgCreateDatabaseRequestPB.ProtoReflect.Descriptor instead.
func (*PgCreateDatabaseRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{11}
}

func (x *PgCreateDatabaseRequestPB) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *PgCreateDatabaseRequestPB) GetUseTransaction() *TransactionMetadataPB {
	if x != nil {
		return x.UseTransaction
	}
	return nil
}

func (x *PgCreateDatabaseRequestPB) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *PgCreateDatabaseRequestPB) GetDatabaseOid() uint32 {
	if x != nil {
		return x.DatabaseOid
	}
	return 0
}

func (x *PgCreateDatabaseRequestPB) GetSourceDatabaseOid() uint32 {
	if x != nil {
		return x.SourceDatabaseOid
	}
	return 0
}

func (x *PgCreateDatabaseRequestPB) GetNextOid() uint32 {
	if x != nil {
		return x.NextOid
	}
	return 0
}

func (x *PgCreateDatabaseRequestPB) GetColocated() bool {
	if x != nil {
		return x.Colocated
	}
	return false
}

type PgCreateDatabaseResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PgCreateDatabaseResponsePB) Reset() {
	*x = PgCreateDatabaseResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgCreateDatabaseResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgCreateDatabaseResponsePB) ProtoMessage() {}

func (x *PgCreateDatabaseResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgCreateDatabaseResponsePB.ProtoReflect.Descriptor instead.
func (*PgCreateDatabaseResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{12}
}

func (x *PgCreateDatabaseResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

type PgCreateSequencesDataTableRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PgCreateSequencesDataTableRequestPB) Reset() {
	*x = PgCreateSequencesDataTableRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgCreateSequencesDataTableRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgCreateSequencesDataTableRequestPB) ProtoMessage() {}

func (x *PgCreateSequencesDataTableRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgCreateSequencesDataTableRequestPB.ProtoReflect.Descriptor instead.
func (*PgCreateSequencesDataTableRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{13}
}

type PgCreateSequencesDataTableResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PgCreateSequencesDataTableResponsePB) Reset() {
	*x = PgCreateSequencesDataTableResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgCreateSequencesDataTableResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgCreateSequencesDataTableResponsePB) ProtoMessage() {}

func (x *PgCreateSequencesDataTableResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgCreateSequencesDataTableResponsePB.ProtoReflect.Descriptor instead.
func (*PgCreateSequencesDataTableResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{14}
}

func (x *PgCreateSequencesDataTableResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

type PgCreateColumnPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrName    string `protobuf:"bytes,1,opt,name=attr_name,json=attrName,proto3" json:"attr_name,omitempty"`
	AttrNum     int32  `protobuf:"varint,2,opt,name=attr_num,json=attrNum,proto3" json:"attr_num,omitempty"`
	AttrYbtype  int32  `protobuf:"varint,3,opt,name=attr_ybtype,json=attrYbtype,proto3" json:"attr_ybtype,omitempty"`
	IsHash      bool   `protobuf:"varint,4,opt,name=is_hash,json=isHash,proto3" json:"is_hash,omitempty"`
	IsRange     bool   `protobuf:"varint,5,opt,name=is_range,json=isRange,proto3" json:"is_range,omitempty"`
	SortingType int32  `protobuf:"varint,6,opt,name=sorting_type,json=sortingType,proto3" json:"sorting_type,omitempty"`
}

func (x *PgCreateColumnPB) Reset() {
	*x = PgCreateColumnPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgCreateColumnPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgCreateColumnPB) ProtoMessage() {}

func (x *PgCreateColumnPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgCreateColumnPB.ProtoReflect.Descriptor instead.
func (*PgCreateColumnPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{15}
}

func (x *PgCreateColumnPB) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

func (x *PgCreateColumnPB) GetAttrNum() int32 {
	if x != nil {
		return x.AttrNum
	}
	return 0
}

func (x *PgCreateColumnPB) GetAttrYbtype() int32 {
	if x != nil {
		return x.AttrYbtype
	}
	return 0
}

func (x *PgCreateColumnPB) GetIsHash() bool {
	if x != nil {
		return x.IsHash
	}
	return false
}

func (x *PgCreateColumnPB) GetIsRange() bool {
	if x != nil {
		return x.IsRange
	}
	return false
}

func (x *PgCreateColumnPB) GetSortingType() int32 {
	if x != nil {
		return x.SortingType
	}
	return 0
}

type PgCreateSplitBoundaryPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*QLValuePB `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *PgCreateSplitBoundaryPB) Reset() {
	*x = PgCreateSplitBoundaryPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgCreateSplitBoundaryPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgCreateSplitBoundaryPB) ProtoMessage() {}

func (x *PgCreateSplitBoundaryPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgCreateSplitBoundaryPB.ProtoReflect.Descriptor instead.
func (*PgCreateSplitBoundaryPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{16}
}

func (x *PgCreateSplitBoundaryPB) GetValues() []*QLValuePB {
	if x != nil {
		return x.Values
	}
	return nil
}

type PgCreateTableRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId        uint64                     `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UseTransaction   *TransactionMetadataPB     `protobuf:"bytes,2,opt,name=use_transaction,json=useTransaction,proto3" json:"use_transaction,omitempty"` // TODO(PG_CLIENT) Replace with bool.
	TableId          *PgObjectIdPB              `protobuf:"bytes,3,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	DatabaseName     string                     `protobuf:"bytes,4,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	TableName        string                     `protobuf:"bytes,5,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	NumTablets       int32                      `protobuf:"varint,6,opt,name=num_tablets,json=numTablets,proto3" json:"num_tablets,omitempty"`
	IsPgCatalogTable bool                       `protobuf:"varint,7,opt,name=is_pg_catalog_table,json=isPgCatalogTable,proto3" json:"is_pg_catalog_table,omitempty"`
	IsSharedTable    bool                       `protobuf:"varint,8,opt,name=is_shared_table,json=isSharedTable,proto3" json:"is_shared_table,omitempty"`
	IfNotExist       bool                       `protobuf:"varint,9,opt,name=if_not_exist,json=ifNotExist,proto3" json:"if_not_exist,omitempty"`
	Colocated        bool                       `protobuf:"varint,10,opt,name=colocated,proto3" json:"colocated,omitempty"`
	TablegroupOid    *PgObjectIdPB              `protobuf:"bytes,11,opt,name=tablegroup_oid,json=tablegroupOid,proto3" json:"tablegroup_oid,omitempty"`
	TablespaceOid    *PgObjectIdPB              `protobuf:"bytes,12,opt,name=tablespace_oid,json=tablespaceOid,proto3" json:"tablespace_oid,omitempty"`
	CreateColumns    []*PgCreateColumnPB        `protobuf:"bytes,13,rep,name=create_columns,json=createColumns,proto3" json:"create_columns,omitempty"`
	SplitBounds      []*PgCreateSplitBoundaryPB `protobuf:"bytes,14,rep,name=split_bounds,json=splitBounds,proto3" json:"split_bounds,omitempty"`
	// Actual for index only.
	BaseTableId       *PgObjectIdPB `protobuf:"bytes,15,opt,name=base_table_id,json=baseTableId,proto3" json:"base_table_id,omitempty"`
	IsUniqueIndex     bool          `protobuf:"varint,16,opt,name=is_unique_index,json=isUniqueIndex,proto3" json:"is_unique_index,omitempty"`
	SkipIndexBackfill bool          `protobuf:"varint,17,opt,name=skip_index_backfill,json=skipIndexBackfill,proto3" json:"skip_index_backfill,omitempty"`
}

func (x *PgCreateTableRequestPB) Reset() {
	*x = PgCreateTableRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgCreateTableRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgCreateTableRequestPB) ProtoMessage() {}

func (x *PgCreateTableRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgCreateTableRequestPB.ProtoReflect.Descriptor instead.
func (*PgCreateTableRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{17}
}

func (x *PgCreateTableRequestPB) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *PgCreateTableRequestPB) GetUseTransaction() *TransactionMetadataPB {
	if x != nil {
		return x.UseTransaction
	}
	return nil
}

func (x *PgCreateTableRequestPB) GetTableId() *PgObjectIdPB {
	if x != nil {
		return x.TableId
	}
	return nil
}

func (x *PgCreateTableRequestPB) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *PgCreateTableRequestPB) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *PgCreateTableRequestPB) GetNumTablets() int32 {
	if x != nil {
		return x.NumTablets
	}
	return 0
}

func (x *PgCreateTableRequestPB) GetIsPgCatalogTable() bool {
	if x != nil {
		return x.IsPgCatalogTable
	}
	return false
}

func (x *PgCreateTableRequestPB) GetIsSharedTable() bool {
	if x != nil {
		return x.IsSharedTable
	}
	return false
}

func (x *PgCreateTableRequestPB) GetIfNotExist() bool {
	if x != nil {
		return x.IfNotExist
	}
	return false
}

func (x *PgCreateTableRequestPB) GetColocated() bool {
	if x != nil {
		return x.Colocated
	}
	return false
}

func (x *PgCreateTableRequestPB) GetTablegroupOid() *PgObjectIdPB {
	if x != nil {
		return x.TablegroupOid
	}
	return nil
}

func (x *PgCreateTableRequestPB) GetTablespaceOid() *PgObjectIdPB {
	if x != nil {
		return x.TablespaceOid
	}
	return nil
}

func (x *PgCreateTableRequestPB) GetCreateColumns() []*PgCreateColumnPB {
	if x != nil {
		return x.CreateColumns
	}
	return nil
}

func (x *PgCreateTableRequestPB) GetSplitBounds() []*PgCreateSplitBoundaryPB {
	if x != nil {
		return x.SplitBounds
	}
	return nil
}

func (x *PgCreateTableRequestPB) GetBaseTableId() *PgObjectIdPB {
	if x != nil {
		return x.BaseTableId
	}
	return nil
}

func (x *PgCreateTableRequestPB) GetIsUniqueIndex() bool {
	if x != nil {
		return x.IsUniqueIndex
	}
	return false
}

func (x *PgCreateTableRequestPB) GetSkipIndexBackfill() bool {
	if x != nil {
		return x.SkipIndexBackfill
	}
	return false
}

type PgCreateTableResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PgCreateTableResponsePB) Reset() {
	*x = PgCreateTableResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgCreateTableResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgCreateTableResponsePB) ProtoMessage() {}

func (x *PgCreateTableResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgCreateTableResponsePB.ProtoReflect.Descriptor instead.
func (*PgCreateTableResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{18}
}

func (x *PgCreateTableResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

type PgCreateTablegroupRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    uint64        `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DatabaseName string        `protobuf:"bytes,2,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	TablegroupId *PgObjectIdPB `protobuf:"bytes,3,opt,name=tablegroup_id,json=tablegroupId,proto3" json:"tablegroup_id,omitempty"`
}

func (x *PgCreateTablegroupRequestPB) Reset() {
	*x = PgCreateTablegroupRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgCreateTablegroupRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgCreateTablegroupRequestPB) ProtoMessage() {}

func (x *PgCreateTablegroupRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgCreateTablegroupRequestPB.ProtoReflect.Descriptor instead.
func (*PgCreateTablegroupRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{19}
}

func (x *PgCreateTablegroupRequestPB) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *PgCreateTablegroupRequestPB) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *PgCreateTablegroupRequestPB) GetTablegroupId() *PgObjectIdPB {
	if x != nil {
		return x.TablegroupId
	}
	return nil
}

type PgCreateTablegroupResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PgCreateTablegroupResponsePB) Reset() {
	*x = PgCreateTablegroupResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgCreateTablegroupResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgCreateTablegroupResponsePB) ProtoMessage() {}

func (x *PgCreateTablegroupResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgCreateTablegroupResponsePB.ProtoReflect.Descriptor instead.
func (*PgCreateTablegroupResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{20}
}

func (x *PgCreateTablegroupResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

type PgDropDatabaseRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    uint64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DatabaseName string `protobuf:"bytes,3,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	DatabaseOid  uint32 `protobuf:"varint,4,opt,name=database_oid,json=databaseOid,proto3" json:"database_oid,omitempty"`
}

func (x *PgDropDatabaseRequestPB) Reset() {
	*x = PgDropDatabaseRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgDropDatabaseRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgDropDatabaseRequestPB) ProtoMessage() {}

func (x *PgDropDatabaseRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgDropDatabaseRequestPB.ProtoReflect.Descriptor instead.
func (*PgDropDatabaseRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{21}
}

func (x *PgDropDatabaseRequestPB) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *PgDropDatabaseRequestPB) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *PgDropDatabaseRequestPB) GetDatabaseOid() uint32 {
	if x != nil {
		return x.DatabaseOid
	}
	return 0
}

type PgDropDatabaseResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PgDropDatabaseResponsePB) Reset() {
	*x = PgDropDatabaseResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgDropDatabaseResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgDropDatabaseResponsePB) ProtoMessage() {}

func (x *PgDropDatabaseResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgDropDatabaseResponsePB.ProtoReflect.Descriptor instead.
func (*PgDropDatabaseResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{22}
}

func (x *PgDropDatabaseResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

type PgDropTableRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId uint64        `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TableId   *PgObjectIdPB `protobuf:"bytes,2,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	Index     bool          `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *PgDropTableRequestPB) Reset() {
	*x = PgDropTableRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgDropTableRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgDropTableRequestPB) ProtoMessage() {}

func (x *PgDropTableRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgDropTableRequestPB.ProtoReflect.Descriptor instead.
func (*PgDropTableRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{23}
}

func (x *PgDropTableRequestPB) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *PgDropTableRequestPB) GetTableId() *PgObjectIdPB {
	if x != nil {
		return x.TableId
	}
	return nil
}

func (x *PgDropTableRequestPB) GetIndex() bool {
	if x != nil {
		return x.Index
	}
	return false
}

type PgDropTableResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       *AppStatusPB       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	IndexedTable *TableIdentifierPB `protobuf:"bytes,2,opt,name=indexed_table,json=indexedTable,proto3" json:"indexed_table,omitempty"`
}

func (x *PgDropTableResponsePB) Reset() {
	*x = PgDropTableResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgDropTableResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgDropTableResponsePB) ProtoMessage() {}

func (x *PgDropTableResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgDropTableResponsePB.ProtoReflect.Descriptor instead.
func (*PgDropTableResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{24}
}

func (x *PgDropTableResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *PgDropTableResponsePB) GetIndexedTable() *TableIdentifierPB {
	if x != nil {
		return x.IndexedTable
	}
	return nil
}

type PgDropTablegroupRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    uint64        `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TablegroupId *PgObjectIdPB `protobuf:"bytes,2,opt,name=tablegroup_id,json=tablegroupId,proto3" json:"tablegroup_id,omitempty"`
}

func (x *PgDropTablegroupRequestPB) Reset() {
	*x = PgDropTablegroupRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgDropTablegroupRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgDropTablegroupRequestPB) ProtoMessage() {}

func (x *PgDropTablegroupRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgDropTablegroupRequestPB.ProtoReflect.Descriptor instead.
func (*PgDropTablegroupRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{25}
}

func (x *PgDropTablegroupRequestPB) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *PgDropTablegroupRequestPB) GetTablegroupId() *PgObjectIdPB {
	if x != nil {
		return x.TablegroupId
	}
	return nil
}

type PgDropTablegroupResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PgDropTablegroupResponsePB) Reset() {
	*x = PgDropTablegroupResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgDropTablegroupResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgDropTablegroupResponsePB) ProtoMessage() {}

func (x *PgDropTablegroupResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgDropTablegroupResponsePB.ProtoReflect.Descriptor instead.
func (*PgDropTablegroupResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{26}
}

func (x *PgDropTablegroupResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

type PgGetCatalogMasterVersionRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PgGetCatalogMasterVersionRequestPB) Reset() {
	*x = PgGetCatalogMasterVersionRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgGetCatalogMasterVersionRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgGetCatalogMasterVersionRequestPB) ProtoMessage() {}

func (x *PgGetCatalogMasterVersionRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgGetCatalogMasterVersionRequestPB.ProtoReflect.Descriptor instead.
func (*PgGetCatalogMasterVersionRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{27}
}

type PgGetCatalogMasterVersionResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Version uint64       `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *PgGetCatalogMasterVersionResponsePB) Reset() {
	*x = PgGetCatalogMasterVersionResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgGetCatalogMasterVersionResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgGetCatalogMasterVersionResponsePB) ProtoMessage() {}

func (x *PgGetCatalogMasterVersionResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgGetCatalogMasterVersionResponsePB.ProtoReflect.Descriptor instead.
func (*PgGetCatalogMasterVersionResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{28}
}

func (x *PgGetCatalogMasterVersionResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *PgGetCatalogMasterVersionResponsePB) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type PgGetDatabaseInfoRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint32 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *PgGetDatabaseInfoRequestPB) Reset() {
	*x = PgGetDatabaseInfoRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgGetDatabaseInfoRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgGetDatabaseInfoRequestPB) ProtoMessage() {}

func (x *PgGetDatabaseInfoRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgGetDatabaseInfoRequestPB.ProtoReflect.Descriptor instead.
func (*PgGetDatabaseInfoRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{29}
}

func (x *PgGetDatabaseInfoRequestPB) GetOid() uint32 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type PgGetDatabaseInfoResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *AppStatusPB                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info   *GetNamespaceInfoResponsePB `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *PgGetDatabaseInfoResponsePB) Reset() {
	*x = PgGetDatabaseInfoResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgGetDatabaseInfoResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgGetDatabaseInfoResponsePB) ProtoMessage() {}

func (x *PgGetDatabaseInfoResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgGetDatabaseInfoResponsePB.ProtoReflect.Descriptor instead.
func (*PgGetDatabaseInfoResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{30}
}

func (x *PgGetDatabaseInfoResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *PgGetDatabaseInfoResponsePB) GetInfo() *GetNamespaceInfoResponsePB {
	if x != nil {
		return x.Info
	}
	return nil
}

type PgIsInitDbDoneRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PgIsInitDbDoneRequestPB) Reset() {
	*x = PgIsInitDbDoneRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgIsInitDbDoneRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgIsInitDbDoneRequestPB) ProtoMessage() {}

func (x *PgIsInitDbDoneRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgIsInitDbDoneRequestPB.ProtoReflect.Descriptor instead.
func (*PgIsInitDbDoneRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{31}
}

type PgIsInitDbDoneResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Done   bool         `protobuf:"varint,2,opt,name=done,proto3" json:"done,omitempty"`
}

func (x *PgIsInitDbDoneResponsePB) Reset() {
	*x = PgIsInitDbDoneResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgIsInitDbDoneResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgIsInitDbDoneResponsePB) ProtoMessage() {}

func (x *PgIsInitDbDoneResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgIsInitDbDoneResponsePB.ProtoReflect.Descriptor instead.
func (*PgIsInitDbDoneResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{32}
}

func (x *PgIsInitDbDoneResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *PgIsInitDbDoneResponsePB) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

type PgListLiveTabletServersRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryOnly bool `protobuf:"varint,1,opt,name=primary_only,json=primaryOnly,proto3" json:"primary_only,omitempty"`
}

func (x *PgListLiveTabletServersRequestPB) Reset() {
	*x = PgListLiveTabletServersRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgListLiveTabletServersRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgListLiveTabletServersRequestPB) ProtoMessage() {}

func (x *PgListLiveTabletServersRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgListLiveTabletServersRequestPB.ProtoReflect.Descriptor instead.
func (*PgListLiveTabletServersRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{33}
}

func (x *PgListLiveTabletServersRequestPB) GetPrimaryOnly() bool {
	if x != nil {
		return x.PrimaryOnly
	}
	return false
}

type PgLiveTabletServerPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Hostname      string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	PlacementUuid string `protobuf:"bytes,3,opt,name=placement_uuid,json=placementUuid,proto3" json:"placement_uuid,omitempty"`
	Cloud         string `protobuf:"bytes,4,opt,name=cloud,proto3" json:"cloud,omitempty"`
	Region        string `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	Zone          string `protobuf:"bytes,6,opt,name=zone,proto3" json:"zone,omitempty"`
	IsPrimary     bool   `protobuf:"varint,7,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	PublicIp      string `protobuf:"bytes,8,opt,name=public_ip,json=publicIp,proto3" json:"public_ip,omitempty"`
	PgPort        uint32 `protobuf:"varint,9,opt,name=pg_port,json=pgPort,proto3" json:"pg_port,omitempty"`
}

func (x *PgLiveTabletServerPB) Reset() {
	*x = PgLiveTabletServerPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgLiveTabletServerPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgLiveTabletServerPB) ProtoMessage() {}

func (x *PgLiveTabletServerPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgLiveTabletServerPB.ProtoReflect.Descriptor instead.
func (*PgLiveTabletServerPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{34}
}

func (x *PgLiveTabletServerPB) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PgLiveTabletServerPB) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *PgLiveTabletServerPB) GetPlacementUuid() string {
	if x != nil {
		return x.PlacementUuid
	}
	return ""
}

func (x *PgLiveTabletServerPB) GetCloud() string {
	if x != nil {
		return x.Cloud
	}
	return ""
}

func (x *PgLiveTabletServerPB) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *PgLiveTabletServerPB) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *PgLiveTabletServerPB) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *PgLiveTabletServerPB) GetPublicIp() string {
	if x != nil {
		return x.PublicIp
	}
	return ""
}

func (x *PgLiveTabletServerPB) GetPgPort() uint32 {
	if x != nil {
		return x.PgPort
	}
	return 0
}

type PgListLiveTabletServersResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  *AppStatusPB            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Servers []*PgLiveTabletServerPB `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *PgListLiveTabletServersResponsePB) Reset() {
	*x = PgListLiveTabletServersResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgListLiveTabletServersResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgListLiveTabletServersResponsePB) ProtoMessage() {}

func (x *PgListLiveTabletServersResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgListLiveTabletServersResponsePB.ProtoReflect.Descriptor instead.
func (*PgListLiveTabletServersResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{35}
}

func (x *PgListLiveTabletServersResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *PgListLiveTabletServersResponsePB) GetServers() []*PgLiveTabletServerPB {
	if x != nil {
		return x.Servers
	}
	return nil
}

type PgOpenTableRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
}

func (x *PgOpenTableRequestPB) Reset() {
	*x = PgOpenTableRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgOpenTableRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgOpenTableRequestPB) ProtoMessage() {}

func (x *PgOpenTableRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgOpenTableRequestPB.ProtoReflect.Descriptor instead.
func (*PgOpenTableRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{36}
}

func (x *PgOpenTableRequestPB) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

type PgTablePartitionsPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint32   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Keys    [][]byte `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *PgTablePartitionsPB) Reset() {
	*x = PgTablePartitionsPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgTablePartitionsPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgTablePartitionsPB) ProtoMessage() {}

func (x *PgTablePartitionsPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgTablePartitionsPB.ProtoReflect.Descriptor instead.
func (*PgTablePartitionsPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{37}
}

func (x *PgTablePartitionsPB) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PgTablePartitionsPB) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

type PgOpenTableResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     *AppStatusPB              `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info       *GetTableSchemaResponsePB `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Partitions *PgTablePartitionsPB      `protobuf:"bytes,3,opt,name=partitions,proto3" json:"partitions,omitempty"`
}

func (x *PgOpenTableResponsePB) Reset() {
	*x = PgOpenTableResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgOpenTableResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgOpenTableResponsePB) ProtoMessage() {}

func (x *PgOpenTableResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgOpenTableResponsePB.ProtoReflect.Descriptor instead.
func (*PgOpenTableResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{38}
}

func (x *PgOpenTableResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *PgOpenTableResponsePB) GetInfo() *GetTableSchemaResponsePB {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *PgOpenTableResponsePB) GetPartitions() *PgTablePartitionsPB {
	if x != nil {
		return x.Partitions
	}
	return nil
}

type PgReserveOidsRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatabaseOid uint32 `protobuf:"varint,1,opt,name=database_oid,json=databaseOid,proto3" json:"database_oid,omitempty"`
	NextOid     uint32 `protobuf:"varint,2,opt,name=next_oid,json=nextOid,proto3" json:"next_oid,omitempty"`
	Count       uint32 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PgReserveOidsRequestPB) Reset() {
	*x = PgReserveOidsRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgReserveOidsRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgReserveOidsRequestPB) ProtoMessage() {}

func (x *PgReserveOidsRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgReserveOidsRequestPB.ProtoReflect.Descriptor instead.
func (*PgReserveOidsRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{39}
}

func (x *PgReserveOidsRequestPB) GetDatabaseOid() uint32 {
	if x != nil {
		return x.DatabaseOid
	}
	return 0
}

func (x *PgReserveOidsRequestPB) GetNextOid() uint32 {
	if x != nil {
		return x.NextOid
	}
	return 0
}

func (x *PgReserveOidsRequestPB) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PgReserveOidsResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	BeginOid uint32       `protobuf:"varint,2,opt,name=begin_oid,json=beginOid,proto3" json:"begin_oid,omitempty"`
	EndOid   uint32       `protobuf:"varint,3,opt,name=end_oid,json=endOid,proto3" json:"end_oid,omitempty"`
}

func (x *PgReserveOidsResponsePB) Reset() {
	*x = PgReserveOidsResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgReserveOidsResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgReserveOidsResponsePB) ProtoMessage() {}

func (x *PgReserveOidsResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgReserveOidsResponsePB.ProtoReflect.Descriptor instead.
func (*PgReserveOidsResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{40}
}

func (x *PgReserveOidsResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *PgReserveOidsResponsePB) GetBeginOid() uint32 {
	if x != nil {
		return x.BeginOid
	}
	return 0
}

func (x *PgReserveOidsResponsePB) GetEndOid() uint32 {
	if x != nil {
		return x.EndOid
	}
	return 0
}

type PgTabletServerCountRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryOnly bool `protobuf:"varint,1,opt,name=primary_only,json=primaryOnly,proto3" json:"primary_only,omitempty"`
}

func (x *PgTabletServerCountRequestPB) Reset() {
	*x = PgTabletServerCountRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgTabletServerCountRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgTabletServerCountRequestPB) ProtoMessage() {}

func (x *PgTabletServerCountRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgTabletServerCountRequestPB.ProtoReflect.Descriptor instead.
func (*PgTabletServerCountRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{41}
}

func (x *PgTabletServerCountRequestPB) GetPrimaryOnly() bool {
	if x != nil {
		return x.PrimaryOnly
	}
	return false
}

type PgTabletServerCountResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Count  int32        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PgTabletServerCountResponsePB) Reset() {
	*x = PgTabletServerCountResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgTabletServerCountResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgTabletServerCountResponsePB) ProtoMessage() {}

func (x *PgTabletServerCountResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgTabletServerCountResponsePB.ProtoReflect.Descriptor instead.
func (*PgTabletServerCountResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{42}
}

func (x *PgTabletServerCountResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *PgTabletServerCountResponsePB) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PgTruncateTableRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId uint64        `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TableId   *PgObjectIdPB `protobuf:"bytes,2,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
}

func (x *PgTruncateTableRequestPB) Reset() {
	*x = PgTruncateTableRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgTruncateTableRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgTruncateTableRequestPB) ProtoMessage() {}

func (x *PgTruncateTableRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgTruncateTableRequestPB.ProtoReflect.Descriptor instead.
func (*PgTruncateTableRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{43}
}

func (x *PgTruncateTableRequestPB) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *PgTruncateTableRequestPB) GetTableId() *PgObjectIdPB {
	if x != nil {
		return x.TableId
	}
	return nil
}

type PgTruncateTableResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *AppStatusPB `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PgTruncateTableResponsePB) Reset() {
	*x = PgTruncateTableResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_pg_client_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgTruncateTableResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgTruncateTableResponsePB) ProtoMessage() {}

func (x *PgTruncateTableResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_pg_client_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgTruncateTableResponsePB.ProtoReflect.Descriptor instead.
func (*PgTruncateTableResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_pg_client_proto_rawDescGZIP(), []int{44}
}

func (x *PgTruncateTableResponsePB) GetStatus() *AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_yb_tserver_pg_client_proto protoreflect.FileDescriptor

var file_yb_tserver_pg_client_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x79, 0x62, 0x2f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x67, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x79, 0x62,
	0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x16, 0x79, 0x62, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1d, 0x79, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x16, 0x79, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x14, 0x50, 0x67, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5f,
	0x0a, 0x15, 0x50, 0x67, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x50, 0x0a, 0x0c, 0x50, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x50, 0x42, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4f,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x69,
	0x64, 0x22, 0x9c, 0x01, 0x0a, 0x18, 0x50, 0x67, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x4f, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x44, 0x0a, 0x19, 0x50, 0x67, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x27, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x79, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6e, 0x0a, 0x18, 0x50, 0x67, 0x42, 0x61, 0x63, 0x6b,
	0x66, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x42, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x50, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x50, 0x42, 0x52, 0x07, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x19, 0x50, 0x67, 0x42, 0x61, 0x63, 0x6b,
	0x66, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x48, 0x0a, 0x10,
	0x50, 0x67, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x50, 0x42,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x0f, 0x50, 0x67, 0x52, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x42, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x96, 0x03,
	0x0a, 0x15, 0x50, 0x67, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x79, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x42, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79,
	0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x50, 0x42, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x3d, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x50, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x50, 0x42, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x43,
	0x0a, 0x0e, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x50, 0x42, 0x52, 0x0d, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79,
	0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x52, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x42, 0x52, 0x0b, 0x72, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x41, 0x0a, 0x16, 0x50, 0x67, 0x41, 0x6c, 0x74, 0x65,
	0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42,
	0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50,
	0x42, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xaf, 0x02, 0x0a, 0x19, 0x50, 0x67,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x79, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x42, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4f,
	0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4f,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x4f, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x45, 0x0a, 0x1a, 0x50,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41,
	0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x25, 0x0a, 0x23, 0x50, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x22, 0x4f, 0x0a, 0x24, 0x50, 0x67, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x42, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x50, 0x42, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x10, 0x50,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x50, 0x42, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x74, 0x74, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x61, 0x74, 0x74, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x72, 0x5f,
	0x79, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x59, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x40, 0x0a, 0x17, 0x50, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x50, 0x42, 0x12, 0x25, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x79, 0x62, 0x2e,
	0x51, 0x4c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x42, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x22, 0xd1, 0x06, 0x0a, 0x16, 0x50, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x75,
	0x73, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x79, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x42, 0x52,
	0x0e, 0x75, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x33, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50,
	0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x50, 0x42, 0x52, 0x07, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e,
	0x75, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f,
	0x70, 0x67, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x50, 0x67, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0c, 0x69, 0x66, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x66, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x50, 0x42, 0x52, 0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x69,
	0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x6f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x50, 0x42, 0x52, 0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4f,
	0x69, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x62, 0x2e,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x50, 0x42, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x0c, 0x73, 0x70, 0x6c, 0x69, 0x74,
	0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x50, 0x42, 0x52, 0x0b, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12,
	0x3c, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x50, 0x42,
	0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x73, 0x6b, 0x69, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x61, 0x63,
	0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x22, 0x42, 0x0a, 0x17, 0x50, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42,
	0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50,
	0x42, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x1b, 0x50, 0x67,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a,
	0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x50, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x50, 0x42, 0x52, 0x0c,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x1c,
	0x50, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79,
	0x62, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x50, 0x67, 0x44, 0x72, 0x6f, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x42, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x4f, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x18, 0x50, 0x67, 0x44, 0x72,
	0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x80, 0x01,
	0x0a, 0x14, 0x50, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x50,
	0x42, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x83, 0x01, 0x0a, 0x15, 0x50, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e,
	0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x5f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x62, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x42, 0x52, 0x0c, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x79, 0x0a, 0x19, 0x50, 0x67, 0x44, 0x72, 0x6f, 0x70,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x42, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x50, 0x42, 0x52, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x22, 0x45, 0x0a, 0x1a, 0x50, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12,
	0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x24, 0x0a, 0x22, 0x50, 0x67, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x22, 0x68,
	0x0a, 0x23, 0x50, 0x67, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x1a, 0x50, 0x67, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x1b, 0x50, 0x67, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x39, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x19, 0x0a, 0x17,
	0x50, 0x67, 0x49, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x62, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x22, 0x57, 0x0a, 0x18, 0x50, 0x67, 0x49, 0x73, 0x49,
	0x6e, 0x69, 0x74, 0x44, 0x62, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65,
	0x22, 0x45, 0x0a, 0x20, 0x50, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x42, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x84, 0x02, 0x0a, 0x14, 0x50, 0x67, 0x4c, 0x69,
	0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x42,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x49, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x67, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x67, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x88,
	0x01, 0x0a, 0x21, 0x50, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x4c, 0x69,
	0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x42,
	0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x31, 0x0a, 0x14, 0x50, 0x67, 0x4f,
	0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x42, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x13,
	0x50, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x50, 0x42, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x22, 0xba, 0x01, 0x0a, 0x15, 0x50, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62,
	0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a,
	0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50,
	0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x50, 0x42, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6c,
	0x0a, 0x16, 0x50, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4f, 0x69, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4f, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e,
	0x65, 0x78, 0x74, 0x4f, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x78, 0x0a, 0x17,
	0x50, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4f, 0x69, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x4f, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x65, 0x6e, 0x64, 0x4f, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x1c, 0x50, 0x67, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x5e, 0x0a, 0x1d, 0x50, 0x67, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e,
	0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6e, 0x0a, 0x18, 0x50, 0x67, 0x54,
	0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x50, 0x42,
	0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x19, 0x50, 0x67, 0x54,
	0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32,
	0xc4, 0x0e, 0x0a, 0x0f, 0x50, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x12, 0x20, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x42, 0x1a, 0x21, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x50, 0x67, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x5c, 0x0a, 0x0d, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x24, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x25, 0x2e, 0x79,
	0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x41, 0x6c, 0x74, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x42, 0x12, 0x53, 0x0a, 0x0a, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x21, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50,
	0x67, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x42, 0x1a, 0x22, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x50, 0x67, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x5c, 0x0a, 0x0d, 0x42, 0x61, 0x63, 0x6b,
	0x66, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x24, 0x2e, 0x79, 0x62, 0x2e, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c,
	0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a,
	0x25, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x42,
	0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x5f, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x25, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a,
	0x26, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x7d, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x2f, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x50, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x42, 0x1a, 0x30, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x50, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x56, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x50, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x65,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x27, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x50, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x28, 0x2e, 0x79, 0x62,
	0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x59, 0x0a, 0x0c, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x50, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x24, 0x2e, 0x79, 0x62, 0x2e,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42,
	0x12, 0x50, 0x0a, 0x09, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x2e,
	0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x44, 0x72, 0x6f,
	0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a,
	0x21, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x44,
	0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x42, 0x12, 0x5f, 0x0a, 0x0e, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x25, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x50, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x26, 0x2e, 0x79, 0x62,
	0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x42, 0x12, 0x7a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e,
	0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x2f,
	0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12,
	0x62, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x26, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x50, 0x67, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x27, 0x2e, 0x79, 0x62, 0x2e,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x42, 0x12, 0x59, 0x0a, 0x0c, 0x49, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x62, 0x44,
	0x6f, 0x6e, 0x65, 0x12, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x50, 0x67, 0x49, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x62, 0x44, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x24, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x49, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x62,
	0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x74,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x2d, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x50, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x42, 0x12, 0x50, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x20, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50,
	0x67, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x42, 0x1a, 0x21, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x50, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x56, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x4f, 0x69, 0x64, 0x73, 0x12, 0x22, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x50, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4f, 0x69, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x4f, 0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x68,
	0x0a, 0x11, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x50, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x29, 0x2e,
	0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x5c, 0x0a, 0x0d, 0x54, 0x72, 0x75, 0x6e,
	0x63, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x79, 0x62, 0x2e, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a,
	0x25, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x67, 0x54,
	0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x42, 0x10, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x2e, 0x79, 0x62,
	0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yb_tserver_pg_client_proto_rawDescOnce sync.Once
	file_yb_tserver_pg_client_proto_rawDescData = file_yb_tserver_pg_client_proto_rawDesc
)

func file_yb_tserver_pg_client_proto_rawDescGZIP() []byte {
	file_yb_tserver_pg_client_proto_rawDescOnce.Do(func() {
		file_yb_tserver_pg_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_yb_tserver_pg_client_proto_rawDescData)
	})
	return file_yb_tserver_pg_client_proto_rawDescData
}

var file_yb_tserver_pg_client_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_yb_tserver_pg_client_proto_goTypes = []interface{}{
	(*PgHeartbeatRequestPB)(nil),                 // 0: yb.tserver.PgHeartbeatRequestPB
	(*PgHeartbeatResponsePB)(nil),                // 1: yb.tserver.PgHeartbeatResponsePB
	(*PgObjectIdPB)(nil),                         // 2: yb.tserver.PgObjectIdPB
	(*PgAlterDatabaseRequestPB)(nil),             // 3: yb.tserver.PgAlterDatabaseRequestPB
	(*PgAlterDatabaseResponsePB)(nil),            // 4: yb.tserver.PgAlterDatabaseResponsePB
	(*PgBackfillIndexRequestPB)(nil),             // 5: yb.tserver.PgBackfillIndexRequestPB
	(*PgBackfillIndexResponsePB)(nil),            // 6: yb.tserver.PgBackfillIndexResponsePB
	(*PgRenameColumnPB)(nil),                     // 7: yb.tserver.PgRenameColumnPB
	(*PgRenameTablePB)(nil),                      // 8: yb.tserver.PgRenameTablePB
	(*PgAlterTableRequestPB)(nil),                // 9: yb.tserver.PgAlterTableRequestPB
	(*PgAlterTableResponsePB)(nil),               // 10: yb.tserver.PgAlterTableResponsePB
	(*PgCreateDatabaseRequestPB)(nil),            // 11: yb.tserver.PgCreateDatabaseRequestPB
	(*PgCreateDatabaseResponsePB)(nil),           // 12: yb.tserver.PgCreateDatabaseResponsePB
	(*PgCreateSequencesDataTableRequestPB)(nil),  // 13: yb.tserver.PgCreateSequencesDataTableRequestPB
	(*PgCreateSequencesDataTableResponsePB)(nil), // 14: yb.tserver.PgCreateSequencesDataTableResponsePB
	(*PgCreateColumnPB)(nil),                     // 15: yb.tserver.PgCreateColumnPB
	(*PgCreateSplitBoundaryPB)(nil),              // 16: yb.tserver.PgCreateSplitBoundaryPB
	(*PgCreateTableRequestPB)(nil),               // 17: yb.tserver.PgCreateTableRequestPB
	(*PgCreateTableResponsePB)(nil),              // 18: yb.tserver.PgCreateTableResponsePB
	(*PgCreateTablegroupRequestPB)(nil),          // 19: yb.tserver.PgCreateTablegroupRequestPB
	(*PgCreateTablegroupResponsePB)(nil),         // 20: yb.tserver.PgCreateTablegroupResponsePB
	(*PgDropDatabaseRequestPB)(nil),              // 21: yb.tserver.PgDropDatabaseRequestPB
	(*PgDropDatabaseResponsePB)(nil),             // 22: yb.tserver.PgDropDatabaseResponsePB
	(*PgDropTableRequestPB)(nil),                 // 23: yb.tserver.PgDropTableRequestPB
	(*PgDropTableResponsePB)(nil),                // 24: yb.tserver.PgDropTableResponsePB
	(*PgDropTablegroupRequestPB)(nil),            // 25: yb.tserver.PgDropTablegroupRequestPB
	(*PgDropTablegroupResponsePB)(nil),           // 26: yb.tserver.PgDropTablegroupResponsePB
	(*PgGetCatalogMasterVersionRequestPB)(nil),   // 27: yb.tserver.PgGetCatalogMasterVersionRequestPB
	(*PgGetCatalogMasterVersionResponsePB)(nil),  // 28: yb.tserver.PgGetCatalogMasterVersionResponsePB
	(*PgGetDatabaseInfoRequestPB)(nil),           // 29: yb.tserver.PgGetDatabaseInfoRequestPB
	(*PgGetDatabaseInfoResponsePB)(nil),          // 30: yb.tserver.PgGetDatabaseInfoResponsePB
	(*PgIsInitDbDoneRequestPB)(nil),              // 31: yb.tserver.PgIsInitDbDoneRequestPB
	(*PgIsInitDbDoneResponsePB)(nil),             // 32: yb.tserver.PgIsInitDbDoneResponsePB
	(*PgListLiveTabletServersRequestPB)(nil),     // 33: yb.tserver.PgListLiveTabletServersRequestPB
	(*PgLiveTabletServerPB)(nil),                 // 34: yb.tserver.PgLiveTabletServerPB
	(*PgListLiveTabletServersResponsePB)(nil),    // 35: yb.tserver.PgListLiveTabletServersResponsePB
	(*PgOpenTableRequestPB)(nil),                 // 36: yb.tserver.PgOpenTableRequestPB
	(*PgTablePartitionsPB)(nil),                  // 37: yb.tserver.PgTablePartitionsPB
	(*PgOpenTableResponsePB)(nil),                // 38: yb.tserver.PgOpenTableResponsePB
	(*PgReserveOidsRequestPB)(nil),               // 39: yb.tserver.PgReserveOidsRequestPB
	(*PgReserveOidsResponsePB)(nil),              // 40: yb.tserver.PgReserveOidsResponsePB
	(*PgTabletServerCountRequestPB)(nil),         // 41: yb.tserver.PgTabletServerCountRequestPB
	(*PgTabletServerCountResponsePB)(nil),        // 42: yb.tserver.PgTabletServerCountResponsePB
	(*PgTruncateTableRequestPB)(nil),             // 43: yb.tserver.PgTruncateTableRequestPB
	(*PgTruncateTableResponsePB)(nil),            // 44: yb.tserver.PgTruncateTableResponsePB
	(*AppStatusPB)(nil),                          // 45: yb.AppStatusPB
	(*TransactionMetadataPB)(nil),                // 46: yb.TransactionMetadataPB
	(*QLValuePB)(nil),                            // 47: yb.QLValuePB
	(*TableIdentifierPB)(nil),                    // 48: yb.master.TableIdentifierPB
	(*GetNamespaceInfoResponsePB)(nil),           // 49: yb.master.GetNamespaceInfoResponsePB
	(*GetTableSchemaResponsePB)(nil),             // 50: yb.master.GetTableSchemaResponsePB
}
var file_yb_tserver_pg_client_proto_depIdxs = []int32{
	45, // 0: yb.tserver.PgHeartbeatResponsePB.status:type_name -> yb.AppStatusPB
	45, // 1: yb.tserver.PgAlterDatabaseResponsePB.status:type_name -> yb.AppStatusPB
	2,  // 2: yb.tserver.PgBackfillIndexRequestPB.table_id:type_name -> yb.tserver.PgObjectIdPB
	45, // 3: yb.tserver.PgBackfillIndexResponsePB.status:type_name -> yb.AppStatusPB
	46, // 4: yb.tserver.PgAlterTableRequestPB.use_transaction:type_name -> yb.TransactionMetadataPB
	2,  // 5: yb.tserver.PgAlterTableRequestPB.table_id:type_name -> yb.tserver.PgObjectIdPB
	15, // 6: yb.tserver.PgAlterTableRequestPB.add_columns:type_name -> yb.tserver.PgCreateColumnPB
	7,  // 7: yb.tserver.PgAlterTableRequestPB.rename_columns:type_name -> yb.tserver.PgRenameColumnPB
	8,  // 8: yb.tserver.PgAlterTableRequestPB.rename_table:type_name -> yb.tserver.PgRenameTablePB
	45, // 9: yb.tserver.PgAlterTableResponsePB.status:type_name -> yb.AppStatusPB
	46, // 10: yb.tserver.PgCreateDatabaseRequestPB.use_transaction:type_name -> yb.TransactionMetadataPB
	45, // 11: yb.tserver.PgCreateDatabaseResponsePB.status:type_name -> yb.AppStatusPB
	45, // 12: yb.tserver.PgCreateSequencesDataTableResponsePB.status:type_name -> yb.AppStatusPB
	47, // 13: yb.tserver.PgCreateSplitBoundaryPB.values:type_name -> yb.QLValuePB
	46, // 14: yb.tserver.PgCreateTableRequestPB.use_transaction:type_name -> yb.TransactionMetadataPB
	2,  // 15: yb.tserver.PgCreateTableRequestPB.table_id:type_name -> yb.tserver.PgObjectIdPB
	2,  // 16: yb.tserver.PgCreateTableRequestPB.tablegroup_oid:type_name -> yb.tserver.PgObjectIdPB
	2,  // 17: yb.tserver.PgCreateTableRequestPB.tablespace_oid:type_name -> yb.tserver.PgObjectIdPB
	15, // 18: yb.tserver.PgCreateTableRequestPB.create_columns:type_name -> yb.tserver.PgCreateColumnPB
	16, // 19: yb.tserver.PgCreateTableRequestPB.split_bounds:type_name -> yb.tserver.PgCreateSplitBoundaryPB
	2,  // 20: yb.tserver.PgCreateTableRequestPB.base_table_id:type_name -> yb.tserver.PgObjectIdPB
	45, // 21: yb.tserver.PgCreateTableResponsePB.status:type_name -> yb.AppStatusPB
	2,  // 22: yb.tserver.PgCreateTablegroupRequestPB.tablegroup_id:type_name -> yb.tserver.PgObjectIdPB
	45, // 23: yb.tserver.PgCreateTablegroupResponsePB.status:type_name -> yb.AppStatusPB
	45, // 24: yb.tserver.PgDropDatabaseResponsePB.status:type_name -> yb.AppStatusPB
	2,  // 25: yb.tserver.PgDropTableRequestPB.table_id:type_name -> yb.tserver.PgObjectIdPB
	45, // 26: yb.tserver.PgDropTableResponsePB.status:type_name -> yb.AppStatusPB
	48, // 27: yb.tserver.PgDropTableResponsePB.indexed_table:type_name -> yb.master.TableIdentifierPB
	2,  // 28: yb.tserver.PgDropTablegroupRequestPB.tablegroup_id:type_name -> yb.tserver.PgObjectIdPB
	45, // 29: yb.tserver.PgDropTablegroupResponsePB.status:type_name -> yb.AppStatusPB
	45, // 30: yb.tserver.PgGetCatalogMasterVersionResponsePB.status:type_name -> yb.AppStatusPB
	45, // 31: yb.tserver.PgGetDatabaseInfoResponsePB.status:type_name -> yb.AppStatusPB
	49, // 32: yb.tserver.PgGetDatabaseInfoResponsePB.info:type_name -> yb.master.GetNamespaceInfoResponsePB
	45, // 33: yb.tserver.PgIsInitDbDoneResponsePB.status:type_name -> yb.AppStatusPB
	45, // 34: yb.tserver.PgListLiveTabletServersResponsePB.status:type_name -> yb.AppStatusPB
	34, // 35: yb.tserver.PgListLiveTabletServersResponsePB.servers:type_name -> yb.tserver.PgLiveTabletServerPB
	45, // 36: yb.tserver.PgOpenTableResponsePB.status:type_name -> yb.AppStatusPB
	50, // 37: yb.tserver.PgOpenTableResponsePB.info:type_name -> yb.master.GetTableSchemaResponsePB
	37, // 38: yb.tserver.PgOpenTableResponsePB.partitions:type_name -> yb.tserver.PgTablePartitionsPB
	45, // 39: yb.tserver.PgReserveOidsResponsePB.status:type_name -> yb.AppStatusPB
	45, // 40: yb.tserver.PgTabletServerCountResponsePB.status:type_name -> yb.AppStatusPB
	2,  // 41: yb.tserver.PgTruncateTableRequestPB.table_id:type_name -> yb.tserver.PgObjectIdPB
	45, // 42: yb.tserver.PgTruncateTableResponsePB.status:type_name -> yb.AppStatusPB
	0,  // 43: yb.tserver.PgClientService.Heartbeat:input_type -> yb.tserver.PgHeartbeatRequestPB
	3,  // 44: yb.tserver.PgClientService.AlterDatabase:input_type -> yb.tserver.PgAlterDatabaseRequestPB
	9,  // 45: yb.tserver.PgClientService.AlterTable:input_type -> yb.tserver.PgAlterTableRequestPB
	5,  // 46: yb.tserver.PgClientService.BackfillIndex:input_type -> yb.tserver.PgBackfillIndexRequestPB
	11, // 47: yb.tserver.PgClientService.CreateDatabase:input_type -> yb.tserver.PgCreateDatabaseRequestPB
	13, // 48: yb.tserver.PgClientService.CreateSequencesDataTable:input_type -> yb.tserver.PgCreateSequencesDataTableRequestPB
	17, // 49: yb.tserver.PgClientService.CreateTable:input_type -> yb.tserver.PgCreateTableRequestPB
	19, // 50: yb.tserver.PgClientService.CreateTablegroup:input_type -> yb.tserver.PgCreateTablegroupRequestPB
	21, // 51: yb.tserver.PgClientService.DropDatabase:input_type -> yb.tserver.PgDropDatabaseRequestPB
	23, // 52: yb.tserver.PgClientService.DropTable:input_type -> yb.tserver.PgDropTableRequestPB
	25, // 53: yb.tserver.PgClientService.DropTablegroup:input_type -> yb.tserver.PgDropTablegroupRequestPB
	27, // 54: yb.tserver.PgClientService.GetCatalogMasterVersion:input_type -> yb.tserver.PgGetCatalogMasterVersionRequestPB
	29, // 55: yb.tserver.PgClientService.GetDatabaseInfo:input_type -> yb.tserver.PgGetDatabaseInfoRequestPB
	31, // 56: yb.tserver.PgClientService.IsInitDbDone:input_type -> yb.tserver.PgIsInitDbDoneRequestPB
	33, // 57: yb.tserver.PgClientService.ListLiveTabletServers:input_type -> yb.tserver.PgListLiveTabletServersRequestPB
	36, // 58: yb.tserver.PgClientService.OpenTable:input_type -> yb.tserver.PgOpenTableRequestPB
	39, // 59: yb.tserver.PgClientService.ReserveOids:input_type -> yb.tserver.PgReserveOidsRequestPB
	41, // 60: yb.tserver.PgClientService.TabletServerCount:input_type -> yb.tserver.PgTabletServerCountRequestPB
	43, // 61: yb.tserver.PgClientService.TruncateTable:input_type -> yb.tserver.PgTruncateTableRequestPB
	1,  // 62: yb.tserver.PgClientService.Heartbeat:output_type -> yb.tserver.PgHeartbeatResponsePB
	4,  // 63: yb.tserver.PgClientService.AlterDatabase:output_type -> yb.tserver.PgAlterDatabaseResponsePB
	10, // 64: yb.tserver.PgClientService.AlterTable:output_type -> yb.tserver.PgAlterTableResponsePB
	6,  // 65: yb.tserver.PgClientService.BackfillIndex:output_type -> yb.tserver.PgBackfillIndexResponsePB
	12, // 66: yb.tserver.PgClientService.CreateDatabase:output_type -> yb.tserver.PgCreateDatabaseResponsePB
	14, // 67: yb.tserver.PgClientService.CreateSequencesDataTable:output_type -> yb.tserver.PgCreateSequencesDataTableResponsePB
	18, // 68: yb.tserver.PgClientService.CreateTable:output_type -> yb.tserver.PgCreateTableResponsePB
	20, // 69: yb.tserver.PgClientService.CreateTablegroup:output_type -> yb.tserver.PgCreateTablegroupResponsePB
	22, // 70: yb.tserver.PgClientService.DropDatabase:output_type -> yb.tserver.PgDropDatabaseResponsePB
	24, // 71: yb.tserver.PgClientService.DropTable:output_type -> yb.tserver.PgDropTableResponsePB
	26, // 72: yb.tserver.PgClientService.DropTablegroup:output_type -> yb.tserver.PgDropTablegroupResponsePB
	28, // 73: yb.tserver.PgClientService.GetCatalogMasterVersion:output_type -> yb.tserver.PgGetCatalogMasterVersionResponsePB
	30, // 74: yb.tserver.PgClientService.GetDatabaseInfo:output_type -> yb.tserver.PgGetDatabaseInfoResponsePB
	32, // 75: yb.tserver.PgClientService.IsInitDbDone:output_type -> yb.tserver.PgIsInitDbDoneResponsePB
	35, // 76: yb.tserver.PgClientService.ListLiveTabletServers:output_type -> yb.tserver.PgListLiveTabletServersResponsePB
	38, // 77: yb.tserver.PgClientService.OpenTable:output_type -> yb.tserver.PgOpenTableResponsePB
	40, // 78: yb.tserver.PgClientService.ReserveOids:output_type -> yb.tserver.PgReserveOidsResponsePB
	42, // 79: yb.tserver.PgClientService.TabletServerCount:output_type -> yb.tserver.PgTabletServerCountResponsePB
	44, // 80: yb.tserver.PgClientService.TruncateTable:output_type -> yb.tserver.PgTruncateTableResponsePB
	62, // [62:81] is the sub-list for method output_type
	43, // [43:62] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_yb_tserver_pg_client_proto_init() }
func file_yb_tserver_pg_client_proto_init() {
	if File_yb_tserver_pg_client_proto != nil {
		return
	}
	file_yb_common_common_proto_init()
	file_yb_common_wire_protocol_proto_init()
	file_yb_master_master_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yb_tserver_pg_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgHeartbeatRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgHeartbeatResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgObjectIdPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgAlterDatabaseRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgAlterDatabaseResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgBackfillIndexRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgBackfillIndexResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgRenameColumnPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgRenameTablePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgAlterTableRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgAlterTableResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgCreateDatabaseRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgCreateDatabaseResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgCreateSequencesDataTableRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgCreateSequencesDataTableResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgCreateColumnPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgCreateSplitBoundaryPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgCreateTableRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgCreateTableResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgCreateTablegroupRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgCreateTablegroupResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgDropDatabaseRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgDropDatabaseResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgDropTableRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgDropTableResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgDropTablegroupRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgDropTablegroupResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgGetCatalogMasterVersionRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgGetCatalogMasterVersionResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgGetDatabaseInfoRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgGetDatabaseInfoResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgIsInitDbDoneRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgIsInitDbDoneResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgListLiveTabletServersRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgLiveTabletServerPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgListLiveTabletServersResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgOpenTableRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgTablePartitionsPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgOpenTableResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgReserveOidsRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgReserveOidsResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgTabletServerCountRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgTabletServerCountResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgTruncateTableRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_pg_client_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgTruncateTableResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yb_tserver_pg_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yb_tserver_pg_client_proto_goTypes,
		DependencyIndexes: file_yb_tserver_pg_client_proto_depIdxs,
		MessageInfos:      file_yb_tserver_pg_client_proto_msgTypes,
	}.Build()
	File_yb_tserver_pg_client_proto = out.File
	file_yb_tserver_pg_client_proto_rawDesc = nil
	file_yb_tserver_pg_client_proto_goTypes = nil
	file_yb_tserver_pg_client_proto_depIdxs = nil
}
