// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// The following only applies to changes made to this file as part of YugaByte development.
//
// Portions Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: yb/tserver/tserver_service.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLogLocationRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLogLocationRequestPB) Reset() {
	*x = GetLogLocationRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogLocationRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogLocationRequestPB) ProtoMessage() {}

func (x *GetLogLocationRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogLocationRequestPB.ProtoReflect.Descriptor instead.
func (*GetLogLocationRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{0}
}

type GetLogLocationResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogLocation *string `protobuf:"bytes,1,opt,name=log_location,json=logLocation" json:"log_location,omitempty"`
}

func (x *GetLogLocationResponsePB) Reset() {
	*x = GetLogLocationResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogLocationResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogLocationResponsePB) ProtoMessage() {}

func (x *GetLogLocationResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogLocationResponsePB.ProtoReflect.Descriptor instead.
func (*GetLogLocationResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetLogLocationResponsePB) GetLogLocation() string {
	if x != nil && x.LogLocation != nil {
		return *x.LogLocation
	}
	return ""
}

type ChecksumRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletId         []byte              `protobuf:"bytes,6,opt,name=tablet_id,json=tabletId" json:"tablet_id,omitempty"`
	ConsistencyLevel *YBConsistencyLevel `protobuf:"varint,7,opt,name=consistency_level,json=consistencyLevel,enum=yb.YBConsistencyLevel" json:"consistency_level,omitempty"`
}

func (x *ChecksumRequestPB) Reset() {
	*x = ChecksumRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChecksumRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChecksumRequestPB) ProtoMessage() {}

func (x *ChecksumRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChecksumRequestPB.ProtoReflect.Descriptor instead.
func (*ChecksumRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{2}
}

func (x *ChecksumRequestPB) GetTabletId() []byte {
	if x != nil {
		return x.TabletId
	}
	return nil
}

func (x *ChecksumRequestPB) GetConsistencyLevel() YBConsistencyLevel {
	if x != nil && x.ConsistencyLevel != nil {
		return *x.ConsistencyLevel
	}
	return YBConsistencyLevel_STRONG
}

type ChecksumResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Error message, if any.
	Error *TabletServerErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	// The (possibly partial) checksum of the tablet data.
	// This checksum is only complete if 'has_more_results' is false.
	Checksum *uint64 `protobuf:"varint,2,opt,name=checksum" json:"checksum,omitempty"`
}

func (x *ChecksumResponsePB) Reset() {
	*x = ChecksumResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChecksumResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChecksumResponsePB) ProtoMessage() {}

func (x *ChecksumResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChecksumResponsePB.ProtoReflect.Descriptor instead.
func (*ChecksumResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{3}
}

func (x *ChecksumResponsePB) GetError() *TabletServerErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ChecksumResponsePB) GetChecksum() uint64 {
	if x != nil && x.Checksum != nil {
		return *x.Checksum
	}
	return 0
}

type ListTabletsForTabletServerRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTabletsForTabletServerRequestPB) Reset() {
	*x = ListTabletsForTabletServerRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTabletsForTabletServerRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTabletsForTabletServerRequestPB) ProtoMessage() {}

func (x *ListTabletsForTabletServerRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTabletsForTabletServerRequestPB.ProtoReflect.Descriptor instead.
func (*ListTabletsForTabletServerRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{4}
}

type ListTabletsForTabletServerResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ListTabletsForTabletServerResponsePB_Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (x *ListTabletsForTabletServerResponsePB) Reset() {
	*x = ListTabletsForTabletServerResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTabletsForTabletServerResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTabletsForTabletServerResponsePB) ProtoMessage() {}

func (x *ListTabletsForTabletServerResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTabletsForTabletServerResponsePB.ProtoReflect.Descriptor instead.
func (*ListTabletsForTabletServerResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListTabletsForTabletServerResponsePB) GetEntries() []*ListTabletsForTabletServerResponsePB_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ImportDataRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletId  *string `protobuf:"bytes,1,opt,name=tablet_id,json=tabletId" json:"tablet_id,omitempty"`
	SourceDir *string `protobuf:"bytes,2,opt,name=source_dir,json=sourceDir" json:"source_dir,omitempty"`
}

func (x *ImportDataRequestPB) Reset() {
	*x = ImportDataRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportDataRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportDataRequestPB) ProtoMessage() {}

func (x *ImportDataRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportDataRequestPB.ProtoReflect.Descriptor instead.
func (*ImportDataRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{6}
}

func (x *ImportDataRequestPB) GetTabletId() string {
	if x != nil && x.TabletId != nil {
		return *x.TabletId
	}
	return ""
}

func (x *ImportDataRequestPB) GetSourceDir() string {
	if x != nil && x.SourceDir != nil {
		return *x.SourceDir
	}
	return ""
}

type ImportDataResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Error message, if any.
	Error *TabletServerErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (x *ImportDataResponsePB) Reset() {
	*x = ImportDataResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportDataResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportDataResponsePB) ProtoMessage() {}

func (x *ImportDataResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportDataResponsePB.ProtoReflect.Descriptor instead.
func (*ImportDataResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{7}
}

func (x *ImportDataResponsePB) GetError() *TabletServerErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type UpdateTransactionRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletId             []byte              `protobuf:"bytes,1,opt,name=tablet_id,json=tabletId" json:"tablet_id,omitempty"`
	State                *TransactionStatePB `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	PropagatedHybridTime *uint64             `protobuf:"fixed64,3,opt,name=propagated_hybrid_time,json=propagatedHybridTime" json:"propagated_hybrid_time,omitempty"`
}

func (x *UpdateTransactionRequestPB) Reset() {
	*x = UpdateTransactionRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTransactionRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransactionRequestPB) ProtoMessage() {}

func (x *UpdateTransactionRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransactionRequestPB.ProtoReflect.Descriptor instead.
func (*UpdateTransactionRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTransactionRequestPB) GetTabletId() []byte {
	if x != nil {
		return x.TabletId
	}
	return nil
}

func (x *UpdateTransactionRequestPB) GetState() *TransactionStatePB {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *UpdateTransactionRequestPB) GetPropagatedHybridTime() uint64 {
	if x != nil && x.PropagatedHybridTime != nil {
		return *x.PropagatedHybridTime
	}
	return 0
}

type UpdateTransactionResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Error message, if any.
	Error                *TabletServerErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	PropagatedHybridTime *uint64              `protobuf:"fixed64,2,opt,name=propagated_hybrid_time,json=propagatedHybridTime" json:"propagated_hybrid_time,omitempty"`
}

func (x *UpdateTransactionResponsePB) Reset() {
	*x = UpdateTransactionResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTransactionResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransactionResponsePB) ProtoMessage() {}

func (x *UpdateTransactionResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransactionResponsePB.ProtoReflect.Descriptor instead.
func (*UpdateTransactionResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTransactionResponsePB) GetError() *TabletServerErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *UpdateTransactionResponsePB) GetPropagatedHybridTime() uint64 {
	if x != nil && x.PropagatedHybridTime != nil {
		return *x.PropagatedHybridTime
	}
	return 0
}

type GetTransactionStatusRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletId             []byte   `protobuf:"bytes,1,opt,name=tablet_id,json=tabletId" json:"tablet_id,omitempty"`
	TransactionId        [][]byte `protobuf:"bytes,2,rep,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	PropagatedHybridTime *uint64  `protobuf:"fixed64,3,opt,name=propagated_hybrid_time,json=propagatedHybridTime" json:"propagated_hybrid_time,omitempty"`
}

func (x *GetTransactionStatusRequestPB) Reset() {
	*x = GetTransactionStatusRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionStatusRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionStatusRequestPB) ProtoMessage() {}

func (x *GetTransactionStatusRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionStatusRequestPB.ProtoReflect.Descriptor instead.
func (*GetTransactionStatusRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetTransactionStatusRequestPB) GetTabletId() []byte {
	if x != nil {
		return x.TabletId
	}
	return nil
}

func (x *GetTransactionStatusRequestPB) GetTransactionId() [][]byte {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

func (x *GetTransactionStatusRequestPB) GetPropagatedHybridTime() uint64 {
	if x != nil && x.PropagatedHybridTime != nil {
		return *x.PropagatedHybridTime
	}
	return 0
}

type GetTransactionStatusResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Error message, if any.
	Error *TabletServerErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	// For backward compatibility we use multiple repeated fields instead of one field
	// with custom message.
	Status []TransactionStatus `protobuf:"varint,2,rep,name=status,enum=yb.TransactionStatus" json:"status,omitempty"`
	// For description of status_hybrid_time see comment in TransactionStatusResult.
	StatusHybridTime     []uint64 `protobuf:"fixed64,3,rep,name=status_hybrid_time,json=statusHybridTime" json:"status_hybrid_time,omitempty"`
	PropagatedHybridTime *uint64  `protobuf:"fixed64,4,opt,name=propagated_hybrid_time,json=propagatedHybridTime" json:"propagated_hybrid_time,omitempty"`
	NumReplicatedBatches []int64  `protobuf:"varint,5,rep,name=num_replicated_batches,json=numReplicatedBatches" json:"num_replicated_batches,omitempty"`
	// Size could be less than status size. In this case appropriates values should be interpreted
	// as invalid hybrid time.
	CoordinatorSafeTime []uint64                      `protobuf:"fixed64,6,rep,name=coordinator_safe_time,json=coordinatorSafeTime" json:"coordinator_safe_time,omitempty"`
	AbortedSubtxnSet    []*AbortedSubTransactionSetPB `protobuf:"bytes,7,rep,name=aborted_subtxn_set,json=abortedSubtxnSet" json:"aborted_subtxn_set,omitempty"`
}

func (x *GetTransactionStatusResponsePB) Reset() {
	*x = GetTransactionStatusResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionStatusResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionStatusResponsePB) ProtoMessage() {}

func (x *GetTransactionStatusResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionStatusResponsePB.ProtoReflect.Descriptor instead.
func (*GetTransactionStatusResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetTransactionStatusResponsePB) GetError() *TabletServerErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetTransactionStatusResponsePB) GetStatus() []TransactionStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetTransactionStatusResponsePB) GetStatusHybridTime() []uint64 {
	if x != nil {
		return x.StatusHybridTime
	}
	return nil
}

func (x *GetTransactionStatusResponsePB) GetPropagatedHybridTime() uint64 {
	if x != nil && x.PropagatedHybridTime != nil {
		return *x.PropagatedHybridTime
	}
	return 0
}

func (x *GetTransactionStatusResponsePB) GetNumReplicatedBatches() []int64 {
	if x != nil {
		return x.NumReplicatedBatches
	}
	return nil
}

func (x *GetTransactionStatusResponsePB) GetCoordinatorSafeTime() []uint64 {
	if x != nil {
		return x.CoordinatorSafeTime
	}
	return nil
}

func (x *GetTransactionStatusResponsePB) GetAbortedSubtxnSet() []*AbortedSubTransactionSetPB {
	if x != nil {
		return x.AbortedSubtxnSet
	}
	return nil
}

type GetTransactionStatusAtParticipantRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletId                     []byte  `protobuf:"bytes,1,opt,name=tablet_id,json=tabletId" json:"tablet_id,omitempty"`
	TransactionId                []byte  `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	PropagatedHybridTime         *uint64 `protobuf:"fixed64,3,opt,name=propagated_hybrid_time,json=propagatedHybridTime" json:"propagated_hybrid_time,omitempty"`
	RequiredNumReplicatedBatches *int64  `protobuf:"varint,4,opt,name=required_num_replicated_batches,json=requiredNumReplicatedBatches" json:"required_num_replicated_batches,omitempty"`
}

func (x *GetTransactionStatusAtParticipantRequestPB) Reset() {
	*x = GetTransactionStatusAtParticipantRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionStatusAtParticipantRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionStatusAtParticipantRequestPB) ProtoMessage() {}

func (x *GetTransactionStatusAtParticipantRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionStatusAtParticipantRequestPB.ProtoReflect.Descriptor instead.
func (*GetTransactionStatusAtParticipantRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetTransactionStatusAtParticipantRequestPB) GetTabletId() []byte {
	if x != nil {
		return x.TabletId
	}
	return nil
}

func (x *GetTransactionStatusAtParticipantRequestPB) GetTransactionId() []byte {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

func (x *GetTransactionStatusAtParticipantRequestPB) GetPropagatedHybridTime() uint64 {
	if x != nil && x.PropagatedHybridTime != nil {
		return *x.PropagatedHybridTime
	}
	return 0
}

func (x *GetTransactionStatusAtParticipantRequestPB) GetRequiredNumReplicatedBatches() int64 {
	if x != nil && x.RequiredNumReplicatedBatches != nil {
		return *x.RequiredNumReplicatedBatches
	}
	return 0
}

type GetTransactionStatusAtParticipantResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Error message, if any.
	Error                *TabletServerErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	PropagatedHybridTime *uint64              `protobuf:"fixed64,2,opt,name=propagated_hybrid_time,json=propagatedHybridTime" json:"propagated_hybrid_time,omitempty"`
	NumReplicatedBatches *int64               `protobuf:"varint,3,opt,name=num_replicated_batches,json=numReplicatedBatches" json:"num_replicated_batches,omitempty"`
	StatusHybridTime     *uint64              `protobuf:"fixed64,4,opt,name=status_hybrid_time,json=statusHybridTime" json:"status_hybrid_time,omitempty"`
	Aborted              *bool                `protobuf:"varint,5,opt,name=aborted" json:"aborted,omitempty"`
}

func (x *GetTransactionStatusAtParticipantResponsePB) Reset() {
	*x = GetTransactionStatusAtParticipantResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionStatusAtParticipantResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionStatusAtParticipantResponsePB) ProtoMessage() {}

func (x *GetTransactionStatusAtParticipantResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionStatusAtParticipantResponsePB.ProtoReflect.Descriptor instead.
func (*GetTransactionStatusAtParticipantResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetTransactionStatusAtParticipantResponsePB) GetError() *TabletServerErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetTransactionStatusAtParticipantResponsePB) GetPropagatedHybridTime() uint64 {
	if x != nil && x.PropagatedHybridTime != nil {
		return *x.PropagatedHybridTime
	}
	return 0
}

func (x *GetTransactionStatusAtParticipantResponsePB) GetNumReplicatedBatches() int64 {
	if x != nil && x.NumReplicatedBatches != nil {
		return *x.NumReplicatedBatches
	}
	return 0
}

func (x *GetTransactionStatusAtParticipantResponsePB) GetStatusHybridTime() uint64 {
	if x != nil && x.StatusHybridTime != nil {
		return *x.StatusHybridTime
	}
	return 0
}

func (x *GetTransactionStatusAtParticipantResponsePB) GetAborted() bool {
	if x != nil && x.Aborted != nil {
		return *x.Aborted
	}
	return false
}

type AbortTransactionRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletId             []byte  `protobuf:"bytes,1,opt,name=tablet_id,json=tabletId" json:"tablet_id,omitempty"`
	TransactionId        []byte  `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	PropagatedHybridTime *uint64 `protobuf:"fixed64,3,opt,name=propagated_hybrid_time,json=propagatedHybridTime" json:"propagated_hybrid_time,omitempty"`
}

func (x *AbortTransactionRequestPB) Reset() {
	*x = AbortTransactionRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortTransactionRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortTransactionRequestPB) ProtoMessage() {}

func (x *AbortTransactionRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortTransactionRequestPB.ProtoReflect.Descriptor instead.
func (*AbortTransactionRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{14}
}

func (x *AbortTransactionRequestPB) GetTabletId() []byte {
	if x != nil {
		return x.TabletId
	}
	return nil
}

func (x *AbortTransactionRequestPB) GetTransactionId() []byte {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

func (x *AbortTransactionRequestPB) GetPropagatedHybridTime() uint64 {
	if x != nil && x.PropagatedHybridTime != nil {
		return *x.PropagatedHybridTime
	}
	return 0
}

type AbortTransactionResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Error message, if any.
	Error  *TabletServerErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Status *TransactionStatus   `protobuf:"varint,2,opt,name=status,enum=yb.TransactionStatus" json:"status,omitempty"`
	// For description of status_hybrid_time see comment in TransactionStatusResult.
	StatusHybridTime     *uint64 `protobuf:"fixed64,3,opt,name=status_hybrid_time,json=statusHybridTime" json:"status_hybrid_time,omitempty"`
	PropagatedHybridTime *uint64 `protobuf:"fixed64,4,opt,name=propagated_hybrid_time,json=propagatedHybridTime" json:"propagated_hybrid_time,omitempty"`
	CoordinatorSafeTime  *uint64 `protobuf:"fixed64,5,opt,name=coordinator_safe_time,json=coordinatorSafeTime" json:"coordinator_safe_time,omitempty"`
}

func (x *AbortTransactionResponsePB) Reset() {
	*x = AbortTransactionResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortTransactionResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortTransactionResponsePB) ProtoMessage() {}

func (x *AbortTransactionResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortTransactionResponsePB.ProtoReflect.Descriptor instead.
func (*AbortTransactionResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{15}
}

func (x *AbortTransactionResponsePB) GetError() *TabletServerErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *AbortTransactionResponsePB) GetStatus() TransactionStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return TransactionStatus_CREATED
}

func (x *AbortTransactionResponsePB) GetStatusHybridTime() uint64 {
	if x != nil && x.StatusHybridTime != nil {
		return *x.StatusHybridTime
	}
	return 0
}

func (x *AbortTransactionResponsePB) GetPropagatedHybridTime() uint64 {
	if x != nil && x.PropagatedHybridTime != nil {
		return *x.PropagatedHybridTime
	}
	return 0
}

func (x *AbortTransactionResponsePB) GetCoordinatorSafeTime() uint64 {
	if x != nil && x.CoordinatorSafeTime != nil {
		return *x.CoordinatorSafeTime
	}
	return 0
}

type TakeTransactionRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsGlobal *bool `protobuf:"varint,1,opt,name=is_global,json=isGlobal" json:"is_global,omitempty"`
}

func (x *TakeTransactionRequestPB) Reset() {
	*x = TakeTransactionRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeTransactionRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeTransactionRequestPB) ProtoMessage() {}

func (x *TakeTransactionRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeTransactionRequestPB.ProtoReflect.Descriptor instead.
func (*TakeTransactionRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{16}
}

func (x *TakeTransactionRequestPB) GetIsGlobal() bool {
	if x != nil && x.IsGlobal != nil {
		return *x.IsGlobal
	}
	return false
}

type TakeTransactionResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *TransactionMetadataPB `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
}

func (x *TakeTransactionResponsePB) Reset() {
	*x = TakeTransactionResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeTransactionResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeTransactionResponsePB) ProtoMessage() {}

func (x *TakeTransactionResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeTransactionResponsePB.ProtoReflect.Descriptor instead.
func (*TakeTransactionResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{17}
}

func (x *TakeTransactionResponsePB) GetMetadata() *TransactionMetadataPB {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GetSplitKeyRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletId             []byte  `protobuf:"bytes,1,req,name=tablet_id,json=tabletId" json:"tablet_id,omitempty"`
	PropagatedHybridTime *uint64 `protobuf:"fixed64,2,opt,name=propagated_hybrid_time,json=propagatedHybridTime" json:"propagated_hybrid_time,omitempty"`
}

func (x *GetSplitKeyRequestPB) Reset() {
	*x = GetSplitKeyRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSplitKeyRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSplitKeyRequestPB) ProtoMessage() {}

func (x *GetSplitKeyRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSplitKeyRequestPB.ProtoReflect.Descriptor instead.
func (*GetSplitKeyRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetSplitKeyRequestPB) GetTabletId() []byte {
	if x != nil {
		return x.TabletId
	}
	return nil
}

func (x *GetSplitKeyRequestPB) GetPropagatedHybridTime() uint64 {
	if x != nil && x.PropagatedHybridTime != nil {
		return *x.PropagatedHybridTime
	}
	return 0
}

type GetSplitKeyResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error                *TabletServerErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	SplitPartitionKey    []byte               `protobuf:"bytes,2,opt,name=split_partition_key,json=splitPartitionKey" json:"split_partition_key,omitempty"`
	SplitEncodedKey      []byte               `protobuf:"bytes,3,opt,name=split_encoded_key,json=splitEncodedKey" json:"split_encoded_key,omitempty"`
	PropagatedHybridTime *uint64              `protobuf:"fixed64,4,opt,name=propagated_hybrid_time,json=propagatedHybridTime" json:"propagated_hybrid_time,omitempty"`
}

func (x *GetSplitKeyResponsePB) Reset() {
	*x = GetSplitKeyResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSplitKeyResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSplitKeyResponsePB) ProtoMessage() {}

func (x *GetSplitKeyResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSplitKeyResponsePB.ProtoReflect.Descriptor instead.
func (*GetSplitKeyResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetSplitKeyResponsePB) GetError() *TabletServerErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetSplitKeyResponsePB) GetSplitPartitionKey() []byte {
	if x != nil {
		return x.SplitPartitionKey
	}
	return nil
}

func (x *GetSplitKeyResponsePB) GetSplitEncodedKey() []byte {
	if x != nil {
		return x.SplitEncodedKey
	}
	return nil
}

func (x *GetSplitKeyResponsePB) GetPropagatedHybridTime() uint64 {
	if x != nil && x.PropagatedHybridTime != nil {
		return *x.PropagatedHybridTime
	}
	return 0
}

type GetSharedDataRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSharedDataRequestPB) Reset() {
	*x = GetSharedDataRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharedDataRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharedDataRequestPB) ProtoMessage() {}

func (x *GetSharedDataRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharedDataRequestPB.ProtoReflect.Descriptor instead.
func (*GetSharedDataRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{20}
}

type GetSharedDataResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *GetSharedDataResponsePB) Reset() {
	*x = GetSharedDataResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharedDataResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharedDataResponsePB) ProtoMessage() {}

func (x *GetSharedDataResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharedDataResponsePB.ProtoReflect.Descriptor instead.
func (*GetSharedDataResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetSharedDataResponsePB) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// An entry for each tablet.
type ListTabletsForTabletServerResponsePB_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName           *string           `protobuf:"bytes,1,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	TabletId            []byte            `protobuf:"bytes,2,opt,name=tablet_id,json=tabletId" json:"tablet_id,omitempty"`
	IsLeader            *bool             `protobuf:"varint,3,opt,name=is_leader,json=isLeader" json:"is_leader,omitempty"`
	State               *RaftGroupStatePB `protobuf:"varint,4,opt,name=state,enum=yb.tablet.RaftGroupStatePB" json:"state,omitempty"`
	NumSstFiles         *uint64           `protobuf:"varint,5,opt,name=num_sst_files,json=numSstFiles" json:"num_sst_files,omitempty"`
	NumLogSegments      *uint64           `protobuf:"varint,6,opt,name=num_log_segments,json=numLogSegments" json:"num_log_segments,omitempty"`
	NumMemtablesIntents *uint64           `protobuf:"varint,7,opt,name=num_memtables_intents,json=numMemtablesIntents" json:"num_memtables_intents,omitempty"`
	NumMemtablesRegular *uint64           `protobuf:"varint,8,opt,name=num_memtables_regular,json=numMemtablesRegular" json:"num_memtables_regular,omitempty"`
}

func (x *ListTabletsForTabletServerResponsePB_Entry) Reset() {
	*x = ListTabletsForTabletServerResponsePB_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_tserver_tserver_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTabletsForTabletServerResponsePB_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTabletsForTabletServerResponsePB_Entry) ProtoMessage() {}

func (x *ListTabletsForTabletServerResponsePB_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_tserver_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTabletsForTabletServerResponsePB_Entry.ProtoReflect.Descriptor instead.
func (*ListTabletsForTabletServerResponsePB_Entry) Descriptor() ([]byte, []int) {
	return file_yb_tserver_tserver_service_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ListTabletsForTabletServerResponsePB_Entry) GetTableName() string {
	if x != nil && x.TableName != nil {
		return *x.TableName
	}
	return ""
}

func (x *ListTabletsForTabletServerResponsePB_Entry) GetTabletId() []byte {
	if x != nil {
		return x.TabletId
	}
	return nil
}

func (x *ListTabletsForTabletServerResponsePB_Entry) GetIsLeader() bool {
	if x != nil && x.IsLeader != nil {
		return *x.IsLeader
	}
	return false
}

func (x *ListTabletsForTabletServerResponsePB_Entry) GetState() RaftGroupStatePB {
	if x != nil && x.State != nil {
		return *x.State
	}
	return RaftGroupStatePB_UNKNOWN
}

func (x *ListTabletsForTabletServerResponsePB_Entry) GetNumSstFiles() uint64 {
	if x != nil && x.NumSstFiles != nil {
		return *x.NumSstFiles
	}
	return 0
}

func (x *ListTabletsForTabletServerResponsePB_Entry) GetNumLogSegments() uint64 {
	if x != nil && x.NumLogSegments != nil {
		return *x.NumLogSegments
	}
	return 0
}

func (x *ListTabletsForTabletServerResponsePB_Entry) GetNumMemtablesIntents() uint64 {
	if x != nil && x.NumMemtablesIntents != nil {
		return *x.NumMemtablesIntents
	}
	return 0
}

func (x *ListTabletsForTabletServerResponsePB_Entry) GetNumMemtablesRegular() uint64 {
	if x != nil && x.NumMemtablesRegular != nil {
		return *x.NumMemtablesRegular
	}
	return 0
}

var File_yb_tserver_tserver_service_proto protoreflect.FileDescriptor

var file_yb_tserver_tserver_service_proto_rawDesc = []byte{
	0x0a, 0x20, 0x79, 0x62, 0x2f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x16,
	0x79, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x79, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x79, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x79, 0x62, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x2f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x79, 0x62, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x79, 0x62, 0x2f,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x79, 0x62, 0x2f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42,
	0x22, 0x3d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x21, 0x0a, 0x0c,
	0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x93, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x43, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x79, 0x62, 0x2e, 0x59, 0x42, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08,
	0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a,
	0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0x79, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x35, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x62, 0x2e,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x4a, 0x04,
	0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06,
	0x22, 0x25, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x46,
	0x6f, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x22, 0xc4, 0x03, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42,
	0x12, 0x50, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x42, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x1a, 0xc9, 0x02, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x2e, 0x52, 0x61, 0x66, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50,
	0x42, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x5f,
	0x73, 0x73, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x6e, 0x75, 0x6d, 0x53, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x4c, 0x6f, 0x67, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x65,
	0x6d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6e, 0x75, 0x6d, 0x4d, 0x65, 0x6d, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x6e, 0x75,
	0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x75,
	0x6c, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6e, 0x75, 0x6d, 0x4d, 0x65,
	0x6d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x22, 0x51,
	0x0a, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69,
	0x72, 0x22, 0x4d, 0x0a, 0x14, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0xa4, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x62,
	0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x42, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48, 0x79, 0x62,
	0x72, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x34,
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x79, 0x62,
	0x72, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x14,
	0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72,
	0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x70,
	0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xa2, 0x03, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x42, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x79, 0x62, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x06, 0x52, 0x10, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x79, 0x62,
	0x72, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x70, 0x61,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a,
	0x16, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x14, 0x6e,
	0x75, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x06, 0x52, 0x13, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x61, 0x66, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x12, 0x61, 0x62, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x78, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x53, 0x75, 0x62, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x50, 0x42, 0x52, 0x10, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x75, 0x62, 0x74,
	0x78, 0x6e, 0x53, 0x65, 0x74, 0x22, 0xed, 0x01, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x42, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x70,
	0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67,
	0x61, 0x74, 0x65, 0x64, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x45,
	0x0a, 0x1f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0x98, 0x02, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x16,
	0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x79, 0x62, 0x72, 0x69,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x14, 0x70, 0x72,
	0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x14, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x10, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x79, 0x62, 0x72,
	0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x22, 0x95, 0x01, 0x0a, 0x19, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48, 0x79,
	0x62, 0x72, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9a, 0x02, 0x0a, 0x1a, 0x41, 0x62, 0x6f,
	0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2d,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x79, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a,
	0x12, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x10, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x70,
	0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x52, 0x14, 0x70, 0x72, 0x6f,
	0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x13, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x61, 0x66,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x18, 0x54, 0x61, 0x6b, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x42, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x22, 0x52,
	0x0a, 0x19, 0x54, 0x61, 0x6b, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x35, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x79, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x42, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x69, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x70, 0x61,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe0, 0x01,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e,
	0x0a, 0x13, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x73, 0x70, 0x6c,
	0x69, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x11, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x73, 0x70, 0x6c, 0x69, 0x74,
	0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72,
	0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x70,
	0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x22, 0x2d, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xb4, 0x0f, 0x0a, 0x13, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x40, 0x0a, 0x05, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x79, 0x62, 0x2e,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x1b, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x42, 0x12, 0x3d, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x19, 0x2e, 0x79, 0x62,
	0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x1a, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x42, 0x12, 0x6a, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x6f, 0x77, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x28, 0x2e, 0x79, 0x62, 0x2e, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x42, 0x1a, 0x29, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x3d,
	0x0a, 0x04, 0x4e, 0x6f, 0x4f, 0x70, 0x12, 0x19, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x4f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x42, 0x1a, 0x1a, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4e,
	0x6f, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x52, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x79,
	0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x21,
	0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x42, 0x12, 0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x24, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x49,
	0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x1d, 0x2e, 0x79, 0x62, 0x2e,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x1e, 0x2e, 0x79, 0x62, 0x2e, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x7f, 0x0a, 0x1a, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73,
	0x46, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x30, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x73, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x4f, 0x0a, 0x0a, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x20, 0x2e, 0x79, 0x62, 0x2e, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x64, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x27, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x42, 0x12, 0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x2e, 0x79, 0x62, 0x2e, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x42, 0x1a, 0x2a, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42,
	0x12, 0x94, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x36, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x37,
	0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x41, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x61, 0x0a, 0x10, 0x41, 0x62, 0x6f, 0x72, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x79, 0x62,
	0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x42, 0x1a, 0x26, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x41, 0x62, 0x6f, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x49, 0x0a, 0x08, 0x54, 0x72,
	0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x1e, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x5e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x25,
	0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x79, 0x62,
	0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x42, 0x1a, 0x28, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x46,
	0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x1c, 0x2e, 0x79, 0x62, 0x2e, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x1d, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x6a, 0x0a, 0x13, 0x49, 0x73, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x28, 0x2e,
	0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x29, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x42, 0x12, 0x5e, 0x0a, 0x0f, 0x54, 0x61, 0x6b, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x54, 0x61, 0x6b, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x25, 0x2e, 0x79, 0x62,
	0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x6b, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x42, 0x12, 0x52, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x20, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x42, 0x1a, 0x21, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x58, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x23, 0x2e, 0x79, 0x62,
	0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42,
	0x42, 0x10, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72,
}

var (
	file_yb_tserver_tserver_service_proto_rawDescOnce sync.Once
	file_yb_tserver_tserver_service_proto_rawDescData = file_yb_tserver_tserver_service_proto_rawDesc
)

func file_yb_tserver_tserver_service_proto_rawDescGZIP() []byte {
	file_yb_tserver_tserver_service_proto_rawDescOnce.Do(func() {
		file_yb_tserver_tserver_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yb_tserver_tserver_service_proto_rawDescData)
	})
	return file_yb_tserver_tserver_service_proto_rawDescData
}

var file_yb_tserver_tserver_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_yb_tserver_tserver_service_proto_goTypes = []interface{}{
	(*GetLogLocationRequestPB)(nil),                     // 0: yb.tserver.GetLogLocationRequestPB
	(*GetLogLocationResponsePB)(nil),                    // 1: yb.tserver.GetLogLocationResponsePB
	(*ChecksumRequestPB)(nil),                           // 2: yb.tserver.ChecksumRequestPB
	(*ChecksumResponsePB)(nil),                          // 3: yb.tserver.ChecksumResponsePB
	(*ListTabletsForTabletServerRequestPB)(nil),         // 4: yb.tserver.ListTabletsForTabletServerRequestPB
	(*ListTabletsForTabletServerResponsePB)(nil),        // 5: yb.tserver.ListTabletsForTabletServerResponsePB
	(*ImportDataRequestPB)(nil),                         // 6: yb.tserver.ImportDataRequestPB
	(*ImportDataResponsePB)(nil),                        // 7: yb.tserver.ImportDataResponsePB
	(*UpdateTransactionRequestPB)(nil),                  // 8: yb.tserver.UpdateTransactionRequestPB
	(*UpdateTransactionResponsePB)(nil),                 // 9: yb.tserver.UpdateTransactionResponsePB
	(*GetTransactionStatusRequestPB)(nil),               // 10: yb.tserver.GetTransactionStatusRequestPB
	(*GetTransactionStatusResponsePB)(nil),              // 11: yb.tserver.GetTransactionStatusResponsePB
	(*GetTransactionStatusAtParticipantRequestPB)(nil),  // 12: yb.tserver.GetTransactionStatusAtParticipantRequestPB
	(*GetTransactionStatusAtParticipantResponsePB)(nil), // 13: yb.tserver.GetTransactionStatusAtParticipantResponsePB
	(*AbortTransactionRequestPB)(nil),                   // 14: yb.tserver.AbortTransactionRequestPB
	(*AbortTransactionResponsePB)(nil),                  // 15: yb.tserver.AbortTransactionResponsePB
	(*TakeTransactionRequestPB)(nil),                    // 16: yb.tserver.TakeTransactionRequestPB
	(*TakeTransactionResponsePB)(nil),                   // 17: yb.tserver.TakeTransactionResponsePB
	(*GetSplitKeyRequestPB)(nil),                        // 18: yb.tserver.GetSplitKeyRequestPB
	(*GetSplitKeyResponsePB)(nil),                       // 19: yb.tserver.GetSplitKeyResponsePB
	(*GetSharedDataRequestPB)(nil),                      // 20: yb.tserver.GetSharedDataRequestPB
	(*GetSharedDataResponsePB)(nil),                     // 21: yb.tserver.GetSharedDataResponsePB
	(*ListTabletsForTabletServerResponsePB_Entry)(nil),  // 22: yb.tserver.ListTabletsForTabletServerResponsePB.Entry
	(YBConsistencyLevel)(0),                             // 23: yb.YBConsistencyLevel
	(*TabletServerErrorPB)(nil),                         // 24: yb.tserver.TabletServerErrorPB
	(*TransactionStatePB)(nil),                          // 25: yb.tablet.TransactionStatePB
	(TransactionStatus)(0),                              // 26: yb.TransactionStatus
	(*AbortedSubTransactionSetPB)(nil),                  // 27: yb.AbortedSubTransactionSetPB
	(*TransactionMetadataPB)(nil),                       // 28: yb.TransactionMetadataPB
	(RaftGroupStatePB)(0),                               // 29: yb.tablet.RaftGroupStatePB
	(*WriteRequestPB)(nil),                              // 30: yb.tserver.WriteRequestPB
	(*ReadRequestPB)(nil),                               // 31: yb.tserver.ReadRequestPB
	(*VerifyTableRowRangeRequestPB)(nil),                // 32: yb.tserver.VerifyTableRowRangeRequestPB
	(*NoOpRequestPB)(nil),                               // 33: yb.tserver.NoOpRequestPB
	(*ListTabletsRequestPB)(nil),                        // 34: yb.tserver.ListTabletsRequestPB
	(*TruncateRequestPB)(nil),                           // 35: yb.tserver.TruncateRequestPB
	(*GetTabletStatusRequestPB)(nil),                    // 36: yb.tserver.GetTabletStatusRequestPB
	(*GetMasterAddressesRequestPB)(nil),                 // 37: yb.tserver.GetMasterAddressesRequestPB
	(*PublishRequestPB)(nil),                            // 38: yb.tserver.PublishRequestPB
	(*IsTabletServerReadyRequestPB)(nil),                // 39: yb.tserver.IsTabletServerReadyRequestPB
	(*WriteResponsePB)(nil),                             // 40: yb.tserver.WriteResponsePB
	(*ReadResponsePB)(nil),                              // 41: yb.tserver.ReadResponsePB
	(*VerifyTableRowRangeResponsePB)(nil),               // 42: yb.tserver.VerifyTableRowRangeResponsePB
	(*NoOpResponsePB)(nil),                              // 43: yb.tserver.NoOpResponsePB
	(*ListTabletsResponsePB)(nil),                       // 44: yb.tserver.ListTabletsResponsePB
	(*TruncateResponsePB)(nil),                          // 45: yb.tserver.TruncateResponsePB
	(*GetTabletStatusResponsePB)(nil),                   // 46: yb.tserver.GetTabletStatusResponsePB
	(*GetMasterAddressesResponsePB)(nil),                // 47: yb.tserver.GetMasterAddressesResponsePB
	(*PublishResponsePB)(nil),                           // 48: yb.tserver.PublishResponsePB
	(*IsTabletServerReadyResponsePB)(nil),               // 49: yb.tserver.IsTabletServerReadyResponsePB
}
var file_yb_tserver_tserver_service_proto_depIdxs = []int32{
	23, // 0: yb.tserver.ChecksumRequestPB.consistency_level:type_name -> yb.YBConsistencyLevel
	24, // 1: yb.tserver.ChecksumResponsePB.error:type_name -> yb.tserver.TabletServerErrorPB
	22, // 2: yb.tserver.ListTabletsForTabletServerResponsePB.entries:type_name -> yb.tserver.ListTabletsForTabletServerResponsePB.Entry
	24, // 3: yb.tserver.ImportDataResponsePB.error:type_name -> yb.tserver.TabletServerErrorPB
	25, // 4: yb.tserver.UpdateTransactionRequestPB.state:type_name -> yb.tablet.TransactionStatePB
	24, // 5: yb.tserver.UpdateTransactionResponsePB.error:type_name -> yb.tserver.TabletServerErrorPB
	24, // 6: yb.tserver.GetTransactionStatusResponsePB.error:type_name -> yb.tserver.TabletServerErrorPB
	26, // 7: yb.tserver.GetTransactionStatusResponsePB.status:type_name -> yb.TransactionStatus
	27, // 8: yb.tserver.GetTransactionStatusResponsePB.aborted_subtxn_set:type_name -> yb.AbortedSubTransactionSetPB
	24, // 9: yb.tserver.GetTransactionStatusAtParticipantResponsePB.error:type_name -> yb.tserver.TabletServerErrorPB
	24, // 10: yb.tserver.AbortTransactionResponsePB.error:type_name -> yb.tserver.TabletServerErrorPB
	26, // 11: yb.tserver.AbortTransactionResponsePB.status:type_name -> yb.TransactionStatus
	28, // 12: yb.tserver.TakeTransactionResponsePB.metadata:type_name -> yb.TransactionMetadataPB
	24, // 13: yb.tserver.GetSplitKeyResponsePB.error:type_name -> yb.tserver.TabletServerErrorPB
	29, // 14: yb.tserver.ListTabletsForTabletServerResponsePB.Entry.state:type_name -> yb.tablet.RaftGroupStatePB
	30, // 15: yb.tserver.TabletServerService.Write:input_type -> yb.tserver.WriteRequestPB
	31, // 16: yb.tserver.TabletServerService.Read:input_type -> yb.tserver.ReadRequestPB
	32, // 17: yb.tserver.TabletServerService.VerifyTableRowRange:input_type -> yb.tserver.VerifyTableRowRangeRequestPB
	33, // 18: yb.tserver.TabletServerService.NoOp:input_type -> yb.tserver.NoOpRequestPB
	34, // 19: yb.tserver.TabletServerService.ListTablets:input_type -> yb.tserver.ListTabletsRequestPB
	0,  // 20: yb.tserver.TabletServerService.GetLogLocation:input_type -> yb.tserver.GetLogLocationRequestPB
	2,  // 21: yb.tserver.TabletServerService.Checksum:input_type -> yb.tserver.ChecksumRequestPB
	4,  // 22: yb.tserver.TabletServerService.ListTabletsForTabletServer:input_type -> yb.tserver.ListTabletsForTabletServerRequestPB
	6,  // 23: yb.tserver.TabletServerService.ImportData:input_type -> yb.tserver.ImportDataRequestPB
	8,  // 24: yb.tserver.TabletServerService.UpdateTransaction:input_type -> yb.tserver.UpdateTransactionRequestPB
	10, // 25: yb.tserver.TabletServerService.GetTransactionStatus:input_type -> yb.tserver.GetTransactionStatusRequestPB
	12, // 26: yb.tserver.TabletServerService.GetTransactionStatusAtParticipant:input_type -> yb.tserver.GetTransactionStatusAtParticipantRequestPB
	14, // 27: yb.tserver.TabletServerService.AbortTransaction:input_type -> yb.tserver.AbortTransactionRequestPB
	35, // 28: yb.tserver.TabletServerService.Truncate:input_type -> yb.tserver.TruncateRequestPB
	36, // 29: yb.tserver.TabletServerService.GetTabletStatus:input_type -> yb.tserver.GetTabletStatusRequestPB
	37, // 30: yb.tserver.TabletServerService.GetMasterAddresses:input_type -> yb.tserver.GetMasterAddressesRequestPB
	38, // 31: yb.tserver.TabletServerService.Publish:input_type -> yb.tserver.PublishRequestPB
	39, // 32: yb.tserver.TabletServerService.IsTabletServerReady:input_type -> yb.tserver.IsTabletServerReadyRequestPB
	16, // 33: yb.tserver.TabletServerService.TakeTransaction:input_type -> yb.tserver.TakeTransactionRequestPB
	18, // 34: yb.tserver.TabletServerService.GetSplitKey:input_type -> yb.tserver.GetSplitKeyRequestPB
	20, // 35: yb.tserver.TabletServerService.GetSharedData:input_type -> yb.tserver.GetSharedDataRequestPB
	40, // 36: yb.tserver.TabletServerService.Write:output_type -> yb.tserver.WriteResponsePB
	41, // 37: yb.tserver.TabletServerService.Read:output_type -> yb.tserver.ReadResponsePB
	42, // 38: yb.tserver.TabletServerService.VerifyTableRowRange:output_type -> yb.tserver.VerifyTableRowRangeResponsePB
	43, // 39: yb.tserver.TabletServerService.NoOp:output_type -> yb.tserver.NoOpResponsePB
	44, // 40: yb.tserver.TabletServerService.ListTablets:output_type -> yb.tserver.ListTabletsResponsePB
	1,  // 41: yb.tserver.TabletServerService.GetLogLocation:output_type -> yb.tserver.GetLogLocationResponsePB
	3,  // 42: yb.tserver.TabletServerService.Checksum:output_type -> yb.tserver.ChecksumResponsePB
	5,  // 43: yb.tserver.TabletServerService.ListTabletsForTabletServer:output_type -> yb.tserver.ListTabletsForTabletServerResponsePB
	7,  // 44: yb.tserver.TabletServerService.ImportData:output_type -> yb.tserver.ImportDataResponsePB
	9,  // 45: yb.tserver.TabletServerService.UpdateTransaction:output_type -> yb.tserver.UpdateTransactionResponsePB
	11, // 46: yb.tserver.TabletServerService.GetTransactionStatus:output_type -> yb.tserver.GetTransactionStatusResponsePB
	13, // 47: yb.tserver.TabletServerService.GetTransactionStatusAtParticipant:output_type -> yb.tserver.GetTransactionStatusAtParticipantResponsePB
	15, // 48: yb.tserver.TabletServerService.AbortTransaction:output_type -> yb.tserver.AbortTransactionResponsePB
	45, // 49: yb.tserver.TabletServerService.Truncate:output_type -> yb.tserver.TruncateResponsePB
	46, // 50: yb.tserver.TabletServerService.GetTabletStatus:output_type -> yb.tserver.GetTabletStatusResponsePB
	47, // 51: yb.tserver.TabletServerService.GetMasterAddresses:output_type -> yb.tserver.GetMasterAddressesResponsePB
	48, // 52: yb.tserver.TabletServerService.Publish:output_type -> yb.tserver.PublishResponsePB
	49, // 53: yb.tserver.TabletServerService.IsTabletServerReady:output_type -> yb.tserver.IsTabletServerReadyResponsePB
	17, // 54: yb.tserver.TabletServerService.TakeTransaction:output_type -> yb.tserver.TakeTransactionResponsePB
	19, // 55: yb.tserver.TabletServerService.GetSplitKey:output_type -> yb.tserver.GetSplitKeyResponsePB
	21, // 56: yb.tserver.TabletServerService.GetSharedData:output_type -> yb.tserver.GetSharedDataResponsePB
	36, // [36:57] is the sub-list for method output_type
	15, // [15:36] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_yb_tserver_tserver_service_proto_init() }
func file_yb_tserver_tserver_service_proto_init() {
	if File_yb_tserver_tserver_service_proto != nil {
		return
	}
	file_yb_common_common_proto_init()
	file_yb_common_common_types_proto_init()
	file_yb_common_transaction_proto_init()
	file_yb_tablet_tablet_types_proto_init()
	file_yb_tablet_operations_proto_init()
	file_yb_tserver_tserver_proto_init()
	file_yb_tserver_tserver_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yb_tserver_tserver_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogLocationRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogLocationResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChecksumRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChecksumResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTabletsForTabletServerRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTabletsForTabletServerResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportDataRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportDataResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTransactionRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTransactionResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionStatusRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionStatusResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionStatusAtParticipantRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionStatusAtParticipantResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortTransactionRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortTransactionResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeTransactionRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeTransactionResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSplitKeyRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSplitKeyResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharedDataRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharedDataResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_tserver_tserver_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTabletsForTabletServerResponsePB_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yb_tserver_tserver_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yb_tserver_tserver_service_proto_goTypes,
		DependencyIndexes: file_yb_tserver_tserver_service_proto_depIdxs,
		MessageInfos:      file_yb_tserver_tserver_service_proto_msgTypes,
	}.Build()
	File_yb_tserver_tserver_service_proto = out.File
	file_yb_tserver_tserver_service_proto_rawDesc = nil
	file_yb_tserver_tserver_service_proto_goTypes = nil
	file_yb_tserver_tserver_service_proto_depIdxs = nil
}
