// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: yb/master/master_admin.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TODO: rename to FlushOrCompact TablesRequestPB
// https://github.com/YugaByte/yugabyte-db/issues/729
type FlushTablesRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables []*TableIdentifierPB `protobuf:"bytes,1,rep,name=tables" json:"tables,omitempty"`
	// Whether we want to compact the tablets instead of flushing them.
	IsCompaction *bool `protobuf:"varint,2,opt,name=is_compaction,json=isCompaction" json:"is_compaction,omitempty"`
	// Whether we want to include index tables in this flush. If there are index tables in the tables
	// field this field must be set to false, otherwise the request will fail.
	AddIndexes *bool `protobuf:"varint,3,opt,name=add_indexes,json=addIndexes" json:"add_indexes,omitempty"`
}

func (x *FlushTablesRequestPB) Reset() {
	*x = FlushTablesRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushTablesRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushTablesRequestPB) ProtoMessage() {}

func (x *FlushTablesRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushTablesRequestPB.ProtoReflect.Descriptor instead.
func (*FlushTablesRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{0}
}

func (x *FlushTablesRequestPB) GetTables() []*TableIdentifierPB {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *FlushTablesRequestPB) GetIsCompaction() bool {
	if x != nil && x.IsCompaction != nil {
		return *x.IsCompaction
	}
	return false
}

func (x *FlushTablesRequestPB) GetAddIndexes() bool {
	if x != nil && x.AddIndexes != nil {
		return *x.AddIndexes
	}
	return false
}

type FlushTablesResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	FlushRequestId []byte         `protobuf:"bytes,2,opt,name=flush_request_id,json=flushRequestId" json:"flush_request_id,omitempty"`
}

func (x *FlushTablesResponsePB) Reset() {
	*x = FlushTablesResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushTablesResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushTablesResponsePB) ProtoMessage() {}

func (x *FlushTablesResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushTablesResponsePB.ProtoReflect.Descriptor instead.
func (*FlushTablesResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{1}
}

func (x *FlushTablesResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *FlushTablesResponsePB) GetFlushRequestId() []byte {
	if x != nil {
		return x.FlushRequestId
	}
	return nil
}

type IsFlushTablesDoneRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlushRequestId []byte `protobuf:"bytes,1,opt,name=flush_request_id,json=flushRequestId" json:"flush_request_id,omitempty"`
}

func (x *IsFlushTablesDoneRequestPB) Reset() {
	*x = IsFlushTablesDoneRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFlushTablesDoneRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFlushTablesDoneRequestPB) ProtoMessage() {}

func (x *IsFlushTablesDoneRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFlushTablesDoneRequestPB.ProtoReflect.Descriptor instead.
func (*IsFlushTablesDoneRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{2}
}

func (x *IsFlushTablesDoneRequestPB) GetFlushRequestId() []byte {
	if x != nil {
		return x.FlushRequestId
	}
	return nil
}

type IsFlushTablesDoneResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	// true if the flush tables operation is completed, false otherwise.
	Done *bool `protobuf:"varint,2,opt,name=done" json:"done,omitempty"`
	// true if the flush tables operation is successful.
	Success *bool `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
}

func (x *IsFlushTablesDoneResponsePB) Reset() {
	*x = IsFlushTablesDoneResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFlushTablesDoneResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFlushTablesDoneResponsePB) ProtoMessage() {}

func (x *IsFlushTablesDoneResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFlushTablesDoneResponsePB.ProtoReflect.Descriptor instead.
func (*IsFlushTablesDoneResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{3}
}

func (x *IsFlushTablesDoneResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *IsFlushTablesDoneResponsePB) GetDone() bool {
	if x != nil && x.Done != nil {
		return *x.Done
	}
	return false
}

func (x *IsFlushTablesDoneResponsePB) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type FlushSysCatalogRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FlushSysCatalogRequestPB) Reset() {
	*x = FlushSysCatalogRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushSysCatalogRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushSysCatalogRequestPB) ProtoMessage() {}

func (x *FlushSysCatalogRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushSysCatalogRequestPB.ProtoReflect.Descriptor instead.
func (*FlushSysCatalogRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{4}
}

type FlushSysCatalogResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (x *FlushSysCatalogResponsePB) Reset() {
	*x = FlushSysCatalogResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushSysCatalogResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushSysCatalogResponsePB) ProtoMessage() {}

func (x *FlushSysCatalogResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushSysCatalogResponsePB.ProtoReflect.Descriptor instead.
func (*FlushSysCatalogResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{5}
}

func (x *FlushSysCatalogResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type CompactSysCatalogRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompactSysCatalogRequestPB) Reset() {
	*x = CompactSysCatalogRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompactSysCatalogRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactSysCatalogRequestPB) ProtoMessage() {}

func (x *CompactSysCatalogRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompactSysCatalogRequestPB.ProtoReflect.Descriptor instead.
func (*CompactSysCatalogRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{6}
}

type CompactSysCatalogResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (x *CompactSysCatalogResponsePB) Reset() {
	*x = CompactSysCatalogResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompactSysCatalogResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactSysCatalogResponsePB) ProtoMessage() {}

func (x *CompactSysCatalogResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompactSysCatalogResponsePB.ProtoReflect.Descriptor instead.
func (*CompactSysCatalogResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{7}
}

func (x *CompactSysCatalogResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type IsInitDbDoneRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsInitDbDoneRequestPB) Reset() {
	*x = IsInitDbDoneRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsInitDbDoneRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsInitDbDoneRequestPB) ProtoMessage() {}

func (x *IsInitDbDoneRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsInitDbDoneRequestPB.ProtoReflect.Descriptor instead.
func (*IsInitDbDoneRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{8}
}

type IsInitDbDoneResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	// Someone started running initdb, as indicated by the existence of template1.pg_proc.
	PgProcExists *bool `protobuf:"varint,2,opt,name=pg_proc_exists,json=pgProcExists" json:"pg_proc_exists,omitempty"`
	// This is true if the master ran initdb and it finished, successfully or not.
	Done *bool `protobuf:"varint,4,opt,name=done" json:"done,omitempty"`
	// If this is set to a non-empty string, initdb has failed.
	InitdbError *string `protobuf:"bytes,5,opt,name=initdb_error,json=initdbError" json:"initdb_error,omitempty"`
}

func (x *IsInitDbDoneResponsePB) Reset() {
	*x = IsInitDbDoneResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsInitDbDoneResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsInitDbDoneResponsePB) ProtoMessage() {}

func (x *IsInitDbDoneResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsInitDbDoneResponsePB.ProtoReflect.Descriptor instead.
func (*IsInitDbDoneResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{9}
}

func (x *IsInitDbDoneResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *IsInitDbDoneResponsePB) GetPgProcExists() bool {
	if x != nil && x.PgProcExists != nil {
		return *x.PgProcExists
	}
	return false
}

func (x *IsInitDbDoneResponsePB) GetDone() bool {
	if x != nil && x.Done != nil {
		return *x.Done
	}
	return false
}

func (x *IsInitDbDoneResponsePB) GetInitdbError() string {
	if x != nil && x.InitdbError != nil {
		return *x.InitdbError
	}
	return ""
}

type MasterSplitTabletRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletId []byte `protobuf:"bytes,1,req,name=tablet_id,json=tabletId" json:"tablet_id,omitempty"`
}

func (x *MasterSplitTabletRequestPB) Reset() {
	*x = MasterSplitTabletRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterSplitTabletRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterSplitTabletRequestPB) ProtoMessage() {}

func (x *MasterSplitTabletRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterSplitTabletRequestPB.ProtoReflect.Descriptor instead.
func (*MasterSplitTabletRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{10}
}

func (x *MasterSplitTabletRequestPB) GetTabletId() []byte {
	if x != nil {
		return x.TabletId
	}
	return nil
}

type MasterSplitTabletResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (x *MasterSplitTabletResponsePB) Reset() {
	*x = MasterSplitTabletResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterSplitTabletResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterSplitTabletResponsePB) ProtoMessage() {}

func (x *MasterSplitTabletResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterSplitTabletResponsePB.ProtoReflect.Descriptor instead.
func (*MasterSplitTabletResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{11}
}

func (x *MasterSplitTabletResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type CreateTransactionStatusTableRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName *string `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
}

func (x *CreateTransactionStatusTableRequestPB) Reset() {
	*x = CreateTransactionStatusTableRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionStatusTableRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionStatusTableRequestPB) ProtoMessage() {}

func (x *CreateTransactionStatusTableRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionStatusTableRequestPB.ProtoReflect.Descriptor instead.
func (*CreateTransactionStatusTableRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{12}
}

func (x *CreateTransactionStatusTableRequestPB) GetTableName() string {
	if x != nil && x.TableName != nil {
		return *x.TableName
	}
	return ""
}

type CreateTransactionStatusTableResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (x *CreateTransactionStatusTableResponsePB) Reset() {
	*x = CreateTransactionStatusTableResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionStatusTableResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionStatusTableResponsePB) ProtoMessage() {}

func (x *CreateTransactionStatusTableResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionStatusTableResponsePB.ProtoReflect.Descriptor instead.
func (*CreateTransactionStatusTableResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{13}
}

func (x *CreateTransactionStatusTableResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type DeleteNotServingTabletRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletId []byte `protobuf:"bytes,1,req,name=tablet_id,json=tabletId" json:"tablet_id,omitempty"`
}

func (x *DeleteNotServingTabletRequestPB) Reset() {
	*x = DeleteNotServingTabletRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotServingTabletRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotServingTabletRequestPB) ProtoMessage() {}

func (x *DeleteNotServingTabletRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotServingTabletRequestPB.ProtoReflect.Descriptor instead.
func (*DeleteNotServingTabletRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteNotServingTabletRequestPB) GetTabletId() []byte {
	if x != nil {
		return x.TabletId
	}
	return nil
}

type DeleteNotServingTabletResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (x *DeleteNotServingTabletResponsePB) Reset() {
	*x = DeleteNotServingTabletResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotServingTabletResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotServingTabletResponsePB) ProtoMessage() {}

func (x *DeleteNotServingTabletResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotServingTabletResponsePB.ProtoReflect.Descriptor instead.
func (*DeleteNotServingTabletResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteNotServingTabletResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type DdlLogRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DdlLogRequestPB) Reset() {
	*x = DdlLogRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DdlLogRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DdlLogRequestPB) ProtoMessage() {}

func (x *DdlLogRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DdlLogRequestPB.ProtoReflect.Descriptor instead.
func (*DdlLogRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{16}
}

type DdlLogResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *MasterErrorPB   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Entries []*DdlLogEntryPB `protobuf:"bytes,2,rep,name=entries" json:"entries,omitempty"`
}

func (x *DdlLogResponsePB) Reset() {
	*x = DdlLogResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_admin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DdlLogResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DdlLogResponsePB) ProtoMessage() {}

func (x *DdlLogResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_admin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DdlLogResponsePB.ProtoReflect.Descriptor instead.
func (*DdlLogResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_admin_proto_rawDescGZIP(), []int{17}
}

func (x *DdlLogResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *DdlLogResponsePB) GetEntries() []*DdlLogEntryPB {
	if x != nil {
		return x.Entries
	}
	return nil
}

var File_yb_master_master_admin_proto protoreflect.FileDescriptor

var file_yb_master_master_admin_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x79, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x23, 0x79, 0x62, 0x2f, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x79, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x79, 0x62,
	0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x92, 0x01, 0x0a, 0x14, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x34, 0x0a, 0x06, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x62,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x42, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x64, 0x64,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x71, 0x0a, 0x15, 0x46, 0x6c, 0x75, 0x73, 0x68,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42,
	0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x28, 0x0a, 0x10, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x66, 0x6c, 0x75, 0x73,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x1a, 0x49, 0x73,
	0x46, 0x6c, 0x75, 0x73, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x6c, 0x75, 0x73,
	0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0e, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x7b, 0x0a, 0x1b, 0x49, 0x73, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x1a, 0x0a, 0x18, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x53, 0x79, 0x73, 0x43, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x22, 0x4b, 0x0a, 0x19, 0x46,
	0x6c, 0x75, 0x73, 0x68, 0x53, 0x79, 0x73, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50,
	0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x53, 0x79, 0x73, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x22, 0x4d, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63,
	0x74, 0x53, 0x79, 0x73, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x49, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x44,
	0x62, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x22, 0xa5,
	0x01, 0x0a, 0x16, 0x49, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x62, 0x44, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x67, 0x5f,
	0x70, 0x72, 0x6f, 0x63, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x70, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64,
	0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x64,
	0x62, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x33, 0x0a, 0x14, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0c, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x15, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x46, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x26,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3e, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x64,
	0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x22, 0x76, 0x0a,
	0x10, 0x44, 0x64, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x32, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x44,
	0x64, 0x6c, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x42, 0x52, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x32, 0x85, 0x07, 0x0a, 0x0b, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x50, 0x0a, 0x0b, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x20, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x62, 0x0a, 0x11, 0x49, 0x73, 0x46, 0x6c, 0x75,
	0x73, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x25, 0x2e, 0x79,
	0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x46, 0x6c, 0x75, 0x73, 0x68,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x42, 0x1a, 0x26, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x49, 0x73, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x44, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x5c, 0x0a, 0x0f, 0x46,
	0x6c, 0x75, 0x73, 0x68, 0x53, 0x79, 0x73, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x23,
	0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68,
	0x53, 0x79, 0x73, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x42, 0x1a, 0x24, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x46, 0x6c, 0x75, 0x73, 0x68, 0x53, 0x79, 0x73, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x62, 0x0a, 0x11, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x63, 0x74, 0x53, 0x79, 0x73, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x25,
	0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x53, 0x79, 0x73, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x26, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x53, 0x79, 0x73, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x53, 0x0a,
	0x0c, 0x49, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x62, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x20, 0x2e,
	0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x49, 0x6e, 0x69, 0x74,
	0x44, 0x62, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a,
	0x21, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x49, 0x6e,
	0x69, 0x74, 0x44, 0x62, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x42, 0x12, 0x50, 0x0a, 0x0b, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x12, 0x1f, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x70,
	0x6c, 0x69, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x42, 0x1a, 0x20, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x42, 0x12, 0x83, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x30, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x31, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x71, 0x0a, 0x16, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x74, 0x12, 0x2a, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42,
	0x1a, 0x2b, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x41, 0x0a,
	0x06, 0x44, 0x64, 0x6c, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x44, 0x64, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x42, 0x1a, 0x1b, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x44, 0x64, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42,
	0x1a, 0x1b, 0xda, 0xb5, 0x18, 0x17, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x6f, 0x72, 0x67, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
}

var (
	file_yb_master_master_admin_proto_rawDescOnce sync.Once
	file_yb_master_master_admin_proto_rawDescData = file_yb_master_master_admin_proto_rawDesc
)

func file_yb_master_master_admin_proto_rawDescGZIP() []byte {
	file_yb_master_master_admin_proto_rawDescOnce.Do(func() {
		file_yb_master_master_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_yb_master_master_admin_proto_rawDescData)
	})
	return file_yb_master_master_admin_proto_rawDescData
}

var file_yb_master_master_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_yb_master_master_admin_proto_goTypes = []interface{}{
	(*FlushTablesRequestPB)(nil),                   // 0: yb.master.FlushTablesRequestPB
	(*FlushTablesResponsePB)(nil),                  // 1: yb.master.FlushTablesResponsePB
	(*IsFlushTablesDoneRequestPB)(nil),             // 2: yb.master.IsFlushTablesDoneRequestPB
	(*IsFlushTablesDoneResponsePB)(nil),            // 3: yb.master.IsFlushTablesDoneResponsePB
	(*FlushSysCatalogRequestPB)(nil),               // 4: yb.master.FlushSysCatalogRequestPB
	(*FlushSysCatalogResponsePB)(nil),              // 5: yb.master.FlushSysCatalogResponsePB
	(*CompactSysCatalogRequestPB)(nil),             // 6: yb.master.CompactSysCatalogRequestPB
	(*CompactSysCatalogResponsePB)(nil),            // 7: yb.master.CompactSysCatalogResponsePB
	(*IsInitDbDoneRequestPB)(nil),                  // 8: yb.master.IsInitDbDoneRequestPB
	(*IsInitDbDoneResponsePB)(nil),                 // 9: yb.master.IsInitDbDoneResponsePB
	(*MasterSplitTabletRequestPB)(nil),                   // 10: yb.master.MasterSplitTabletRequestPB
	(*MasterSplitTabletResponsePB)(nil),                  // 11: yb.master.MasterSplitTabletResponsePB
	(*CreateTransactionStatusTableRequestPB)(nil),  // 12: yb.master.CreateTransactionStatusTableRequestPB
	(*CreateTransactionStatusTableResponsePB)(nil), // 13: yb.master.CreateTransactionStatusTableResponsePB
	(*DeleteNotServingTabletRequestPB)(nil),        // 14: yb.master.DeleteNotServingTabletRequestPB
	(*DeleteNotServingTabletResponsePB)(nil),       // 15: yb.master.DeleteNotServingTabletResponsePB
	(*DdlLogRequestPB)(nil),                        // 16: yb.master.DdlLogRequestPB
	(*DdlLogResponsePB)(nil),                       // 17: yb.master.DdlLogResponsePB
	(*TableIdentifierPB)(nil),                      // 18: yb.master.TableIdentifierPB
	(*MasterErrorPB)(nil),                          // 19: yb.master.MasterErrorPB
	(*DdlLogEntryPB)(nil),                          // 20: yb.master.DdlLogEntryPB
}
var file_yb_master_master_admin_proto_depIdxs = []int32{
	18, // 0: yb.master.FlushTablesRequestPB.tables:type_name -> yb.master.TableIdentifierPB
	19, // 1: yb.master.FlushTablesResponsePB.error:type_name -> yb.master.MasterErrorPB
	19, // 2: yb.master.IsFlushTablesDoneResponsePB.error:type_name -> yb.master.MasterErrorPB
	19, // 3: yb.master.FlushSysCatalogResponsePB.error:type_name -> yb.master.MasterErrorPB
	19, // 4: yb.master.CompactSysCatalogResponsePB.error:type_name -> yb.master.MasterErrorPB
	19, // 5: yb.master.IsInitDbDoneResponsePB.error:type_name -> yb.master.MasterErrorPB
	19, // 6: yb.master.MasterSplitTabletResponsePB.error:type_name -> yb.master.MasterErrorPB
	19, // 7: yb.master.CreateTransactionStatusTableResponsePB.error:type_name -> yb.master.MasterErrorPB
	19, // 8: yb.master.DeleteNotServingTabletResponsePB.error:type_name -> yb.master.MasterErrorPB
	19, // 9: yb.master.DdlLogResponsePB.error:type_name -> yb.master.MasterErrorPB
	20, // 10: yb.master.DdlLogResponsePB.entries:type_name -> yb.master.DdlLogEntryPB
	0,  // 11: yb.master.MasterAdmin.FlushTables:input_type -> yb.master.FlushTablesRequestPB
	2,  // 12: yb.master.MasterAdmin.IsFlushTablesDone:input_type -> yb.master.IsFlushTablesDoneRequestPB
	4,  // 13: yb.master.MasterAdmin.FlushSysCatalog:input_type -> yb.master.FlushSysCatalogRequestPB
	6,  // 14: yb.master.MasterAdmin.CompactSysCatalog:input_type -> yb.master.CompactSysCatalogRequestPB
	8,  // 15: yb.master.MasterAdmin.IsInitDbDone:input_type -> yb.master.IsInitDbDoneRequestPB
	10, // 16: yb.master.MasterAdmin.SplitTablet:input_type -> yb.master.MasterSplitTabletRequestPB
	12, // 17: yb.master.MasterAdmin.CreateTransactionStatusTable:input_type -> yb.master.CreateTransactionStatusTableRequestPB
	14, // 18: yb.master.MasterAdmin.DeleteNotServingTablet:input_type -> yb.master.DeleteNotServingTabletRequestPB
	16, // 19: yb.master.MasterAdmin.DdlLog:input_type -> yb.master.DdlLogRequestPB
	1,  // 20: yb.master.MasterAdmin.FlushTables:output_type -> yb.master.FlushTablesResponsePB
	3,  // 21: yb.master.MasterAdmin.IsFlushTablesDone:output_type -> yb.master.IsFlushTablesDoneResponsePB
	5,  // 22: yb.master.MasterAdmin.FlushSysCatalog:output_type -> yb.master.FlushSysCatalogResponsePB
	7,  // 23: yb.master.MasterAdmin.CompactSysCatalog:output_type -> yb.master.CompactSysCatalogResponsePB
	9,  // 24: yb.master.MasterAdmin.IsInitDbDone:output_type -> yb.master.IsInitDbDoneResponsePB
	11, // 25: yb.master.MasterAdmin.SplitTablet:output_type -> yb.master.MasterSplitTabletResponsePB
	13, // 26: yb.master.MasterAdmin.CreateTransactionStatusTable:output_type -> yb.master.CreateTransactionStatusTableResponsePB
	15, // 27: yb.master.MasterAdmin.DeleteNotServingTablet:output_type -> yb.master.DeleteNotServingTabletResponsePB
	17, // 28: yb.master.MasterAdmin.DdlLog:output_type -> yb.master.DdlLogResponsePB
	20, // [20:29] is the sub-list for method output_type
	11, // [11:20] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_yb_master_master_admin_proto_init() }
func file_yb_master_master_admin_proto_init() {
	if File_yb_master_master_admin_proto != nil {
		return
	}
	file_yb_master_catalog_entity_info_proto_init()
	file_yb_master_master_types_proto_init()
	file_yb_rpc_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yb_master_master_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushTablesRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushTablesResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFlushTablesDoneRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFlushTablesDoneResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushSysCatalogRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushSysCatalogResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompactSysCatalogRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompactSysCatalogResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsInitDbDoneRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsInitDbDoneResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterSplitTabletRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterSplitTabletResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionStatusTableRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionStatusTableResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNotServingTabletRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNotServingTabletResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DdlLogRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_admin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DdlLogResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yb_master_master_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yb_master_master_admin_proto_goTypes,
		DependencyIndexes: file_yb_master_master_admin_proto_depIdxs,
		MessageInfos:      file_yb_master_master_admin_proto_msgTypes,
	}.Build()
	File_yb_master_master_admin_proto = out.File
	file_yb_master_master_admin_proto_rawDesc = nil
	file_yb_master_master_admin_proto_goTypes = nil
	file_yb_master_master_admin_proto_depIdxs = nil
}
