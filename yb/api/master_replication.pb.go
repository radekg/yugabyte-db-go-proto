// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: yb/master/master_replication.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CDCStreamInfoPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId []byte                `protobuf:"bytes,1,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	TableId  []byte                `protobuf:"bytes,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	Options  []*CDCStreamOptionsPB `protobuf:"bytes,3,rep,name=options" json:"options,omitempty"`
}

func (x *CDCStreamInfoPB) Reset() {
	*x = CDCStreamInfoPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDCStreamInfoPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDCStreamInfoPB) ProtoMessage() {}

func (x *CDCStreamInfoPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDCStreamInfoPB.ProtoReflect.Descriptor instead.
func (*CDCStreamInfoPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{0}
}

func (x *CDCStreamInfoPB) GetStreamId() []byte {
	if x != nil {
		return x.StreamId
	}
	return nil
}

func (x *CDCStreamInfoPB) GetTableId() []byte {
	if x != nil {
		return x.TableId
	}
	return nil
}

func (x *CDCStreamInfoPB) GetOptions() []*CDCStreamOptionsPB {
	if x != nil {
		return x.Options
	}
	return nil
}

type ValidateReplicationInfoRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicationInfo *ReplicationInfoPB `protobuf:"bytes,1,opt,name=replication_info,json=replicationInfo" json:"replication_info,omitempty"`
}

func (x *ValidateReplicationInfoRequestPB) Reset() {
	*x = ValidateReplicationInfoRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateReplicationInfoRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateReplicationInfoRequestPB) ProtoMessage() {}

func (x *ValidateReplicationInfoRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateReplicationInfoRequestPB.ProtoReflect.Descriptor instead.
func (*ValidateReplicationInfoRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{1}
}

func (x *ValidateReplicationInfoRequestPB) GetReplicationInfo() *ReplicationInfoPB {
	if x != nil {
		return x.ReplicationInfo
	}
	return nil
}

type ValidateReplicationInfoResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (x *ValidateReplicationInfoResponsePB) Reset() {
	*x = ValidateReplicationInfoResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateReplicationInfoResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateReplicationInfoResponsePB) ProtoMessage() {}

func (x *ValidateReplicationInfoResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateReplicationInfoResponsePB.ProtoReflect.Descriptor instead.
func (*ValidateReplicationInfoResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{2}
}

func (x *ValidateReplicationInfoResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type MasterCreateCDCStreamRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId      *string                    `protobuf:"bytes,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	Options      []*CDCStreamOptionsPB      `protobuf:"bytes,3,rep,name=options" json:"options,omitempty"`
	InitialState *SysCDCStreamEntryPB_State `protobuf:"varint,4,opt,name=initial_state,json=initialState,enum=yb.master.SysCDCStreamEntryPB_State" json:"initial_state,omitempty"`
}

func (x *MasterCreateCDCStreamRequestPB) Reset() {
	*x = MasterCreateCDCStreamRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterCreateCDCStreamRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterCreateCDCStreamRequestPB) ProtoMessage() {}

func (x *MasterCreateCDCStreamRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterCreateCDCStreamRequestPB.ProtoReflect.Descriptor instead.
func (*MasterCreateCDCStreamRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{3}
}

func (x *MasterCreateCDCStreamRequestPB) GetTableId() string {
	if x != nil && x.TableId != nil {
		return *x.TableId
	}
	return ""
}

func (x *MasterCreateCDCStreamRequestPB) GetOptions() []*CDCStreamOptionsPB {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *MasterCreateCDCStreamRequestPB) GetInitialState() SysCDCStreamEntryPB_State {
	if x != nil && x.InitialState != nil {
		return *x.InitialState
	}
	return SysCDCStreamEntryPB_INITIATED
}

type MasterCreateCDCStreamResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The error, if an error occurred with this request.
	Error    *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	StreamId []byte         `protobuf:"bytes,2,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
}

func (x *MasterCreateCDCStreamResponsePB) Reset() {
	*x = MasterCreateCDCStreamResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterCreateCDCStreamResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterCreateCDCStreamResponsePB) ProtoMessage() {}

func (x *MasterCreateCDCStreamResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterCreateCDCStreamResponsePB.ProtoReflect.Descriptor instead.
func (*MasterCreateCDCStreamResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{4}
}

func (x *MasterCreateCDCStreamResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *MasterCreateCDCStreamResponsePB) GetStreamId() []byte {
	if x != nil {
		return x.StreamId
	}
	return nil
}

type MasterDeleteCDCStreamRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId [][]byte `protobuf:"bytes,1,rep,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	Force    *bool    `protobuf:"varint,2,opt,name=force,def=0" json:"force,omitempty"`
}

// Default values for MasterDeleteCDCStreamRequestPB fields.
const (
	Default_MasterDeleteCDCStreamRequestPB_Force = bool(false)
)

func (x *MasterDeleteCDCStreamRequestPB) Reset() {
	*x = MasterDeleteCDCStreamRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterDeleteCDCStreamRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterDeleteCDCStreamRequestPB) ProtoMessage() {}

func (x *MasterDeleteCDCStreamRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterDeleteCDCStreamRequestPB.ProtoReflect.Descriptor instead.
func (*MasterDeleteCDCStreamRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{5}
}

func (x *MasterDeleteCDCStreamRequestPB) GetStreamId() [][]byte {
	if x != nil {
		return x.StreamId
	}
	return nil
}

func (x *MasterDeleteCDCStreamRequestPB) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return Default_MasterDeleteCDCStreamRequestPB_Force
}

type MasterDeleteCDCStreamResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The error, if an error occurred with this request.
	Error             *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	NotFoundStreamIds [][]byte       `protobuf:"bytes,2,rep,name=not_found_stream_ids,json=notFoundStreamIds" json:"not_found_stream_ids,omitempty"`
}

func (x *MasterDeleteCDCStreamResponsePB) Reset() {
	*x = MasterDeleteCDCStreamResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterDeleteCDCStreamResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterDeleteCDCStreamResponsePB) ProtoMessage() {}

func (x *MasterDeleteCDCStreamResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterDeleteCDCStreamResponsePB.ProtoReflect.Descriptor instead.
func (*MasterDeleteCDCStreamResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{6}
}

func (x *MasterDeleteCDCStreamResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *MasterDeleteCDCStreamResponsePB) GetNotFoundStreamIds() [][]byte {
	if x != nil {
		return x.NotFoundStreamIds
	}
	return nil
}

type ListCDCStreamsRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId *string `protobuf:"bytes,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
}

func (x *ListCDCStreamsRequestPB) Reset() {
	*x = ListCDCStreamsRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCDCStreamsRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCDCStreamsRequestPB) ProtoMessage() {}

func (x *ListCDCStreamsRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCDCStreamsRequestPB.ProtoReflect.Descriptor instead.
func (*ListCDCStreamsRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{7}
}

func (x *ListCDCStreamsRequestPB) GetTableId() string {
	if x != nil && x.TableId != nil {
		return *x.TableId
	}
	return ""
}

type ListCDCStreamsResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The error, if an error occurred with this request.
	Error   *MasterErrorPB     `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Streams []*CDCStreamInfoPB `protobuf:"bytes,2,rep,name=streams" json:"streams,omitempty"`
}

func (x *ListCDCStreamsResponsePB) Reset() {
	*x = ListCDCStreamsResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCDCStreamsResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCDCStreamsResponsePB) ProtoMessage() {}

func (x *ListCDCStreamsResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCDCStreamsResponsePB.ProtoReflect.Descriptor instead.
func (*ListCDCStreamsResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{8}
}

func (x *ListCDCStreamsResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ListCDCStreamsResponsePB) GetStreams() []*CDCStreamInfoPB {
	if x != nil {
		return x.Streams
	}
	return nil
}

type GetCDCStreamRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId []byte `protobuf:"bytes,1,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
}

func (x *GetCDCStreamRequestPB) Reset() {
	*x = GetCDCStreamRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCDCStreamRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCDCStreamRequestPB) ProtoMessage() {}

func (x *GetCDCStreamRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCDCStreamRequestPB.ProtoReflect.Descriptor instead.
func (*GetCDCStreamRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{9}
}

func (x *GetCDCStreamRequestPB) GetStreamId() []byte {
	if x != nil {
		return x.StreamId
	}
	return nil
}

type GetCDCStreamResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The error, if an error occurred with this request.
	Error  *MasterErrorPB   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Stream *CDCStreamInfoPB `protobuf:"bytes,2,opt,name=stream" json:"stream,omitempty"`
}

func (x *GetCDCStreamResponsePB) Reset() {
	*x = GetCDCStreamResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCDCStreamResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCDCStreamResponsePB) ProtoMessage() {}

func (x *GetCDCStreamResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCDCStreamResponsePB.ProtoReflect.Descriptor instead.
func (*GetCDCStreamResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{10}
}

func (x *GetCDCStreamResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetCDCStreamResponsePB) GetStream() *CDCStreamInfoPB {
	if x != nil {
		return x.Stream
	}
	return nil
}

type UpdateCDCStreamRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId []byte               `protobuf:"bytes,1,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	Entry    *SysCDCStreamEntryPB `protobuf:"bytes,2,opt,name=entry" json:"entry,omitempty"`
}

func (x *UpdateCDCStreamRequestPB) Reset() {
	*x = UpdateCDCStreamRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCDCStreamRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCDCStreamRequestPB) ProtoMessage() {}

func (x *UpdateCDCStreamRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCDCStreamRequestPB.ProtoReflect.Descriptor instead.
func (*UpdateCDCStreamRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateCDCStreamRequestPB) GetStreamId() []byte {
	if x != nil {
		return x.StreamId
	}
	return nil
}

func (x *UpdateCDCStreamRequestPB) GetEntry() *SysCDCStreamEntryPB {
	if x != nil {
		return x.Entry
	}
	return nil
}

type UpdateCDCStreamResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (x *UpdateCDCStreamResponsePB) Reset() {
	*x = UpdateCDCStreamResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCDCStreamResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCDCStreamResponsePB) ProtoMessage() {}

func (x *UpdateCDCStreamResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCDCStreamResponsePB.ProtoReflect.Descriptor instead.
func (*UpdateCDCStreamResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateCDCStreamResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type SetupUniverseReplicationRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProducerId              *string       `protobuf:"bytes,1,opt,name=producer_id,json=producerId" json:"producer_id,omitempty"`
	ProducerMasterAddresses []*HostPortPB `protobuf:"bytes,2,rep,name=producer_master_addresses,json=producerMasterAddresses" json:"producer_master_addresses,omitempty"`
	ProducerTableIds        []string      `protobuf:"bytes,3,rep,name=producer_table_ids,json=producerTableIds" json:"producer_table_ids,omitempty"`
	// An id generated by the producer when BootstrapProducer rpc is called.
	ProducerBootstrapIds []string `protobuf:"bytes,4,rep,name=producer_bootstrap_ids,json=producerBootstrapIds" json:"producer_bootstrap_ids,omitempty"`
}

func (x *SetupUniverseReplicationRequestPB) Reset() {
	*x = SetupUniverseReplicationRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupUniverseReplicationRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupUniverseReplicationRequestPB) ProtoMessage() {}

func (x *SetupUniverseReplicationRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupUniverseReplicationRequestPB.ProtoReflect.Descriptor instead.
func (*SetupUniverseReplicationRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{13}
}

func (x *SetupUniverseReplicationRequestPB) GetProducerId() string {
	if x != nil && x.ProducerId != nil {
		return *x.ProducerId
	}
	return ""
}

func (x *SetupUniverseReplicationRequestPB) GetProducerMasterAddresses() []*HostPortPB {
	if x != nil {
		return x.ProducerMasterAddresses
	}
	return nil
}

func (x *SetupUniverseReplicationRequestPB) GetProducerTableIds() []string {
	if x != nil {
		return x.ProducerTableIds
	}
	return nil
}

func (x *SetupUniverseReplicationRequestPB) GetProducerBootstrapIds() []string {
	if x != nil {
		return x.ProducerBootstrapIds
	}
	return nil
}

type SetupUniverseReplicationResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (x *SetupUniverseReplicationResponsePB) Reset() {
	*x = SetupUniverseReplicationResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupUniverseReplicationResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupUniverseReplicationResponsePB) ProtoMessage() {}

func (x *SetupUniverseReplicationResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupUniverseReplicationResponsePB.ProtoReflect.Descriptor instead.
func (*SetupUniverseReplicationResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{14}
}

func (x *SetupUniverseReplicationResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type DeleteUniverseReplicationRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProducerId *string `protobuf:"bytes,1,opt,name=producer_id,json=producerId" json:"producer_id,omitempty"`
	Force      *bool   `protobuf:"varint,2,opt,name=force,def=0" json:"force,omitempty"`
}

// Default values for DeleteUniverseReplicationRequestPB fields.
const (
	Default_DeleteUniverseReplicationRequestPB_Force = bool(false)
)

func (x *DeleteUniverseReplicationRequestPB) Reset() {
	*x = DeleteUniverseReplicationRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUniverseReplicationRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUniverseReplicationRequestPB) ProtoMessage() {}

func (x *DeleteUniverseReplicationRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUniverseReplicationRequestPB.ProtoReflect.Descriptor instead.
func (*DeleteUniverseReplicationRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteUniverseReplicationRequestPB) GetProducerId() string {
	if x != nil && x.ProducerId != nil {
		return *x.ProducerId
	}
	return ""
}

func (x *DeleteUniverseReplicationRequestPB) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return Default_DeleteUniverseReplicationRequestPB_Force
}

type DeleteUniverseReplicationResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	// In case force is set, then still return any ignored warnings.
	Warnings []*AppStatusPB `protobuf:"bytes,2,rep,name=warnings" json:"warnings,omitempty"`
}

func (x *DeleteUniverseReplicationResponsePB) Reset() {
	*x = DeleteUniverseReplicationResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUniverseReplicationResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUniverseReplicationResponsePB) ProtoMessage() {}

func (x *DeleteUniverseReplicationResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUniverseReplicationResponsePB.ProtoReflect.Descriptor instead.
func (*DeleteUniverseReplicationResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteUniverseReplicationResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *DeleteUniverseReplicationResponsePB) GetWarnings() []*AppStatusPB {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type AlterUniverseReplicationRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProducerId *string `protobuf:"bytes,1,opt,name=producer_id,json=producerId" json:"producer_id,omitempty"`
	// The below options are currently mutually exclusive.  Only 1 operation at a time.
	ProducerMasterAddresses  []*HostPortPB `protobuf:"bytes,2,rep,name=producer_master_addresses,json=producerMasterAddresses" json:"producer_master_addresses,omitempty"`
	ProducerTableIdsToAdd    []string      `protobuf:"bytes,4,rep,name=producer_table_ids_to_add,json=producerTableIdsToAdd" json:"producer_table_ids_to_add,omitempty"`
	ProducerTableIdsToRemove []string      `protobuf:"bytes,5,rep,name=producer_table_ids_to_remove,json=producerTableIdsToRemove" json:"producer_table_ids_to_remove,omitempty"`
	NewProducerUniverseId    *string       `protobuf:"bytes,7,opt,name=new_producer_universe_id,json=newProducerUniverseId" json:"new_producer_universe_id,omitempty"`
	// Optional bootstrap ids for the add table operation.
	ProducerBootstrapIdsToAdd []string `protobuf:"bytes,6,rep,name=producer_bootstrap_ids_to_add,json=producerBootstrapIdsToAdd" json:"producer_bootstrap_ids_to_add,omitempty"`
}

func (x *AlterUniverseReplicationRequestPB) Reset() {
	*x = AlterUniverseReplicationRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterUniverseReplicationRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterUniverseReplicationRequestPB) ProtoMessage() {}

func (x *AlterUniverseReplicationRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterUniverseReplicationRequestPB.ProtoReflect.Descriptor instead.
func (*AlterUniverseReplicationRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{17}
}

func (x *AlterUniverseReplicationRequestPB) GetProducerId() string {
	if x != nil && x.ProducerId != nil {
		return *x.ProducerId
	}
	return ""
}

func (x *AlterUniverseReplicationRequestPB) GetProducerMasterAddresses() []*HostPortPB {
	if x != nil {
		return x.ProducerMasterAddresses
	}
	return nil
}

func (x *AlterUniverseReplicationRequestPB) GetProducerTableIdsToAdd() []string {
	if x != nil {
		return x.ProducerTableIdsToAdd
	}
	return nil
}

func (x *AlterUniverseReplicationRequestPB) GetProducerTableIdsToRemove() []string {
	if x != nil {
		return x.ProducerTableIdsToRemove
	}
	return nil
}

func (x *AlterUniverseReplicationRequestPB) GetNewProducerUniverseId() string {
	if x != nil && x.NewProducerUniverseId != nil {
		return *x.NewProducerUniverseId
	}
	return ""
}

func (x *AlterUniverseReplicationRequestPB) GetProducerBootstrapIdsToAdd() []string {
	if x != nil {
		return x.ProducerBootstrapIdsToAdd
	}
	return nil
}

type AlterUniverseReplicationResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (x *AlterUniverseReplicationResponsePB) Reset() {
	*x = AlterUniverseReplicationResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterUniverseReplicationResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterUniverseReplicationResponsePB) ProtoMessage() {}

func (x *AlterUniverseReplicationResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterUniverseReplicationResponsePB.ProtoReflect.Descriptor instead.
func (*AlterUniverseReplicationResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{18}
}

func (x *AlterUniverseReplicationResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type SetUniverseReplicationEnabledRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProducerId *string `protobuf:"bytes,1,opt,name=producer_id,json=producerId" json:"producer_id,omitempty"`
	IsEnabled  *bool   `protobuf:"varint,2,opt,name=is_enabled,json=isEnabled" json:"is_enabled,omitempty"`
}

func (x *SetUniverseReplicationEnabledRequestPB) Reset() {
	*x = SetUniverseReplicationEnabledRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUniverseReplicationEnabledRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUniverseReplicationEnabledRequestPB) ProtoMessage() {}

func (x *SetUniverseReplicationEnabledRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUniverseReplicationEnabledRequestPB.ProtoReflect.Descriptor instead.
func (*SetUniverseReplicationEnabledRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{19}
}

func (x *SetUniverseReplicationEnabledRequestPB) GetProducerId() string {
	if x != nil && x.ProducerId != nil {
		return *x.ProducerId
	}
	return ""
}

func (x *SetUniverseReplicationEnabledRequestPB) GetIsEnabled() bool {
	if x != nil && x.IsEnabled != nil {
		return *x.IsEnabled
	}
	return false
}

type SetUniverseReplicationEnabledResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (x *SetUniverseReplicationEnabledResponsePB) Reset() {
	*x = SetUniverseReplicationEnabledResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUniverseReplicationEnabledResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUniverseReplicationEnabledResponsePB) ProtoMessage() {}

func (x *SetUniverseReplicationEnabledResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUniverseReplicationEnabledResponsePB.ProtoReflect.Descriptor instead.
func (*SetUniverseReplicationEnabledResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{20}
}

func (x *SetUniverseReplicationEnabledResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetUniverseReplicationRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProducerId *string `protobuf:"bytes,1,opt,name=producer_id,json=producerId" json:"producer_id,omitempty"`
}

func (x *GetUniverseReplicationRequestPB) Reset() {
	*x = GetUniverseReplicationRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUniverseReplicationRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUniverseReplicationRequestPB) ProtoMessage() {}

func (x *GetUniverseReplicationRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUniverseReplicationRequestPB.ProtoReflect.Descriptor instead.
func (*GetUniverseReplicationRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{21}
}

func (x *GetUniverseReplicationRequestPB) GetProducerId() string {
	if x != nil && x.ProducerId != nil {
		return *x.ProducerId
	}
	return ""
}

type GetUniverseReplicationResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB                 `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Entry *SysUniverseReplicationEntryPB `protobuf:"bytes,2,opt,name=entry" json:"entry,omitempty"`
}

func (x *GetUniverseReplicationResponsePB) Reset() {
	*x = GetUniverseReplicationResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUniverseReplicationResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUniverseReplicationResponsePB) ProtoMessage() {}

func (x *GetUniverseReplicationResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUniverseReplicationResponsePB.ProtoReflect.Descriptor instead.
func (*GetUniverseReplicationResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{22}
}

func (x *GetUniverseReplicationResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetUniverseReplicationResponsePB) GetEntry() *SysUniverseReplicationEntryPB {
	if x != nil {
		return x.Entry
	}
	return nil
}

type IsSetupUniverseReplicationDoneRequestPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProducerId *string `protobuf:"bytes,1,opt,name=producer_id,json=producerId" json:"producer_id,omitempty"`
}

func (x *IsSetupUniverseReplicationDoneRequestPB) Reset() {
	*x = IsSetupUniverseReplicationDoneRequestPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsSetupUniverseReplicationDoneRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSetupUniverseReplicationDoneRequestPB) ProtoMessage() {}

func (x *IsSetupUniverseReplicationDoneRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsSetupUniverseReplicationDoneRequestPB.ProtoReflect.Descriptor instead.
func (*IsSetupUniverseReplicationDoneRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{23}
}

func (x *IsSetupUniverseReplicationDoneRequestPB) GetProducerId() string {
	if x != nil && x.ProducerId != nil {
		return *x.ProducerId
	}
	return ""
}

type IsSetupUniverseReplicationDoneResponsePB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	// True if the universe is properly setup for replication, false otherwise.
	Done *bool `protobuf:"varint,2,opt,name=done" json:"done,omitempty"`
	// The more specific error that occurred during replication, or OK if we succeeded.
	ReplicationError *AppStatusPB `protobuf:"bytes,3,opt,name=replication_error,json=replicationError" json:"replication_error,omitempty"`
}

func (x *IsSetupUniverseReplicationDoneResponsePB) Reset() {
	*x = IsSetupUniverseReplicationDoneResponsePB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yb_master_master_replication_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsSetupUniverseReplicationDoneResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSetupUniverseReplicationDoneResponsePB) ProtoMessage() {}

func (x *IsSetupUniverseReplicationDoneResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_replication_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsSetupUniverseReplicationDoneResponsePB.ProtoReflect.Descriptor instead.
func (*IsSetupUniverseReplicationDoneResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_replication_proto_rawDescGZIP(), []int{24}
}

func (x *IsSetupUniverseReplicationDoneResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *IsSetupUniverseReplicationDoneResponsePB) GetDone() bool {
	if x != nil && x.Done != nil {
		return *x.Done
	}
	return false
}

func (x *IsSetupUniverseReplicationDoneResponsePB) GetReplicationError() *AppStatusPB {
	if x != nil {
		return x.ReplicationError
	}
	return nil
}

var File_yb_master_master_replication_proto protoreflect.FileDescriptor

var file_yb_master_master_replication_proto_rawDesc = []byte{
	0x0a, 0x22, 0x79, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x1a,
	0x1a, 0x79, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x79, 0x62, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x79, 0x62, 0x2f, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x79, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x79,
	0x62, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x0f, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x42, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x37, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x44, 0x43,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x42, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6b, 0x0a, 0x20, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x47, 0x0a, 0x10,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x42, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x53, 0x0a, 0x21, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xb9, 0x01, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x50, 0x42, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x49, 0x0a, 0x0d, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53,
	0x79, 0x73, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x50, 0x42, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x68, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x22, 0x54, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x05, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x7c, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x11, 0x6e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x73, 0x22, 0x34, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x44, 0x43, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x42, 0x52, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x22, 0x34, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79,
	0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x32, 0x0a,
	0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x42, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x22, 0x6d, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x44, 0x43, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x62, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x73, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x42, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x22, 0x4b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79,
	0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xf4, 0x01,
	0x0a, 0x21, 0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x42, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x19, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x79, 0x62, 0x2e, 0x48, 0x6f, 0x73,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x42, 0x52, 0x17, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x34,
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x49, 0x64, 0x73, 0x22, 0x54, 0x0a, 0x22, 0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x62, 0x0a, 0x22, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x82,
	0x01, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x73, 0x22, 0x85, 0x03, 0x0a, 0x21, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x55, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x19, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x79, 0x62, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x42, 0x52, 0x17, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x19, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x5f,
	0x61, 0x64, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x54, 0x6f, 0x41, 0x64, 0x64,
	0x12, 0x3e, 0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x12, 0x37, 0x0a, 0x18, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x5f, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x6e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x55,
	0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x1d, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x5f,
	0x69, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x19, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x49, 0x64, 0x73, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x22, 0x54, 0x0a, 0x22, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x68, 0x0a, 0x26, 0x53, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x59, 0x0a, 0x27, 0x53,
	0x65, 0x74, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x42, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12,
	0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x3e, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x42, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22,
	0x4a, 0x0a, 0x27, 0x49, 0x73, 0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x28,
	0x49, 0x73, 0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50,
	0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x3c, 0x0a, 0x11,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xe6, 0x0a, 0x0a, 0x11, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x74, 0x0a, 0x17, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x2e, 0x79, 0x62,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x2c, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x5c, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x44, 0x43, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x24,
	0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x42, 0x12, 0x5c, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x44,
	0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x24, 0x2e, 0x79,
	0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x42, 0x12, 0x59, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x12, 0x22, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x53, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x20, 0x2e,
	0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x44, 0x43,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a,
	0x21, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x42, 0x12, 0x5c, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x44, 0x43, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x44, 0x43, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x24, 0x2e, 0x79, 0x62, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x44, 0x43,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42,
	0x12, 0x77, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x79,
	0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x2d, 0x2e, 0x79, 0x62, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x7a, 0x0a, 0x19, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x2e, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x77, 0x0a, 0x18, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x55, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2c, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a,
	0x2d, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x74, 0x65,
	0x72, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x86,
	0x01, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x31, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74,
	0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x42, 0x1a, 0x32, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x71, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x2b, 0x2e,
	0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x89, 0x01, 0x0a, 0x1e, 0x49,
	0x73, 0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x2e,
	0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x42, 0x1a, 0x33, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x73,
	0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x1a, 0x1b, 0xda, 0xb5, 0x18, 0x17, 0x79, 0x62, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72,
}

var (
	file_yb_master_master_replication_proto_rawDescOnce sync.Once
	file_yb_master_master_replication_proto_rawDescData = file_yb_master_master_replication_proto_rawDesc
)

func file_yb_master_master_replication_proto_rawDescGZIP() []byte {
	file_yb_master_master_replication_proto_rawDescOnce.Do(func() {
		file_yb_master_master_replication_proto_rawDescData = protoimpl.X.CompressGZIP(file_yb_master_master_replication_proto_rawDescData)
	})
	return file_yb_master_master_replication_proto_rawDescData
}

var file_yb_master_master_replication_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_yb_master_master_replication_proto_goTypes = []interface{}{
	(*CDCStreamInfoPB)(nil),                          // 0: yb.master.CDCStreamInfoPB
	(*ValidateReplicationInfoRequestPB)(nil),         // 1: yb.master.ValidateReplicationInfoRequestPB
	(*ValidateReplicationInfoResponsePB)(nil),        // 2: yb.master.ValidateReplicationInfoResponsePB
	(*MasterCreateCDCStreamRequestPB)(nil),                 // 3: yb.master.MasterCreateCDCStreamRequestPB
	(*MasterCreateCDCStreamResponsePB)(nil),                // 4: yb.master.MasterCreateCDCStreamResponsePB
	(*MasterDeleteCDCStreamRequestPB)(nil),                 // 5: yb.master.MasterDeleteCDCStreamRequestPB
	(*MasterDeleteCDCStreamResponsePB)(nil),                // 6: yb.master.MasterDeleteCDCStreamResponsePB
	(*ListCDCStreamsRequestPB)(nil),                  // 7: yb.master.ListCDCStreamsRequestPB
	(*ListCDCStreamsResponsePB)(nil),                 // 8: yb.master.ListCDCStreamsResponsePB
	(*GetCDCStreamRequestPB)(nil),                    // 9: yb.master.GetCDCStreamRequestPB
	(*GetCDCStreamResponsePB)(nil),                   // 10: yb.master.GetCDCStreamResponsePB
	(*UpdateCDCStreamRequestPB)(nil),                 // 11: yb.master.UpdateCDCStreamRequestPB
	(*UpdateCDCStreamResponsePB)(nil),                // 12: yb.master.UpdateCDCStreamResponsePB
	(*SetupUniverseReplicationRequestPB)(nil),        // 13: yb.master.SetupUniverseReplicationRequestPB
	(*SetupUniverseReplicationResponsePB)(nil),       // 14: yb.master.SetupUniverseReplicationResponsePB
	(*DeleteUniverseReplicationRequestPB)(nil),       // 15: yb.master.DeleteUniverseReplicationRequestPB
	(*DeleteUniverseReplicationResponsePB)(nil),      // 16: yb.master.DeleteUniverseReplicationResponsePB
	(*AlterUniverseReplicationRequestPB)(nil),        // 17: yb.master.AlterUniverseReplicationRequestPB
	(*AlterUniverseReplicationResponsePB)(nil),       // 18: yb.master.AlterUniverseReplicationResponsePB
	(*SetUniverseReplicationEnabledRequestPB)(nil),   // 19: yb.master.SetUniverseReplicationEnabledRequestPB
	(*SetUniverseReplicationEnabledResponsePB)(nil),  // 20: yb.master.SetUniverseReplicationEnabledResponsePB
	(*GetUniverseReplicationRequestPB)(nil),          // 21: yb.master.GetUniverseReplicationRequestPB
	(*GetUniverseReplicationResponsePB)(nil),         // 22: yb.master.GetUniverseReplicationResponsePB
	(*IsSetupUniverseReplicationDoneRequestPB)(nil),  // 23: yb.master.IsSetupUniverseReplicationDoneRequestPB
	(*IsSetupUniverseReplicationDoneResponsePB)(nil), // 24: yb.master.IsSetupUniverseReplicationDoneResponsePB
	(*CDCStreamOptionsPB)(nil),                       // 25: yb.master.CDCStreamOptionsPB
	(*ReplicationInfoPB)(nil),                        // 26: yb.master.ReplicationInfoPB
	(*MasterErrorPB)(nil),                            // 27: yb.master.MasterErrorPB
	(SysCDCStreamEntryPB_State)(0),                   // 28: yb.master.SysCDCStreamEntryPB.State
	(*SysCDCStreamEntryPB)(nil),                      // 29: yb.master.SysCDCStreamEntryPB
	(*HostPortPB)(nil),                               // 30: yb.HostPortPB
	(*AppStatusPB)(nil),                              // 31: yb.AppStatusPB
	(*SysUniverseReplicationEntryPB)(nil),            // 32: yb.master.SysUniverseReplicationEntryPB
}
var file_yb_master_master_replication_proto_depIdxs = []int32{
	25, // 0: yb.master.CDCStreamInfoPB.options:type_name -> yb.master.CDCStreamOptionsPB
	26, // 1: yb.master.ValidateReplicationInfoRequestPB.replication_info:type_name -> yb.master.ReplicationInfoPB
	27, // 2: yb.master.ValidateReplicationInfoResponsePB.error:type_name -> yb.master.MasterErrorPB
	25, // 3: yb.master.MasterCreateCDCStreamRequestPB.options:type_name -> yb.master.CDCStreamOptionsPB
	28, // 4: yb.master.MasterCreateCDCStreamRequestPB.initial_state:type_name -> yb.master.SysCDCStreamEntryPB.State
	27, // 5: yb.master.MasterCreateCDCStreamResponsePB.error:type_name -> yb.master.MasterErrorPB
	27, // 6: yb.master.MasterDeleteCDCStreamResponsePB.error:type_name -> yb.master.MasterErrorPB
	27, // 7: yb.master.ListCDCStreamsResponsePB.error:type_name -> yb.master.MasterErrorPB
	0,  // 8: yb.master.ListCDCStreamsResponsePB.streams:type_name -> yb.master.CDCStreamInfoPB
	27, // 9: yb.master.GetCDCStreamResponsePB.error:type_name -> yb.master.MasterErrorPB
	0,  // 10: yb.master.GetCDCStreamResponsePB.stream:type_name -> yb.master.CDCStreamInfoPB
	29, // 11: yb.master.UpdateCDCStreamRequestPB.entry:type_name -> yb.master.SysCDCStreamEntryPB
	27, // 12: yb.master.UpdateCDCStreamResponsePB.error:type_name -> yb.master.MasterErrorPB
	30, // 13: yb.master.SetupUniverseReplicationRequestPB.producer_master_addresses:type_name -> yb.HostPortPB
	27, // 14: yb.master.SetupUniverseReplicationResponsePB.error:type_name -> yb.master.MasterErrorPB
	27, // 15: yb.master.DeleteUniverseReplicationResponsePB.error:type_name -> yb.master.MasterErrorPB
	31, // 16: yb.master.DeleteUniverseReplicationResponsePB.warnings:type_name -> yb.AppStatusPB
	30, // 17: yb.master.AlterUniverseReplicationRequestPB.producer_master_addresses:type_name -> yb.HostPortPB
	27, // 18: yb.master.AlterUniverseReplicationResponsePB.error:type_name -> yb.master.MasterErrorPB
	27, // 19: yb.master.SetUniverseReplicationEnabledResponsePB.error:type_name -> yb.master.MasterErrorPB
	27, // 20: yb.master.GetUniverseReplicationResponsePB.error:type_name -> yb.master.MasterErrorPB
	32, // 21: yb.master.GetUniverseReplicationResponsePB.entry:type_name -> yb.master.SysUniverseReplicationEntryPB
	27, // 22: yb.master.IsSetupUniverseReplicationDoneResponsePB.error:type_name -> yb.master.MasterErrorPB
	31, // 23: yb.master.IsSetupUniverseReplicationDoneResponsePB.replication_error:type_name -> yb.AppStatusPB
	1,  // 24: yb.master.MasterReplication.ValidateReplicationInfo:input_type -> yb.master.ValidateReplicationInfoRequestPB
	3,  // 25: yb.master.MasterReplication.CreateCDCStream:input_type -> yb.master.MasterCreateCDCStreamRequestPB
	5,  // 26: yb.master.MasterReplication.DeleteCDCStream:input_type -> yb.master.MasterDeleteCDCStreamRequestPB
	7,  // 27: yb.master.MasterReplication.ListCDCStreams:input_type -> yb.master.ListCDCStreamsRequestPB
	9,  // 28: yb.master.MasterReplication.GetCDCStream:input_type -> yb.master.GetCDCStreamRequestPB
	11, // 29: yb.master.MasterReplication.UpdateCDCStream:input_type -> yb.master.UpdateCDCStreamRequestPB
	13, // 30: yb.master.MasterReplication.SetupUniverseReplication:input_type -> yb.master.SetupUniverseReplicationRequestPB
	15, // 31: yb.master.MasterReplication.DeleteUniverseReplication:input_type -> yb.master.DeleteUniverseReplicationRequestPB
	17, // 32: yb.master.MasterReplication.AlterUniverseReplication:input_type -> yb.master.AlterUniverseReplicationRequestPB
	19, // 33: yb.master.MasterReplication.SetUniverseReplicationEnabled:input_type -> yb.master.SetUniverseReplicationEnabledRequestPB
	21, // 34: yb.master.MasterReplication.GetUniverseReplication:input_type -> yb.master.GetUniverseReplicationRequestPB
	23, // 35: yb.master.MasterReplication.IsSetupUniverseReplicationDone:input_type -> yb.master.IsSetupUniverseReplicationDoneRequestPB
	2,  // 36: yb.master.MasterReplication.ValidateReplicationInfo:output_type -> yb.master.ValidateReplicationInfoResponsePB
	4,  // 37: yb.master.MasterReplication.CreateCDCStream:output_type -> yb.master.MasterCreateCDCStreamResponsePB
	6,  // 38: yb.master.MasterReplication.DeleteCDCStream:output_type -> yb.master.MasterDeleteCDCStreamResponsePB
	8,  // 39: yb.master.MasterReplication.ListCDCStreams:output_type -> yb.master.ListCDCStreamsResponsePB
	10, // 40: yb.master.MasterReplication.GetCDCStream:output_type -> yb.master.GetCDCStreamResponsePB
	12, // 41: yb.master.MasterReplication.UpdateCDCStream:output_type -> yb.master.UpdateCDCStreamResponsePB
	14, // 42: yb.master.MasterReplication.SetupUniverseReplication:output_type -> yb.master.SetupUniverseReplicationResponsePB
	16, // 43: yb.master.MasterReplication.DeleteUniverseReplication:output_type -> yb.master.DeleteUniverseReplicationResponsePB
	18, // 44: yb.master.MasterReplication.AlterUniverseReplication:output_type -> yb.master.AlterUniverseReplicationResponsePB
	20, // 45: yb.master.MasterReplication.SetUniverseReplicationEnabled:output_type -> yb.master.SetUniverseReplicationEnabledResponsePB
	22, // 46: yb.master.MasterReplication.GetUniverseReplication:output_type -> yb.master.GetUniverseReplicationResponsePB
	24, // 47: yb.master.MasterReplication.IsSetupUniverseReplicationDone:output_type -> yb.master.IsSetupUniverseReplicationDoneResponsePB
	36, // [36:48] is the sub-list for method output_type
	24, // [24:36] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_yb_master_master_replication_proto_init() }
func file_yb_master_master_replication_proto_init() {
	if File_yb_master_master_replication_proto != nil {
		return
	}
	file_yb_common_common_net_proto_init()
	file_yb_common_wire_protocol_proto_init()
	file_yb_master_catalog_entity_info_proto_init()
	file_yb_master_master_types_proto_init()
	file_yb_rpc_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yb_master_master_replication_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDCStreamInfoPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateReplicationInfoRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateReplicationInfoResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterCreateCDCStreamRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterCreateCDCStreamResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterDeleteCDCStreamRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterDeleteCDCStreamResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCDCStreamsRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCDCStreamsResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCDCStreamRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCDCStreamResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCDCStreamRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCDCStreamResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupUniverseReplicationRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupUniverseReplicationResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUniverseReplicationRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUniverseReplicationResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterUniverseReplicationRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterUniverseReplicationResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUniverseReplicationEnabledRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUniverseReplicationEnabledResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUniverseReplicationRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUniverseReplicationResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsSetupUniverseReplicationDoneRequestPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yb_master_master_replication_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsSetupUniverseReplicationDoneResponsePB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yb_master_master_replication_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yb_master_master_replication_proto_goTypes,
		DependencyIndexes: file_yb_master_master_replication_proto_depIdxs,
		MessageInfos:      file_yb_master_master_replication_proto_msgTypes,
	}.Build()
	File_yb_master_master_replication_proto = out.File
	file_yb_master_master_replication_proto_rawDesc = nil
	file_yb_master_master_replication_proto_goTypes = nil
	file_yb_master_master_replication_proto_depIdxs = nil
}
